import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3501");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3502");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.lang.String str17 = properties0.getProperty("{=hi!}");
        java.io.InputStream inputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3503");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        long long12 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3504");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        properties0.clear();
        java.util.Set<java.lang.Object> objSet23 = properties0.keySet();
        java.lang.Class<?> wildcardClass24 = properties0.getClass();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3505");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setMaxActives((int) (byte) 100);
        atomikosProperties28.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str42 = atomikosProperties28.getLogBaseDir();
        atomikosProperties28.setForceShutdownOnVmExit(false);
        long long45 = atomikosProperties28.getDefaultJtaTimeout();
        java.lang.Object obj46 = properties0.get((java.lang.Object) long45);
        java.lang.Object obj49 = properties0.setProperty("{[]=0.0}", "{true=true}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3506");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean60 = atomikosProperties42.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3507");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        boolean boolean6 = properties0.isEmpty();
        java.lang.Object obj7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = properties0.containsKey(obj7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3508");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties0.keys();
        java.lang.String str37 = properties0.toString();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Collection<java.lang.Object> objCollection40 = properties38.values();
        java.util.Properties properties41 = new java.util.Properties(properties38);
        properties41.clear();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        int int47 = properties43.size();
        java.util.Properties properties48 = new java.util.Properties(properties43);
        java.util.Set<java.lang.String> strSet49 = properties43.stringPropertyNames();
        java.util.Set<java.lang.String> strSet50 = properties43.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties51.elements();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties56.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties56.elements();
        java.lang.Object obj62 = properties43.replace((java.lang.Object) objEnumeration55, (java.lang.Object) objEnumeration61);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Properties properties65 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.io.InputStream inputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties65.load(inputStream67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{hi!=[]}" + "'", str37, "{hi!=[]}");
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration66);
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3509");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Enumeration<?> wildcardEnumeration5 = properties0.propertyNames();
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3510");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer9, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3511");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        properties3.clear();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        java.util.Set<java.lang.String> strSet11 = properties5.stringPropertyNames();
        java.util.Set<java.lang.String> strSet12 = properties5.stringPropertyNames();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties18.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties18.elements();
        java.lang.Object obj24 = properties5.replace((java.lang.Object) objEnumeration17, (java.lang.Object) objEnumeration23);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Set<java.lang.Object> objSet26 = properties3.keySet();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.store(outputStream27, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet26);
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3512");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3513");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties46.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) properties39, (java.lang.Object) boolean62);
        java.lang.Object obj64 = properties0.remove((java.lang.Object) properties39);
        java.lang.String str66 = properties0.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties0.elements();
        java.lang.String str69 = properties0.toString();
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3514");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties11.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        int int25 = atomikosProperties17.getMaxActives();
        java.lang.Object obj26 = properties11.remove((java.lang.Object) int25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties11.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.Object obj41 = properties28.put((java.lang.Object) wildcardEnumeration39, (java.lang.Object) 10.0d);
        java.lang.Object obj42 = properties0.put((java.lang.Object) objEntrySet27, (java.lang.Object) properties28);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        boolean boolean49 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties43.entrySet();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.lang.Object obj57 = properties51.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        boolean boolean61 = properties43.remove((java.lang.Object) properties51, (java.lang.Object) atomikosProperties58);
        java.util.Properties properties62 = new java.util.Properties(properties51);
        int int63 = properties62.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = atomikosProperties65.isSerialJtaTransactions();
        java.lang.String str69 = atomikosProperties65.getService();
        boolean boolean70 = atomikosProperties65.isEnableLogging();
        java.lang.String str71 = atomikosProperties65.getTransactionManagerUniqueName();
        boolean boolean72 = properties62.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setMaxActives((int) (short) -1);
        boolean boolean75 = atomikosProperties65.isForceShutdownOnVmExit();
        boolean boolean76 = atomikosProperties65.isEnableLogging();
        long long77 = atomikosProperties65.getDefaultJtaTimeout();
        java.lang.Object obj78 = properties0.remove((java.lang.Object) long77);
        java.io.OutputStream outputStream79 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream79, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10000L + "'", long77 == 10000L);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3515");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long18 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties7.asProperties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.io.Writer writer23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.store(writer23, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3516");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.lang.String str35 = properties9.toString();
        java.lang.String str36 = properties9.toString();
        java.lang.Class<?> wildcardClass37 = properties9.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3517");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.lang.String str41 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj49 = properties19.get((java.lang.Object) atomikosProperties42);
        atomikosProperties42.setLogBaseName("{{}={}}");
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3518");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3519");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseName("{hi!=[], {}={}}");
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3520");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<?> wildcardEnumeration23 = properties3.propertyNames();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.lang.String str32 = properties24.getProperty("hi!");
        java.lang.String str34 = properties24.getProperty("");
        java.lang.Object obj37 = properties24.setProperty("{{}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean38 = properties3.containsValue((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3521");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.lang.String str6 = properties0.toString();
        java.lang.Object obj9 = properties0.replace((java.lang.Object) 10000L, (java.lang.Object) 50);
        java.util.Enumeration<?> wildcardEnumeration10 = properties0.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = atomikosProperties11.isSerialJtaTransactions();
        int int19 = atomikosProperties11.getMaxActives();
        boolean boolean20 = atomikosProperties11.isEnableLogging();
        long long21 = atomikosProperties11.getCheckpointInterval();
        java.lang.String str22 = atomikosProperties11.getService();
        java.util.Properties properties23 = atomikosProperties11.asProperties();
        java.lang.Object obj24 = properties0.remove((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setCheckpointInterval((long) 0);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{{}={}}" + "'", str6, "{{}={}}");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3522");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isThreadedTwoPhaseCommit();
        boolean boolean51 = atomikosProperties47.isForceShutdownOnVmExit();
        boolean boolean52 = properties41.contains((java.lang.Object) atomikosProperties47);
        java.util.Set<java.lang.Object> objSet53 = properties41.keySet();
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.save(outputStream54, "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objSet53);
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3523");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet14 = properties13.stringPropertyNames();
        java.io.PrintStream printStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.list(printStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3524");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties24.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj31 = properties24.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        int int37 = properties33.size();
        java.util.Properties properties38 = new java.util.Properties(properties33);
        java.util.Set<java.lang.String> strSet39 = properties33.stringPropertyNames();
        java.util.Set<java.lang.String> strSet40 = properties33.stringPropertyNames();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties41.elements();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties46.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties46.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties46.elements();
        java.lang.Object obj52 = properties33.replace((java.lang.Object) objEnumeration45, (java.lang.Object) objEnumeration51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties33.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str58 = atomikosProperties54.getService();
        boolean boolean59 = atomikosProperties54.isEnableLogging();
        java.lang.String str60 = atomikosProperties54.getLogBaseName();
        boolean boolean61 = properties33.containsKey((java.lang.Object) atomikosProperties54);
        java.lang.Object obj62 = null;
        java.lang.Object obj63 = properties24.getOrDefault((java.lang.Object) atomikosProperties54, obj62);
        java.util.Properties properties64 = atomikosProperties54.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        boolean boolean71 = properties66.containsValue((java.lang.Object) properties67);
        java.util.Enumeration<?> wildcardEnumeration72 = properties67.propertyNames();
        java.util.Properties properties73 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties67.keys();
        java.lang.Object obj75 = properties0.put((java.lang.Object) objEnumeration65, (java.lang.Object) properties67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass76 = obj75.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3525");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        boolean boolean36 = properties32.containsValue((java.lang.Object) "hi!");
        java.lang.String str38 = properties32.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.String str41 = properties32.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        java.lang.String str46 = atomikosProperties42.getService();
        boolean boolean47 = atomikosProperties42.isEnableLogging();
        java.util.Properties properties48 = atomikosProperties42.asProperties();
        atomikosProperties42.setForceShutdownOnVmExit(true);
        atomikosProperties42.setMaxActives((int) (short) -1);
        atomikosProperties42.setMaxTimeout((long) ' ');
        atomikosProperties42.setEnableLogging(false);
        atomikosProperties42.setService("{{}={}}");
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        boolean boolean65 = properties59.isEmpty();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection67 = properties66.values();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties66.keys();
        java.lang.Object obj69 = properties59.remove((java.lang.Object) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = atomikosProperties70.isSerialJtaTransactions();
        atomikosProperties70.setTransactionManagerUniqueName("hi!");
        java.lang.String str76 = atomikosProperties70.getLogBaseName();
        java.lang.String str77 = atomikosProperties70.getLogBaseName();
        boolean boolean78 = atomikosProperties70.isForceShutdownOnVmExit();
        long long79 = atomikosProperties70.getMaxTimeout();
        java.lang.String str80 = atomikosProperties70.getTransactionManagerUniqueName();
        java.lang.String str81 = atomikosProperties70.getLogBaseName();
        boolean boolean82 = atomikosProperties70.isThreadedTwoPhaseCommit();
        atomikosProperties70.setThreadedTwoPhaseCommit(false);
        boolean boolean85 = properties32.replace((java.lang.Object) atomikosProperties42, (java.lang.Object) properties59, (java.lang.Object) atomikosProperties70);
        java.util.Set<java.lang.String> strSet86 = properties32.stringPropertyNames();
        boolean boolean87 = properties0.containsValue((java.lang.Object) strSet86);
        java.util.Enumeration<?> wildcardEnumeration88 = properties0.propertyNames();
        java.io.PrintStream printStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 300000L + "'", long79 == 300000L);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration88);
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3526");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties11.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        int int25 = atomikosProperties17.getMaxActives();
        java.lang.Object obj26 = properties11.remove((java.lang.Object) int25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties11.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.Object obj41 = properties28.put((java.lang.Object) wildcardEnumeration39, (java.lang.Object) 10.0d);
        java.lang.Object obj42 = properties0.put((java.lang.Object) objEntrySet27, (java.lang.Object) properties28);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        java.lang.String str47 = properties43.toString();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.lang.Object obj55 = properties48.setProperty("tmlog", "");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.util.Collection<java.lang.Object> objCollection57 = properties43.values();
        java.util.Collection<java.lang.Object> objCollection58 = properties43.values();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Properties properties61 = new java.util.Properties(properties0);
        java.io.InputStream inputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(objSet59);
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3527");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties17.isEmpty();
        java.lang.Object obj23 = properties17.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = properties9.remove((java.lang.Object) properties17, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        int int29 = properties28.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = atomikosProperties31.isSerialJtaTransactions();
        java.lang.String str35 = atomikosProperties31.getService();
        boolean boolean36 = atomikosProperties31.isEnableLogging();
        java.lang.String str37 = atomikosProperties31.getTransactionManagerUniqueName();
        boolean boolean38 = properties28.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties31);
        atomikosProperties31.setMaxActives((int) (short) -1);
        boolean boolean41 = atomikosProperties31.isThreadedTwoPhaseCommit();
        atomikosProperties31.setDefaultJtaTimeout((long) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        int int48 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setSerialJtaTransactions(true);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        boolean boolean57 = properties51.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.util.Set<java.lang.Object> objSet59 = properties51.keySet();
        boolean boolean60 = properties0.replace((java.lang.Object) atomikosProperties31, (java.lang.Object) atomikosProperties44, (java.lang.Object) objSet59);
        int int61 = atomikosProperties44.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3528");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        java.lang.String str27 = atomikosProperties23.getService();
        boolean boolean28 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) (byte) 100);
        java.lang.String str31 = atomikosProperties23.getLogBaseName();
        boolean boolean32 = properties15.contains((java.lang.Object) atomikosProperties23);
        boolean boolean33 = properties5.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Properties properties34 = new java.util.Properties(properties5);
        boolean boolean35 = properties34.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3529");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties46.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) properties39, (java.lang.Object) boolean62);
        java.lang.Object obj64 = properties0.remove((java.lang.Object) properties39);
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        boolean boolean69 = properties66.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        atomikosProperties70.setThreadedTwoPhaseCommit(true);
        atomikosProperties70.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties77 = atomikosProperties70.asProperties();
        int int78 = atomikosProperties70.getMaxActives();
        atomikosProperties70.setService("hi!");
        java.lang.Object obj81 = properties66.get((java.lang.Object) atomikosProperties70);
        java.lang.Object obj82 = properties39.put((java.lang.Object) "{{}={}}", (java.lang.Object) properties66);
        java.util.Set<java.lang.Object> objSet83 = properties39.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objSet83);
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3530");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=[], {}={}}");
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setDefaultJtaTimeout((long) 35);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3531");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.lang.String str35 = atomikosProperties22.getLogBaseDir();
        boolean boolean36 = atomikosProperties22.isForceShutdownOnVmExit();
        long long37 = atomikosProperties22.getMaxTimeout();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3532");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        boolean boolean31 = properties5.isEmpty();
        java.lang.String str34 = properties5.getProperty("{{}=tmlog}", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3533");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.lang.String str19 = atomikosProperties7.getService();
        atomikosProperties7.setLogBaseName("{{}=tmlog}");
        atomikosProperties7.setCheckpointInterval(300000L);
        atomikosProperties7.setService("{{}=tmlog}");
        atomikosProperties7.setThreadedTwoPhaseCommit(false);
        boolean boolean28 = atomikosProperties7.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3534");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean12 = properties9.isEmpty();
        java.lang.Object obj15 = properties9.setProperty("", "hi!");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.lang.Object obj26 = properties16.remove((java.lang.Object) properties23);
        java.lang.Object obj27 = properties9.get((java.lang.Object) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties23.keys();
        java.lang.Object obj29 = properties0.get((java.lang.Object) properties23);
        java.io.Writer writer30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.store(writer30, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3535");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        properties0.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.elements();
        java.util.Properties properties26 = new java.util.Properties(properties0);
        java.io.InputStream inputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3536");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setMaxActives((int) (short) 1);
        java.lang.String str19 = atomikosProperties7.getService();
        atomikosProperties7.setCheckpointInterval((long) '4');
        boolean boolean22 = atomikosProperties7.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3537");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties14.elements();
        java.lang.Object obj69 = properties14.setProperty("{hi!=[]}", "");
        java.util.Set<java.lang.String> strSet70 = properties14.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration71 = properties14.propertyNames();
        properties14.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = atomikosProperties73.isSerialJtaTransactions();
        java.lang.String str77 = atomikosProperties73.getService();
        boolean boolean78 = atomikosProperties73.isEnableLogging();
        atomikosProperties73.setCheckpointInterval((long) (byte) 100);
        atomikosProperties73.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties73.setMaxTimeout(10000L);
        atomikosProperties73.setEnableLogging(false);
        long long87 = atomikosProperties73.getDefaultJtaTimeout();
        atomikosProperties73.setLogBaseName("hi!");
        atomikosProperties73.setTransactionManagerUniqueName("{hi!=[]}");
        atomikosProperties73.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        boolean boolean94 = properties14.equals((java.lang.Object) atomikosProperties73);
        atomikosProperties73.setSerialJtaTransactions(true);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 10000L + "'", long87 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3538");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties10.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Set<java.lang.String> strSet17 = properties10.stringPropertyNames();
        boolean boolean18 = properties10.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        boolean boolean26 = properties20.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        boolean boolean31 = properties28.isEmpty();
        java.lang.Object obj34 = properties28.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = properties20.remove((java.lang.Object) properties28, (java.lang.Object) atomikosProperties35);
        java.util.Properties properties39 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties28.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = atomikosProperties41.isSerialJtaTransactions();
        int int49 = atomikosProperties41.getMaxActives();
        atomikosProperties41.setTransactionManagerUniqueName("tmlog");
        int int52 = atomikosProperties41.getMaxActives();
        int int53 = atomikosProperties41.getMaxActives();
        boolean boolean54 = atomikosProperties41.isForceShutdownOnVmExit();
        java.lang.Object obj55 = properties0.replace((java.lang.Object) objEnumeration40, (java.lang.Object) atomikosProperties41);
        java.lang.Object obj58 = properties0.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 50 + "'", int53 == 50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3539");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        java.io.Reader reader4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3540");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.Object obj15 = properties14.clone();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        java.lang.Object obj22 = properties16.setProperty("", "hi!");
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean29 = properties23.isEmpty();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.lang.Object obj33 = properties23.remove((java.lang.Object) properties30);
        java.lang.Object obj34 = properties16.get((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        long long44 = atomikosProperties36.getCheckpointInterval();
        java.lang.Object obj45 = new java.lang.Object();
        boolean boolean47 = properties30.replace((java.lang.Object) long44, obj45, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        atomikosProperties48.setTransactionManagerUniqueName("hi!");
        java.lang.String str54 = atomikosProperties48.getLogBaseName();
        java.lang.String str55 = atomikosProperties48.getLogBaseName();
        boolean boolean56 = atomikosProperties48.isSerialJtaTransactions();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet61 = properties58.stringPropertyNames();
        boolean boolean62 = properties57.containsValue((java.lang.Object) properties58);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean67 = properties63.containsValue((java.lang.Object) "hi!");
        boolean boolean68 = properties58.contains((java.lang.Object) "hi!");
        boolean boolean69 = properties30.remove((java.lang.Object) atomikosProperties48, (java.lang.Object) boolean68);
        java.util.Properties properties70 = new java.util.Properties(properties30);
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties71.keys();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Collection<java.lang.Object> objCollection77 = properties71.values();
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        boolean boolean81 = properties78.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties78.elements();
        java.lang.Object obj85 = properties78.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.lang.String str87 = properties78.getProperty("hi!");
        java.util.Properties properties88 = new java.util.Properties();
        java.lang.Object obj90 = properties88.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection91 = properties88.values();
        boolean boolean92 = properties78.contains((java.lang.Object) properties88);
        properties88.clear();
        boolean boolean94 = properties71.contains((java.lang.Object) properties88);
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties88.elements();
        boolean boolean96 = properties14.remove((java.lang.Object) properties70, (java.lang.Object) properties88);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(objCollection91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objEnumeration95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3541");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str19 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setMaxActives(50);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        java.lang.String str24 = atomikosProperties15.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3542");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = properties7.isEmpty();
        int int9 = properties7.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties7.entrySet();
        java.lang.Object obj11 = properties7.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(obj11);
// flaky:         org.junit.Assert.assertEquals(obj11.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3543");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.lang.Object obj49 = properties40.put((java.lang.Object) strSet47, (java.lang.Object) 0.0d);
        boolean boolean50 = properties0.equals((java.lang.Object) 0.0d);
        int int51 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties59 = atomikosProperties52.asProperties();
        int int60 = atomikosProperties52.getMaxActives();
        atomikosProperties52.setService("hi!");
        long long63 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.setTransactionManagerUniqueName("hi!");
        atomikosProperties52.setEnableLogging(false);
        atomikosProperties52.setMaxActives((int) 'a');
        boolean boolean70 = atomikosProperties52.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties78 = atomikosProperties71.asProperties();
        int int79 = atomikosProperties71.getMaxActives();
        atomikosProperties71.setService("hi!");
        long long82 = atomikosProperties71.getMaxTimeout();
        atomikosProperties71.setTransactionManagerUniqueName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        boolean boolean88 = atomikosProperties85.isSerialJtaTransactions();
        java.lang.String str89 = atomikosProperties85.getService();
        boolean boolean90 = atomikosProperties85.isEnableLogging();
        java.lang.String str91 = atomikosProperties85.getLogBaseName();
        java.lang.String str92 = atomikosProperties85.getLogBaseName();
        boolean boolean93 = properties0.replace((java.lang.Object) atomikosProperties52, (java.lang.Object) atomikosProperties71, (java.lang.Object) atomikosProperties85);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream94, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 50 + "'", int60 == 50);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 300000L + "'", long63 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 300000L + "'", long82 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "tmlog" + "'", str91, "tmlog");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "tmlog" + "'", str92, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3544");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.lang.Object obj49 = properties40.put((java.lang.Object) strSet47, (java.lang.Object) 0.0d);
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet54 = properties51.stringPropertyNames();
        boolean boolean55 = properties50.containsValue((java.lang.Object) properties51);
        java.util.Collection<java.lang.Object> objCollection56 = properties50.values();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        java.lang.Object obj64 = properties50.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet63);
        java.util.Set<java.lang.Object> objSet65 = properties50.keySet();
        java.lang.Object obj67 = properties40.putIfAbsent((java.lang.Object) properties50, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration68 = properties50.propertyNames();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties69.elements();
        int int73 = properties69.size();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        boolean boolean80 = properties69.containsKey((java.lang.Object) objSet79);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties69.keys();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties82.elements();
        boolean boolean86 = properties82.isEmpty();
        java.util.Set<java.lang.Object> objSet87 = properties82.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties82.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet89 = properties82.entrySet();
        boolean boolean91 = properties69.remove((java.lang.Object) properties82, (java.lang.Object) 1.0f);
        java.lang.Object obj92 = properties82.clone();
        java.util.Collection<java.lang.Object> objCollection93 = properties82.values();
        java.lang.Object obj94 = properties19.put((java.lang.Object) properties50, (java.lang.Object) properties82);
        java.lang.String str95 = properties50.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(wildcardEnumeration68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objSet87);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNotNull(objEntrySet89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{}");
        org.junit.Assert.assertNotNull(objCollection93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "{hi!=[]}" + "'", str95, "{hi!=[]}");
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3545");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3546");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        properties34.clear();
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.storeToXML(outputStream45, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3547");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration23 = properties13.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        java.util.Set<java.lang.String> strSet32 = properties31.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet33 = properties31.keySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean40 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        java.lang.Object obj48 = properties42.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = properties34.remove((java.lang.Object) properties42, (java.lang.Object) atomikosProperties49);
        atomikosProperties49.setSerialJtaTransactions(false);
        java.lang.Object obj55 = properties13.put((java.lang.Object) objSet33, (java.lang.Object) false);
        java.util.Properties properties56 = new java.util.Properties(properties13);
        java.io.Reader reader57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.load(reader57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3548");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties11.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        int int25 = atomikosProperties17.getMaxActives();
        java.lang.Object obj26 = properties11.remove((java.lang.Object) int25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties11.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.Object obj41 = properties28.put((java.lang.Object) wildcardEnumeration39, (java.lang.Object) 10.0d);
        java.lang.Object obj42 = properties0.put((java.lang.Object) objEntrySet27, (java.lang.Object) properties28);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        properties43.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties43.keys();
        boolean boolean48 = properties28.containsValue((java.lang.Object) objEnumeration47);
        java.lang.String str49 = properties28.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties28.entrySet();
        int int51 = properties28.size();
        java.io.PrintWriter printWriter52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.list(printWriter52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3549");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties0.getService();
        long long11 = atomikosProperties0.getCheckpointInterval();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3550");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3551");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        boolean boolean15 = properties1.containsValue((java.lang.Object) objEntrySet14);
        java.lang.String str17 = properties1.getProperty("");
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.lang.String str22 = properties18.toString();
        java.lang.String str23 = properties18.toString();
        java.util.Set<java.lang.Object> objSet24 = properties18.keySet();
        boolean boolean25 = properties1.contains((java.lang.Object) objSet24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties26.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj33 = properties26.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Collection<java.lang.Object> objCollection34 = properties26.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str39 = atomikosProperties35.getService();
        boolean boolean40 = atomikosProperties35.isEnableLogging();
        java.util.Properties properties41 = atomikosProperties35.asProperties();
        atomikosProperties35.setForceShutdownOnVmExit(true);
        atomikosProperties35.setMaxActives((int) (short) -1);
        atomikosProperties35.setMaxTimeout((long) ' ');
        java.lang.Object obj48 = properties1.getOrDefault((java.lang.Object) properties26, (java.lang.Object) atomikosProperties35);
        java.lang.String str51 = properties26.getProperty("{[]=0.0}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str51, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3552");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.lang.String str7 = properties0.toString();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setMaxActives(2);
        boolean boolean14 = atomikosProperties9.isThreadedTwoPhaseCommit();
        java.lang.Object obj15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = properties0.putIfAbsent((java.lang.Object) boolean14, obj15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{=hi!}" + "'", str7, "{=hi!}");
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3553");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setService("tmlog");
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        boolean boolean23 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean24 = atomikosProperties11.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3554");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        int int25 = properties0.size();
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream26, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3555");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet17 = properties14.stringPropertyNames();
        boolean boolean18 = properties13.containsValue((java.lang.Object) properties14);
        java.util.Collection<java.lang.Object> objCollection19 = properties13.values();
        java.util.Enumeration<?> wildcardEnumeration20 = properties13.propertyNames();
        java.lang.Object obj22 = properties9.put((java.lang.Object) wildcardEnumeration20, (java.lang.Object) 10.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean29 = properties23.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        boolean boolean34 = properties31.isEmpty();
        java.lang.Object obj37 = properties31.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = properties23.remove((java.lang.Object) properties31, (java.lang.Object) atomikosProperties38);
        java.util.Properties properties42 = new java.util.Properties(properties31);
        int int43 = properties42.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = atomikosProperties45.isSerialJtaTransactions();
        java.lang.String str49 = atomikosProperties45.getService();
        boolean boolean50 = atomikosProperties45.isEnableLogging();
        java.lang.String str51 = atomikosProperties45.getTransactionManagerUniqueName();
        boolean boolean52 = properties42.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setEnableLogging(false);
        boolean boolean60 = atomikosProperties53.isSerialJtaTransactions();
        int int61 = atomikosProperties53.getMaxActives();
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        boolean boolean63 = properties9.remove((java.lang.Object) properties42, (java.lang.Object) boolean62);
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties64.keySet();
        boolean boolean70 = properties64.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties64.entrySet();
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        boolean boolean75 = properties72.isEmpty();
        java.lang.Object obj78 = properties72.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        boolean boolean82 = properties64.remove((java.lang.Object) properties72, (java.lang.Object) atomikosProperties79);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        int int87 = properties83.size();
        java.util.Properties properties88 = new java.util.Properties(properties83);
        java.util.Set<java.lang.String> strSet89 = properties83.stringPropertyNames();
        java.util.Set<java.lang.String> strSet90 = properties83.stringPropertyNames();
        java.lang.Object obj91 = properties9.put((java.lang.Object) properties72, (java.lang.Object) properties83);
        java.lang.Object obj92 = properties83.clone();
        boolean boolean93 = properties7.containsValue((java.lang.Object) properties83);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.storeToXML(outputStream94, "tmlog", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{}");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3556");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties12.containsKey((java.lang.Object) objSet22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties12.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        boolean boolean34 = properties12.remove((java.lang.Object) properties25, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration35 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.util.Set<java.lang.String> strSet44 = properties43.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet45 = properties43.keySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.Object obj67 = properties25.put((java.lang.Object) objSet45, (java.lang.Object) false);
        java.lang.Object obj68 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = atomikosProperties69.isSerialJtaTransactions();
        atomikosProperties69.setTransactionManagerUniqueName("hi!");
        java.lang.String str75 = atomikosProperties69.getLogBaseName();
        long long76 = atomikosProperties69.getMaxTimeout();
        boolean boolean77 = properties0.containsValue((java.lang.Object) atomikosProperties69);
        java.lang.String str79 = properties0.getProperty("tmlog");
        java.util.Properties properties80 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream81, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration35);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3557");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxActives((int) (short) 1);
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3558");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setService("{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3559");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.io.PrintStream printStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3560");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties34.entrySet();
        java.lang.Object obj41 = properties0.put((java.lang.Object) atomikosProperties30, (java.lang.Object) properties34);
        java.util.Properties properties42 = new java.util.Properties();
        boolean boolean44 = properties42.contains((java.lang.Object) 100.0d);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties45.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties45.entrySet();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        boolean boolean63 = properties45.remove((java.lang.Object) properties53, (java.lang.Object) atomikosProperties60);
        boolean boolean64 = properties42.equals((java.lang.Object) properties45);
        java.util.Enumeration<?> wildcardEnumeration65 = properties45.propertyNames();
        java.lang.String str67 = properties45.getProperty("{=hi!}");
        java.lang.Object obj68 = properties45.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = atomikosProperties69.isSerialJtaTransactions();
        atomikosProperties69.setTransactionManagerUniqueName("hi!");
        java.lang.String str75 = atomikosProperties69.getLogBaseName();
        java.lang.String str76 = atomikosProperties69.getLogBaseName();
        boolean boolean77 = atomikosProperties69.isSerialJtaTransactions();
        long long78 = atomikosProperties69.getMaxTimeout();
        java.lang.String str79 = atomikosProperties69.getLogBaseName();
        int int80 = atomikosProperties69.getMaxActives();
        atomikosProperties69.setForceShutdownOnVmExit(false);
        java.lang.Object obj83 = properties45.get((java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setSerialJtaTransactions(false);
        boolean boolean87 = atomikosProperties84.isThreadedTwoPhaseCommit();
        atomikosProperties84.setTransactionManagerUniqueName("hi!");
        java.lang.Object obj90 = properties0.replace((java.lang.Object) properties45, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties91 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties91.setSerialJtaTransactions(false);
        boolean boolean94 = atomikosProperties91.isSerialJtaTransactions();
        java.lang.String str95 = atomikosProperties91.getService();
        boolean boolean96 = atomikosProperties91.isEnableLogging();
        boolean boolean97 = atomikosProperties91.isSerialJtaTransactions();
        java.lang.String str98 = atomikosProperties91.getLogBaseName();
        boolean boolean99 = properties0.containsKey((java.lang.Object) atomikosProperties91);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "tmlog" + "'", str98, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3561");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3562");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setMaxTimeout((long) '#');
        boolean boolean61 = atomikosProperties54.isEnableLogging();
        boolean boolean62 = atomikosProperties54.isThreadedTwoPhaseCommit();
        atomikosProperties54.setService("");
        java.util.Properties properties65 = atomikosProperties54.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setMaxTimeout((long) '#');
        boolean boolean73 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        atomikosProperties66.setCheckpointInterval(0L);
        java.lang.String str78 = atomikosProperties66.getService();
        boolean boolean79 = atomikosProperties66.isForceShutdownOnVmExit();
        java.util.Properties properties80 = atomikosProperties66.asProperties();
        java.lang.Object obj81 = properties14.put((java.lang.Object) atomikosProperties54, (java.lang.Object) properties80);
        properties14.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3563");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        int int28 = atomikosProperties20.getMaxActives();
        atomikosProperties20.setService("hi!");
        long long31 = atomikosProperties20.getMaxTimeout();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties34 = atomikosProperties20.asProperties();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.String str38 = properties34.getProperty("hi!", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str38, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3564");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxActives((int) 'a');
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3565");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.util.Properties properties40 = new java.util.Properties(properties19);
        java.io.Writer writer41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.store(writer41, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3566");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.lang.Object obj20 = properties8.clone();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.lang.String str37 = properties29.getProperty("hi!");
        java.lang.String str39 = properties29.getProperty("");
        java.lang.Object obj41 = properties21.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties42.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties42.entrySet();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties50.keys();
        java.lang.String str58 = properties50.getProperty("hi!");
        java.lang.String str60 = properties50.getProperty("");
        java.lang.Object obj62 = properties42.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setMaxTimeout((long) '#');
        boolean boolean70 = atomikosProperties63.isEnableLogging();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setMaxActives((int) (byte) 100);
        atomikosProperties63.setForceShutdownOnVmExit(false);
        java.util.Properties properties77 = new java.util.Properties();
        java.lang.Object obj79 = properties77.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet80 = properties77.stringPropertyNames();
        java.lang.String str81 = properties77.toString();
        java.lang.String str82 = properties77.toString();
        java.util.Set<java.lang.Object> objSet83 = properties77.keySet();
        boolean boolean84 = properties42.remove((java.lang.Object) false, (java.lang.Object) objSet83);
        java.lang.Object obj85 = properties42.clone();
        java.lang.Object obj86 = properties8.put((java.lang.Object) properties21, obj85);
        java.util.Properties properties87 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties21.elements();
        java.util.Properties properties89 = new java.util.Properties();
        boolean boolean91 = properties89.contains((java.lang.Object) 100.0d);
        java.lang.Object obj92 = null;
        boolean boolean93 = properties89.equals(obj92);
        int int94 = properties89.size();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties89);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{=hi!}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{}" + "'", str81, "{}");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{}" + "'", str82, "{}");
        org.junit.Assert.assertNotNull(objSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{=100.0}");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3567");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.lang.Object obj42 = properties18.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) objCollection41);
        boolean boolean44 = properties9.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection41, (java.lang.Object) 10.0d);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties(properties45);
        java.util.Set<java.lang.String> strSet51 = properties45.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties52.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxTimeout((long) '#');
        boolean boolean66 = atomikosProperties59.isForceShutdownOnVmExit();
        java.lang.Object obj67 = properties52.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties59);
        boolean boolean68 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.Object obj69 = properties9.replace((java.lang.Object) properties45, (java.lang.Object) boolean68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties45.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        boolean boolean82 = properties79.isEmpty();
        java.lang.Object obj85 = properties79.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        boolean boolean89 = properties71.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties86);
        java.util.Properties properties90 = new java.util.Properties(properties79);
        java.lang.Object obj91 = properties0.replace((java.lang.Object) objEntrySet70, (java.lang.Object) properties90);
        boolean boolean92 = properties0.isEmpty();
        java.lang.Object obj93 = properties0.clone();
        java.lang.String str94 = properties0.toString();
        java.lang.Object obj95 = properties0.clone();
        java.io.OutputStream outputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream96, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "{}");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "{}" + "'", str94, "{}");
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "{}");
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3568");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.lang.Object obj25 = properties18.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = atomikosProperties26.isSerialJtaTransactions();
        atomikosProperties26.setTransactionManagerUniqueName("hi!");
        atomikosProperties26.setForceShutdownOnVmExit(false);
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str36 = atomikosProperties26.getTransactionManagerUniqueName();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.lang.Object obj51 = properties37.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet50);
        java.util.Set<java.lang.Object> objSet52 = properties37.keySet();
        java.util.Set<java.lang.Object> objSet53 = properties37.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties37.entrySet();
        java.util.Set<java.lang.Object> objSet55 = properties37.keySet();
        java.lang.Object obj56 = properties18.replace((java.lang.Object) atomikosProperties26, (java.lang.Object) properties37);
        boolean boolean57 = properties17.containsValue((java.lang.Object) properties18);
        java.io.Reader reader58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.load(reader58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3569");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        atomikosProperties8.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj45 = properties16.getOrDefault((java.lang.Object) boolean37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration47 = properties0.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.springframework.boot.jta.atomikos.AtomikosProperties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3570");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.lang.String str7 = properties0.toString();
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{=hi!}" + "'", str7, "{=hi!}");
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3571");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long17 = atomikosProperties0.getMaxTimeout();
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3572");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean16 = properties9.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection17 = properties9.values();
        java.lang.Object obj18 = properties9.clone();
        java.util.Collection<java.lang.Object> objCollection19 = properties9.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection24 = properties20.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        boolean boolean31 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setSerialJtaTransactions(true);
        boolean boolean34 = properties9.remove((java.lang.Object) objCollection24, (java.lang.Object) atomikosProperties25);
        java.lang.String str35 = atomikosProperties25.getLogBaseDir();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.lang.String str48 = properties40.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration49 = properties40.propertyNames();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties50.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties50.entrySet();
        java.util.Set<java.lang.String> strSet57 = properties50.stringPropertyNames();
        boolean boolean58 = properties50.isEmpty();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection61 = properties60.values();
        int int62 = properties60.size();
        java.util.Properties properties63 = new java.util.Properties(properties60);
        java.lang.Object obj64 = properties36.put((java.lang.Object) properties40, (java.lang.Object) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isForceShutdownOnVmExit();
        long long73 = atomikosProperties65.getDefaultJtaTimeout();
        boolean boolean74 = atomikosProperties65.isSerialJtaTransactions();
        atomikosProperties65.setMaxTimeout((long) (byte) -1);
        atomikosProperties65.setDefaultJtaTimeout(0L);
        long long79 = atomikosProperties65.getDefaultJtaTimeout();
        boolean boolean80 = properties0.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) properties63, (java.lang.Object) long79);
        java.util.Set<java.lang.Object> objSet81 = properties0.keySet();
        java.io.OutputStream outputStream82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream82, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 10000L + "'", long73 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objSet81);
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3573");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int10 = atomikosProperties0.getMaxActives();
        int int11 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) 50);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3574");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.lang.Object obj49 = properties40.put((java.lang.Object) strSet47, (java.lang.Object) 0.0d);
        boolean boolean50 = properties0.equals((java.lang.Object) 0.0d);
        int int51 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties59 = atomikosProperties52.asProperties();
        int int60 = atomikosProperties52.getMaxActives();
        atomikosProperties52.setService("hi!");
        long long63 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.setTransactionManagerUniqueName("hi!");
        atomikosProperties52.setEnableLogging(false);
        atomikosProperties52.setMaxActives((int) 'a');
        boolean boolean70 = atomikosProperties52.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties78 = atomikosProperties71.asProperties();
        int int79 = atomikosProperties71.getMaxActives();
        atomikosProperties71.setService("hi!");
        long long82 = atomikosProperties71.getMaxTimeout();
        atomikosProperties71.setTransactionManagerUniqueName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        boolean boolean88 = atomikosProperties85.isSerialJtaTransactions();
        java.lang.String str89 = atomikosProperties85.getService();
        boolean boolean90 = atomikosProperties85.isEnableLogging();
        java.lang.String str91 = atomikosProperties85.getLogBaseName();
        java.lang.String str92 = atomikosProperties85.getLogBaseName();
        boolean boolean93 = properties0.replace((java.lang.Object) atomikosProperties52, (java.lang.Object) atomikosProperties71, (java.lang.Object) atomikosProperties85);
        atomikosProperties52.setMaxTimeout((long) (short) 10);
        atomikosProperties52.setSerialJtaTransactions(true);
        atomikosProperties52.setCheckpointInterval(0L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 50 + "'", int60 == 50);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 300000L + "'", long63 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 300000L + "'", long82 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "tmlog" + "'", str91, "tmlog");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "tmlog" + "'", str92, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3575");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("{true=true}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3576");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties7.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties10.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        java.lang.Object obj25 = properties10.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties17);
        atomikosProperties17.setForceShutdownOnVmExit(true);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        atomikosProperties17.setCheckpointInterval((long) 2);
        boolean boolean31 = properties7.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        int int36 = properties32.size();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        boolean boolean43 = properties32.containsKey((java.lang.Object) objSet42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties32.keys();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties45.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties45.entrySet();
        boolean boolean54 = properties32.remove((java.lang.Object) properties45, (java.lang.Object) 1.0f);
        java.lang.Object obj55 = properties45.clone();
        java.util.Collection<java.lang.Object> objCollection56 = properties45.values();
        java.util.Collection<java.lang.Object> objCollection57 = properties45.values();
        java.util.Set<java.lang.String> strSet58 = properties45.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet59 = properties45.keySet();
        java.util.Enumeration<?> wildcardEnumeration60 = properties45.propertyNames();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties61.elements();
        int int66 = properties61.size();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties67.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties67.entrySet();
        java.util.Set<java.lang.String> strSet74 = properties67.stringPropertyNames();
        java.lang.Object obj77 = properties67.setProperty("{}", "tmlog");
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties78.elements();
        int int82 = properties78.size();
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties83.keys();
        java.lang.Object obj88 = properties67.getOrDefault((java.lang.Object) properties78, (java.lang.Object) objEnumeration87);
        java.util.Properties properties89 = new java.util.Properties(properties78);
        java.lang.Object obj91 = properties61.getOrDefault((java.lang.Object) properties89, (java.lang.Object) 10000L);
        java.lang.Object obj92 = properties7.put((java.lang.Object) properties45, obj91);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEntrySet73);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 10000L + "'", obj91, 10000L);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3577");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        boolean boolean62 = properties25.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3578");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties11.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        boolean boolean26 = properties20.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        java.lang.Object obj44 = properties20.replace((java.lang.Object) atomikosProperties27, (java.lang.Object) objCollection43);
        boolean boolean46 = properties11.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection43, (java.lang.Object) 10.0d);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        int int51 = properties47.size();
        java.util.Properties properties52 = new java.util.Properties(properties47);
        java.util.Set<java.lang.String> strSet53 = properties47.stringPropertyNames();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties54.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        boolean boolean68 = atomikosProperties61.isForceShutdownOnVmExit();
        java.lang.Object obj69 = properties54.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties61);
        boolean boolean70 = atomikosProperties61.isSerialJtaTransactions();
        java.lang.Object obj71 = properties11.replace((java.lang.Object) properties47, (java.lang.Object) boolean70);
        java.lang.Object obj72 = properties8.remove((java.lang.Object) properties47);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        boolean boolean77 = properties74.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties85 = atomikosProperties78.asProperties();
        int int86 = atomikosProperties78.getMaxActives();
        atomikosProperties78.setService("hi!");
        java.lang.Object obj89 = properties74.get((java.lang.Object) atomikosProperties78);
        java.lang.Object obj90 = properties47.put((java.lang.Object) "{{}={}}", (java.lang.Object) properties74);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.io.OutputStream outputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties47.store(outputStream92, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3579");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        long long19 = atomikosProperties15.getMaxTimeout();
        atomikosProperties15.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties15.setMaxActives((int) '#');
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3580");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        long long10 = atomikosProperties0.getMaxTimeout();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3581");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        int int8 = properties4.size();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        boolean boolean10 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setMaxTimeout((long) '#');
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setMaxActives((int) (byte) 100);
        atomikosProperties11.setForceShutdownOnVmExit(false);
        boolean boolean25 = atomikosProperties11.isThreadedTwoPhaseCommit();
        boolean boolean26 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj27 = properties9.remove((java.lang.Object) boolean26);
        boolean boolean28 = properties0.containsValue((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties29.isSerialJtaTransactions();
        atomikosProperties29.setTransactionManagerUniqueName("hi!");
        java.lang.String str35 = atomikosProperties29.getTransactionManagerUniqueName();
        boolean boolean36 = atomikosProperties29.isForceShutdownOnVmExit();
        java.util.Properties properties37 = atomikosProperties29.asProperties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        boolean boolean42 = properties38.containsValue((java.lang.Object) "hi!");
        java.lang.String str44 = properties38.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration45 = properties38.propertyNames();
        java.lang.String str47 = properties38.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str52 = atomikosProperties48.getService();
        boolean boolean53 = atomikosProperties48.isEnableLogging();
        java.util.Properties properties54 = atomikosProperties48.asProperties();
        atomikosProperties48.setForceShutdownOnVmExit(true);
        atomikosProperties48.setMaxActives((int) (short) -1);
        atomikosProperties48.setMaxTimeout((long) ' ');
        atomikosProperties48.setEnableLogging(false);
        atomikosProperties48.setService("{{}={}}");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean79 = atomikosProperties76.isSerialJtaTransactions();
        atomikosProperties76.setTransactionManagerUniqueName("hi!");
        java.lang.String str82 = atomikosProperties76.getLogBaseName();
        java.lang.String str83 = atomikosProperties76.getLogBaseName();
        boolean boolean84 = atomikosProperties76.isForceShutdownOnVmExit();
        long long85 = atomikosProperties76.getMaxTimeout();
        java.lang.String str86 = atomikosProperties76.getTransactionManagerUniqueName();
        java.lang.String str87 = atomikosProperties76.getLogBaseName();
        boolean boolean88 = atomikosProperties76.isThreadedTwoPhaseCommit();
        atomikosProperties76.setThreadedTwoPhaseCommit(false);
        boolean boolean91 = properties38.replace((java.lang.Object) atomikosProperties48, (java.lang.Object) properties65, (java.lang.Object) atomikosProperties76);
        java.lang.Object obj92 = properties37.remove((java.lang.Object) properties65);
        java.util.Collection<java.lang.Object> objCollection93 = properties37.values();
        boolean boolean94 = properties0.containsValue((java.lang.Object) objCollection93);
        java.io.OutputStream outputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream95, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(wildcardEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tmlog" + "'", str82, "tmlog");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tmlog" + "'", str83, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 300000L + "'", long85 == 300000L);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tmlog" + "'", str87, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(objCollection93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3582");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        boolean boolean23 = properties0.isEmpty();
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream24, "{{}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3583");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxActives(1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str14 = atomikosProperties0.getService();
        long long15 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str14, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 35L + "'", long15 == 35L);
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3584");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{true=true}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setTransactionManagerUniqueName("");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3585");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setTransactionManagerUniqueName("{{}=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3586");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.Object obj8 = properties5.setProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.lang.Object obj23 = properties9.put((java.lang.Object) properties12, (java.lang.Object) properties15);
        java.lang.String str25 = properties12.getProperty("{=hi!}");
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties36.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        boolean boolean58 = properties26.replace((java.lang.Object) "hi!", (java.lang.Object) properties36, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet59 = properties36.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.util.Set<java.lang.String> strSet66 = properties60.stringPropertyNames();
        java.util.Set<java.lang.String> strSet67 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setEnableLogging(true);
        atomikosProperties68.setLogBaseName("{}");
        long long82 = atomikosProperties68.getDefaultJtaTimeout();
        java.lang.Object obj83 = properties36.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) atomikosProperties68);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.Object obj85 = properties5.get((java.lang.Object) properties12);
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream86, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 10000L + "'", long82 == 10000L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3587");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        java.lang.String str62 = properties36.getProperty("{{}={}}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties36.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(objEntrySet63);
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3588");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        java.lang.String str28 = atomikosProperties22.getLogBaseName();
        java.lang.String str29 = atomikosProperties22.getLogBaseName();
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        long long31 = atomikosProperties22.getMaxTimeout();
        java.lang.String str32 = atomikosProperties22.getLogBaseName();
        int int33 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.lang.Object obj37 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        java.util.Set<java.lang.String> strSet46 = properties45.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxTimeout((long) '#');
        boolean boolean54 = atomikosProperties47.isEnableLogging();
        int int55 = atomikosProperties47.getMaxActives();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.lang.Object obj62 = properties56.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet63 = properties56.stringPropertyNames();
        java.lang.Object obj64 = properties45.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) strSet63);
        java.util.Properties properties65 = atomikosProperties47.asProperties();
        java.lang.Object obj66 = properties0.remove((java.lang.Object) properties65);
        java.io.PrintWriter printWriter67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties65.list(printWriter67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{{}=tmlog}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{{}=tmlog}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{{}=tmlog}");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3589");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.Object obj26 = properties15.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3590");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3591");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties11.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        int int25 = atomikosProperties17.getMaxActives();
        java.lang.Object obj26 = properties11.remove((java.lang.Object) int25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties11.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.Object obj41 = properties28.put((java.lang.Object) wildcardEnumeration39, (java.lang.Object) 10.0d);
        java.lang.Object obj42 = properties0.put((java.lang.Object) objEntrySet27, (java.lang.Object) properties28);
        int int43 = properties28.size();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties28.keys();
        properties28.clear();
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.save(outputStream46, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(objEnumeration44);
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3592");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Class<?> wildcardClass12 = atomikosProperties0.getClass();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3593");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        java.util.Set<java.lang.String> strSet81 = properties74.stringPropertyNames();
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties63, (java.lang.Object) properties74);
        java.lang.String str84 = properties0.getProperty("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration85 = properties0.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Properties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3594");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties0.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties0.entrySet();
        java.lang.Object obj13 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection14 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNotNull(objCollection14);
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3595");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (short) 0);
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3596");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = properties12.remove((java.lang.Object) properties20, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        int int32 = properties31.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties34.getService();
        boolean boolean39 = atomikosProperties34.isEnableLogging();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean41 = properties31.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setEnableLogging(false);
        boolean boolean44 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties34);
        java.lang.String str46 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean47 = atomikosProperties34.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3597");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.lang.Object obj20 = properties13.setProperty("tmlog", "");
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties24.keys();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties27.entrySet();
        java.lang.Object obj35 = properties21.put((java.lang.Object) properties24, (java.lang.Object) properties27);
        java.lang.String str37 = properties24.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        java.lang.Object obj42 = properties13.put((java.lang.Object) properties24, (java.lang.Object) boolean41);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setSerialJtaTransactions(false);
        java.lang.String str51 = atomikosProperties44.getService();
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.util.Properties properties53 = atomikosProperties44.asProperties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj55 = properties12.getOrDefault((java.lang.Object) properties24, (java.lang.Object) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxTimeout((long) '#');
        boolean boolean63 = atomikosProperties56.isEnableLogging();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        atomikosProperties56.setEnableLogging(true);
        atomikosProperties56.setLogBaseName("{}");
        long long70 = atomikosProperties56.getDefaultJtaTimeout();
        boolean boolean71 = atomikosProperties56.isSerialJtaTransactions();
        boolean boolean72 = properties24.equals((java.lang.Object) atomikosProperties56);
        java.io.Writer writer73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.store(writer73, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3598");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        boolean boolean51 = properties31.contains((java.lang.Object) atomikosProperties47);
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties52.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties52.entrySet();
        java.util.Set<java.lang.String> strSet59 = properties52.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties60.entrySet();
        boolean boolean66 = properties52.contains((java.lang.Object) properties60);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection71 = properties70.values();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties70.keys();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties73.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties73.entrySet();
        java.lang.Object obj81 = properties67.put((java.lang.Object) properties70, (java.lang.Object) properties73);
        java.lang.Object obj82 = properties70.clone();
        boolean boolean83 = properties52.containsKey((java.lang.Object) properties70);
        boolean boolean84 = properties31.equals((java.lang.Object) boolean83);
        java.util.Properties properties85 = new java.util.Properties();
        java.lang.Object obj87 = properties85.remove((java.lang.Object) 0.0d);
        boolean boolean88 = properties85.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties85.keys();
        java.lang.Object obj90 = properties31.get((java.lang.Object) objEnumeration89);
        java.lang.String str91 = properties31.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{}" + "'", str91, "{}");
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3599");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Set<java.lang.String> strSet27 = properties3.stringPropertyNames();
        java.util.Set<java.lang.String> strSet28 = properties3.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection29 = properties3.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(objCollection29);
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3600");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str9 = atomikosProperties0.getService();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        atomikosProperties0.setLogBaseDir("{}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3601");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection42 = properties34.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setLogBaseName("{=hi!}");
        java.lang.Object obj50 = properties8.put((java.lang.Object) objCollection42, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setForceShutdownOnVmExit(true);
        atomikosProperties43.setThreadedTwoPhaseCommit(false);
        atomikosProperties43.setMaxTimeout((long) (byte) -1);
        long long57 = atomikosProperties43.getCheckpointInterval();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3602");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.Object obj30 = properties18.clone();
        boolean boolean31 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setLogBaseName("{{}=tmlog}");
        boolean boolean42 = properties18.contains((java.lang.Object) atomikosProperties33);
        java.util.Set<java.lang.String> strSet43 = properties18.stringPropertyNames();
        java.lang.String str44 = properties18.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3603");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet17 = properties0.keySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties18.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.Object obj33 = properties18.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties25);
        long long34 = atomikosProperties25.getDefaultJtaTimeout();
        atomikosProperties25.setMaxActives((int) (short) 1);
        java.lang.Class<?> wildcardClass37 = atomikosProperties25.getClass();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        boolean boolean44 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties46.isEmpty();
        java.lang.Object obj52 = properties46.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        boolean boolean56 = properties38.remove((java.lang.Object) properties46, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties57 = new java.util.Properties(properties46);
        int int58 = properties57.size();
        int int59 = properties57.size();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj61 = properties57.get((java.lang.Object) properties60);
        boolean boolean62 = properties0.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) properties60);
        boolean boolean63 = properties0.isEmpty();
        java.io.Writer writer64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer64, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3604");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.lang.Object obj21 = properties7.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet20);
        java.util.Set<java.lang.Object> objSet22 = properties7.keySet();
        java.util.Set<java.lang.Object> objSet23 = properties7.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties7.entrySet();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        boolean boolean32 = properties0.remove((java.lang.Object) objEntrySet24, (java.lang.Object) objCollection31);
        java.lang.String str33 = properties0.toString();
        java.io.Reader reader34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3605");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str39 = atomikosProperties35.getService();
        boolean boolean40 = atomikosProperties35.isEnableLogging();
        atomikosProperties35.setCheckpointInterval((long) (byte) 100);
        atomikosProperties35.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Enumeration<?> wildcardEnumeration52 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties45.entrySet();
        java.lang.Object obj54 = properties0.replace((java.lang.Object) "{=hi!}", (java.lang.Object) properties45);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties(properties63);
        int int75 = properties74.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties77.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties77.getService();
        boolean boolean82 = atomikosProperties77.isEnableLogging();
        java.lang.String str83 = atomikosProperties77.getTransactionManagerUniqueName();
        boolean boolean84 = properties74.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties77);
        atomikosProperties77.setMaxActives((int) (short) -1);
        boolean boolean87 = atomikosProperties77.isForceShutdownOnVmExit();
        boolean boolean88 = atomikosProperties77.isEnableLogging();
        java.lang.String str89 = atomikosProperties77.getTransactionManagerUniqueName();
        java.lang.String str90 = atomikosProperties77.getService();
        boolean boolean91 = atomikosProperties77.isThreadedTwoPhaseCommit();
        java.lang.Object obj92 = properties45.get((java.lang.Object) atomikosProperties77);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3606");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3607");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3608");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties34.clone();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties41.keys();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties48.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        java.lang.Object obj63 = properties48.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setForceShutdownOnVmExit(false);
        long long66 = atomikosProperties55.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.String str72 = atomikosProperties68.getService();
        boolean boolean73 = atomikosProperties68.isEnableLogging();
        java.util.Properties properties74 = atomikosProperties68.asProperties();
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setMaxActives((int) (short) -1);
        atomikosProperties68.setMaxTimeout((long) ' ');
        boolean boolean81 = properties41.replace((java.lang.Object) long66, (java.lang.Object) (-1.0d), (java.lang.Object) atomikosProperties68);
        boolean boolean82 = properties8.remove((java.lang.Object) properties34, (java.lang.Object) long66);
        java.lang.Object obj83 = properties8.clone();
        java.lang.Object obj86 = properties8.setProperty("", "{}");
        java.lang.Object obj89 = properties8.setProperty("{=hi!}", "{hi!=[]}");
        java.util.Enumeration<?> wildcardEnumeration90 = properties8.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{hi!=[]}");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(wildcardEnumeration90);
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3609");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setMaxTimeout((long) '#');
        long long46 = atomikosProperties39.getCheckpointInterval();
        java.lang.String str47 = atomikosProperties39.getTransactionManagerUniqueName();
        atomikosProperties39.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties50 = atomikosProperties39.asProperties();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        boolean boolean56 = properties51.containsValue((java.lang.Object) properties52);
        java.util.Collection<java.lang.Object> objCollection57 = properties51.values();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.lang.Object obj65 = properties51.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet64);
        java.util.Set<java.lang.Object> objSet66 = properties51.keySet();
        java.util.Set<java.lang.Object> objSet67 = properties51.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties51.entrySet();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        boolean boolean72 = properties69.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean74 = properties69.containsValue((java.lang.Object) atomikosProperties73);
        java.lang.String str76 = properties69.getProperty("tmlog");
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        boolean boolean78 = properties50.contains((java.lang.Object) properties51);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setSerialJtaTransactions(false);
        boolean boolean83 = atomikosProperties80.isSerialJtaTransactions();
        java.util.Properties properties84 = atomikosProperties80.asProperties();
        java.lang.Object obj87 = properties84.setProperty("hi!", "");
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties84);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3610");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        long long37 = atomikosProperties32.getMaxTimeout();
        java.lang.Object obj38 = properties0.get((java.lang.Object) atomikosProperties32);
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        long long40 = atomikosProperties32.getMaxTimeout();
        boolean boolean41 = atomikosProperties32.isEnableLogging();
        java.util.Properties properties42 = atomikosProperties32.asProperties();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(properties42);
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3611");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        boolean boolean34 = properties0.containsKey((java.lang.Object) boolean33);
        java.lang.Object obj37 = properties0.setProperty("{{}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        boolean boolean47 = properties42.containsValue((java.lang.Object) properties43);
        java.util.Collection<java.lang.Object> objCollection48 = properties42.values();
        java.util.Enumeration<?> wildcardEnumeration49 = properties42.propertyNames();
        java.lang.Object obj51 = properties38.put((java.lang.Object) wildcardEnumeration49, (java.lang.Object) 10.0d);
        java.lang.String str53 = properties38.getProperty("{=hi!}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties38.entrySet();
        java.lang.Class<?> wildcardClass55 = objEntrySet54.getClass();
        boolean boolean56 = properties0.contains((java.lang.Object) objEntrySet54);
        java.io.Reader reader57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3612");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties8.toString();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties10.keys();
        java.lang.String str18 = properties10.getProperty("hi!");
        java.lang.String str20 = properties10.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setEnableLogging(false);
        boolean boolean28 = properties10.containsKey((java.lang.Object) atomikosProperties21);
        atomikosProperties21.setLogBaseName("{=hi!}");
        int int31 = atomikosProperties21.getMaxActives();
        int int32 = atomikosProperties21.getMaxActives();
        boolean boolean33 = properties8.containsKey((java.lang.Object) int32);
        java.lang.Object obj34 = null;
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        boolean boolean38 = properties35.isEmpty();
        java.lang.Object obj41 = properties35.setProperty("", "hi!");
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection50 = properties49.values();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties49.keys();
        java.lang.Object obj52 = properties42.remove((java.lang.Object) properties49);
        java.lang.Object obj53 = properties35.get((java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties49.keys();
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet60 = properties57.stringPropertyNames();
        boolean boolean61 = properties56.containsValue((java.lang.Object) properties57);
        java.util.Collection<java.lang.Object> objCollection62 = properties56.values();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties64.keySet();
        java.lang.Object obj70 = properties56.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet69);
        java.util.Set<java.lang.Object> objSet71 = properties56.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setMaxTimeout((long) '#');
        boolean boolean79 = atomikosProperties72.isEnableLogging();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setEnableLogging(true);
        java.util.Properties properties84 = new java.util.Properties();
        java.lang.Object obj86 = properties84.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties84.elements();
        boolean boolean88 = properties84.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties84.elements();
        java.lang.Object obj90 = properties56.replace((java.lang.Object) true, (java.lang.Object) properties84);
        java.lang.String str92 = properties84.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = properties8.putIfAbsent(obj34, (java.lang.Object) properties84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str9, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3613");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties15.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        java.lang.String str31 = atomikosProperties25.getLogBaseName();
        long long32 = atomikosProperties25.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        boolean boolean38 = atomikosProperties33.isSerialJtaTransactions();
        boolean boolean39 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.String str40 = atomikosProperties33.getService();
        boolean boolean41 = atomikosProperties33.isThreadedTwoPhaseCommit();
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj44 = properties15.put((java.lang.Object) long32, (java.lang.Object) false);
        java.io.InputStream inputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.load(inputStream45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3614");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long4 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3615");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection25 = properties8.values();
        java.lang.Object obj28 = properties8.setProperty("{}", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        boolean boolean29 = properties8.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3616");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties14 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.String> strSet15 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        int int24 = atomikosProperties16.getMaxActives();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet32 = properties25.stringPropertyNames();
        java.lang.Object obj33 = properties14.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) strSet32);
        java.lang.Object obj34 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties40.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str52 = atomikosProperties48.getService();
        boolean boolean53 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.setCheckpointInterval((long) (byte) 100);
        java.lang.String str56 = atomikosProperties48.getLogBaseName();
        boolean boolean57 = properties40.contains((java.lang.Object) atomikosProperties48);
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.lang.Object obj61 = properties35.setProperty("{=hi!}", "");
        java.util.Collection<java.lang.Object> objCollection62 = properties35.values();
        java.lang.Object obj63 = properties0.get((java.lang.Object) objCollection62);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3617");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("");
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        boolean boolean17 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3618");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties11.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        int int25 = atomikosProperties17.getMaxActives();
        java.lang.Object obj26 = properties11.remove((java.lang.Object) int25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties11.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.Object obj41 = properties28.put((java.lang.Object) wildcardEnumeration39, (java.lang.Object) 10.0d);
        java.lang.Object obj42 = properties0.put((java.lang.Object) objEntrySet27, (java.lang.Object) properties28);
        int int43 = properties28.size();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties28.keys();
        properties28.clear();
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.save(outputStream46, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(objEnumeration44);
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3619");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        java.util.Collection<java.lang.Object> objCollection54 = properties14.values();
        properties14.clear();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.lang.Object obj63 = properties56.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        boolean boolean67 = atomikosProperties64.isSerialJtaTransactions();
        atomikosProperties64.setTransactionManagerUniqueName("hi!");
        atomikosProperties64.setForceShutdownOnVmExit(false);
        atomikosProperties64.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str74 = atomikosProperties64.getTransactionManagerUniqueName();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet79 = properties76.stringPropertyNames();
        boolean boolean80 = properties75.containsValue((java.lang.Object) properties76);
        java.util.Collection<java.lang.Object> objCollection81 = properties75.values();
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.lang.Object obj89 = properties75.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet88);
        java.util.Set<java.lang.Object> objSet90 = properties75.keySet();
        java.util.Set<java.lang.Object> objSet91 = properties75.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet92 = properties75.entrySet();
        java.util.Set<java.lang.Object> objSet93 = properties75.keySet();
        java.lang.Object obj94 = properties56.replace((java.lang.Object) atomikosProperties64, (java.lang.Object) properties75);
        boolean boolean95 = properties14.containsKey((java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration96 = properties14.keys();
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.storeToXML(outputStream97, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objCollection81);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertNotNull(objSet91);
        org.junit.Assert.assertNotNull(objEntrySet92);
        org.junit.Assert.assertNotNull(objSet93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objEnumeration96);
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3620");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        properties11.clear();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.lang.String str35 = properties27.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration36 = properties27.propertyNames();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties37.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties37.entrySet();
        java.util.Set<java.lang.String> strSet44 = properties37.stringPropertyNames();
        boolean boolean45 = properties37.isEmpty();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        int int49 = properties47.size();
        java.util.Properties properties50 = new java.util.Properties(properties47);
        java.lang.Object obj51 = properties23.put((java.lang.Object) properties27, (java.lang.Object) properties50);
        properties27.clear();
        java.lang.Class<?> wildcardClass53 = properties27.getClass();
        boolean boolean54 = properties11.containsKey((java.lang.Object) properties27);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3621");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = atomikosProperties6.getLogBaseDir();
        java.lang.String str25 = atomikosProperties6.getTransactionManagerUniqueName();
        atomikosProperties6.setService("{}");
        atomikosProperties6.setMaxTimeout(100L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3622");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties9.elements();
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.save(outputStream36, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3623");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        int int25 = properties0.size();
        java.util.Properties properties26 = new java.util.Properties(properties0);
        java.lang.Object obj27 = null;
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties(properties28);
        java.util.Set<java.lang.String> strSet34 = properties28.stringPropertyNames();
        java.util.Set<java.lang.String> strSet35 = properties28.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties36.elements();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties41.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.elements();
        java.lang.Object obj47 = properties28.replace((java.lang.Object) objEnumeration40, (java.lang.Object) objEnumeration46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties28.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.String str53 = atomikosProperties49.getService();
        boolean boolean54 = atomikosProperties49.isEnableLogging();
        java.lang.String str55 = atomikosProperties49.getLogBaseName();
        boolean boolean56 = properties28.containsKey((java.lang.Object) atomikosProperties49);
        long long57 = atomikosProperties49.getDefaultJtaTimeout();
        atomikosProperties49.setForceShutdownOnVmExit(false);
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties60.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        atomikosProperties67.setMaxTimeout((long) '#');
        boolean boolean74 = atomikosProperties67.isForceShutdownOnVmExit();
        java.lang.Object obj75 = properties60.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties67);
        long long76 = atomikosProperties67.getDefaultJtaTimeout();
        atomikosProperties67.setLogBaseDir("{}");
        java.util.Properties properties79 = atomikosProperties67.asProperties();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = properties26.replace(obj27, (java.lang.Object) false, (java.lang.Object) atomikosProperties67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10000L + "'", long57 == 10000L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertNotNull(properties79);
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3624");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setCheckpointInterval((long) '#');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3625");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties26.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.Object obj43 = properties0.get((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties45.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj52 = properties45.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        boolean boolean58 = properties53.containsValue((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection59 = properties53.values();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.lang.Object obj67 = properties53.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet66);
        java.util.Set<java.lang.Object> objSet68 = properties53.keySet();
        boolean boolean69 = properties45.containsKey((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection70 = properties53.values();
        java.util.Set<java.lang.Object> objSet71 = properties53.keySet();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet76 = properties73.stringPropertyNames();
        boolean boolean77 = properties72.containsValue((java.lang.Object) properties73);
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties78.elements();
        boolean boolean82 = properties78.isEmpty();
        java.util.Set<java.lang.Object> objSet83 = properties78.keySet();
        boolean boolean84 = properties78.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet85 = properties78.entrySet();
        java.util.Properties properties86 = new java.util.Properties();
        java.lang.Object obj88 = properties86.remove((java.lang.Object) 0.0d);
        boolean boolean89 = properties86.isEmpty();
        java.lang.Object obj92 = properties86.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties93 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties93.setSerialJtaTransactions(false);
        boolean boolean96 = properties78.remove((java.lang.Object) properties86, (java.lang.Object) atomikosProperties93);
        boolean boolean97 = properties72.equals((java.lang.Object) atomikosProperties93);
        java.lang.Object obj98 = properties0.putIfAbsent((java.lang.Object) objSet71, (java.lang.Object) atomikosProperties93);
        boolean boolean99 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEntrySet85);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3626");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet15 = properties0.stringPropertyNames();
        boolean boolean16 = properties0.isEmpty();
        boolean boolean17 = properties0.isEmpty();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties18.containsValue((java.lang.Object) "hi!");
        java.lang.String str24 = properties18.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration25 = properties18.propertyNames();
        java.lang.String str27 = properties18.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        java.lang.String str32 = atomikosProperties28.getService();
        boolean boolean33 = atomikosProperties28.isEnableLogging();
        java.util.Properties properties34 = atomikosProperties28.asProperties();
        atomikosProperties28.setForceShutdownOnVmExit(true);
        atomikosProperties28.setMaxActives((int) (short) -1);
        atomikosProperties28.setMaxTimeout((long) ' ');
        atomikosProperties28.setEnableLogging(false);
        atomikosProperties28.setService("{{}={}}");
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties45.isEmpty();
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        java.lang.Object obj55 = properties45.remove((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        boolean boolean59 = atomikosProperties56.isSerialJtaTransactions();
        atomikosProperties56.setTransactionManagerUniqueName("hi!");
        java.lang.String str62 = atomikosProperties56.getLogBaseName();
        java.lang.String str63 = atomikosProperties56.getLogBaseName();
        boolean boolean64 = atomikosProperties56.isForceShutdownOnVmExit();
        long long65 = atomikosProperties56.getMaxTimeout();
        java.lang.String str66 = atomikosProperties56.getTransactionManagerUniqueName();
        java.lang.String str67 = atomikosProperties56.getLogBaseName();
        boolean boolean68 = atomikosProperties56.isThreadedTwoPhaseCommit();
        atomikosProperties56.setThreadedTwoPhaseCommit(false);
        boolean boolean71 = properties18.replace((java.lang.Object) atomikosProperties28, (java.lang.Object) properties45, (java.lang.Object) atomikosProperties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setMaxTimeout((long) '#');
        java.lang.String str79 = atomikosProperties72.getLogBaseDir();
        atomikosProperties72.setMaxActives(1);
        atomikosProperties72.setService("hi!");
        atomikosProperties72.setTransactionManagerUniqueName("{tmlog=}");
        long long86 = atomikosProperties72.getDefaultJtaTimeout();
        java.lang.Object obj87 = properties0.getOrDefault((java.lang.Object) properties45, (java.lang.Object) atomikosProperties72);
        atomikosProperties72.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tmlog" + "'", str67, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 10000L + "'", long86 == 10000L);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3627");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3628");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        java.lang.String str10 = atomikosProperties4.getLogBaseName();
        java.lang.String str11 = atomikosProperties4.getLogBaseName();
        java.lang.Object obj12 = properties0.get((java.lang.Object) str11);
        java.lang.Object obj15 = properties0.setProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "{{}=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        java.util.Properties properties20 = atomikosProperties16.asProperties();
        java.lang.Object obj23 = properties20.setProperty("hi!", "");
        java.util.Properties properties24 = new java.util.Properties(properties20);
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.lang.String str33 = properties25.getProperty("hi!");
        java.lang.String str35 = properties25.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setEnableLogging(false);
        boolean boolean43 = properties25.containsKey((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean53 = properties46.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection54 = properties46.values();
        java.lang.Object obj55 = properties46.clone();
        java.util.Collection<java.lang.Object> objCollection56 = properties46.values();
        boolean boolean57 = properties20.remove((java.lang.Object) atomikosProperties36, (java.lang.Object) objCollection56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxTimeout((long) '#');
        java.lang.String str65 = atomikosProperties58.getLogBaseDir();
        atomikosProperties58.setForceShutdownOnVmExit(false);
        long long68 = atomikosProperties58.getMaxTimeout();
        atomikosProperties58.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean71 = properties0.remove((java.lang.Object) properties20, (java.lang.Object) "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties72 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 35L + "'", long68 == 35L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3629");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        boolean boolean19 = properties13.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        boolean boolean24 = properties21.isEmpty();
        java.lang.Object obj27 = properties21.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = properties13.remove((java.lang.Object) properties21, (java.lang.Object) atomikosProperties28);
        java.util.Properties properties32 = new java.util.Properties(properties21);
        int int33 = properties32.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str39 = atomikosProperties35.getService();
        boolean boolean40 = atomikosProperties35.isEnableLogging();
        java.lang.String str41 = atomikosProperties35.getTransactionManagerUniqueName();
        boolean boolean42 = properties32.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties35);
        atomikosProperties35.setMaxActives((int) (short) -1);
        boolean boolean45 = atomikosProperties35.isThreadedTwoPhaseCommit();
        atomikosProperties35.setDefaultJtaTimeout((long) 100);
        boolean boolean48 = atomikosProperties35.isThreadedTwoPhaseCommit();
        long long49 = atomikosProperties35.getCheckpointInterval();
        boolean boolean50 = atomikosProperties35.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        atomikosProperties51.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties57 = atomikosProperties51.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        boolean boolean61 = atomikosProperties58.isSerialJtaTransactions();
        atomikosProperties58.setTransactionManagerUniqueName("hi!");
        boolean boolean64 = atomikosProperties58.isEnableLogging();
        java.lang.String str65 = atomikosProperties58.getTransactionManagerUniqueName();
        atomikosProperties58.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        int int76 = atomikosProperties68.getMaxActives();
        atomikosProperties68.setService("hi!");
        long long79 = atomikosProperties68.getMaxTimeout();
        atomikosProperties68.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties82 = atomikosProperties68.asProperties();
        java.lang.Object obj83 = properties57.getOrDefault((java.lang.Object) atomikosProperties58, (java.lang.Object) properties82);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties82.entrySet();
        java.util.Enumeration<?> wildcardEnumeration85 = properties82.propertyNames();
        java.lang.Object obj86 = properties12.getOrDefault((java.lang.Object) boolean50, (java.lang.Object) properties82);
        java.util.Properties properties87 = new java.util.Properties();
        java.util.Properties properties88 = new java.util.Properties();
        java.lang.Object obj90 = properties88.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet91 = properties88.stringPropertyNames();
        boolean boolean92 = properties87.containsValue((java.lang.Object) properties88);
        java.util.Enumeration<?> wildcardEnumeration93 = properties88.propertyNames();
        java.util.Properties properties94 = new java.util.Properties(properties88);
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties88.keys();
        java.lang.Object obj96 = properties12.remove((java.lang.Object) properties88);
        java.util.Enumeration<java.lang.Object> objEnumeration97 = properties12.keys();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 500L + "'", long49 == 500L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 50 + "'", int76 == 50);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 300000L + "'", long79 == 300000L);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNotNull(obj83);
// flaky:         org.junit.Assert.assertEquals(obj83.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertNotNull(obj86);
// flaky:         org.junit.Assert.assertEquals(obj86.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration93);
        org.junit.Assert.assertNotNull(objEnumeration95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNotNull(objEnumeration97);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3630");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        long long12 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3631");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.lang.String str30 = atomikosProperties22.getService();
        atomikosProperties22.setSerialJtaTransactions(false);
        java.lang.Class<?> wildcardClass33 = atomikosProperties22.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3632");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        boolean boolean39 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties40.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.lang.Object obj46 = properties0.remove((java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties0.elements();
        int int48 = properties0.size();
        properties0.clear();
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream50, "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3633");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean29 = properties18.containsKey((java.lang.Object) objSet28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties18.keys();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties31.entrySet();
        boolean boolean40 = properties18.remove((java.lang.Object) properties31, (java.lang.Object) 1.0f);
        java.lang.Object obj41 = properties31.clone();
        java.util.Collection<java.lang.Object> objCollection42 = properties31.values();
        java.util.Collection<java.lang.Object> objCollection43 = properties31.values();
        java.lang.String str44 = properties31.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxTimeout((long) '#');
        boolean boolean52 = atomikosProperties45.isEnableLogging();
        atomikosProperties45.setMaxActives((int) '#');
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        java.lang.Class<?> wildcardClass59 = atomikosProperties45.getClass();
        boolean boolean60 = properties31.contains((java.lang.Object) atomikosProperties45);
        boolean boolean61 = properties31.isEmpty();
        boolean boolean62 = properties0.containsValue((java.lang.Object) properties31);
        java.lang.String str63 = properties31.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        boolean boolean67 = atomikosProperties64.isSerialJtaTransactions();
        java.lang.String str68 = atomikosProperties64.getService();
        boolean boolean69 = atomikosProperties64.isEnableLogging();
        java.util.Properties properties70 = atomikosProperties64.asProperties();
        atomikosProperties64.setForceShutdownOnVmExit(true);
        atomikosProperties64.setMaxActives((int) (short) -1);
        atomikosProperties64.setMaxTimeout((long) ' ');
        atomikosProperties64.setMaxTimeout((long) (short) 100);
        boolean boolean79 = properties31.equals((java.lang.Object) (short) 100);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3634");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("{{}={}}");
        atomikosProperties0.setMaxActives((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3635");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxTimeout(300000L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3636");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        int int70 = atomikosProperties62.getMaxActives();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean78 = properties71.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj79 = properties56.put((java.lang.Object) atomikosProperties62, (java.lang.Object) properties71);
        properties56.clear();
        java.lang.Object obj81 = properties33.remove((java.lang.Object) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties33.keys();
        java.io.PrintStream printStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.list(printStream83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEnumeration82);
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3637");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        atomikosProperties7.setMaxActives((int) (byte) 100);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        boolean boolean21 = atomikosProperties7.isThreadedTwoPhaseCommit();
        boolean boolean22 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj23 = properties5.remove((java.lang.Object) boolean22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = atomikosProperties24.isSerialJtaTransactions();
        atomikosProperties24.setTransactionManagerUniqueName("hi!");
        atomikosProperties24.setForceShutdownOnVmExit(false);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        int int46 = atomikosProperties38.getMaxActives();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        boolean boolean54 = properties47.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj55 = properties32.put((java.lang.Object) atomikosProperties38, (java.lang.Object) properties47);
        java.lang.String str56 = properties32.toString();
        boolean boolean57 = properties5.remove((java.lang.Object) false, (java.lang.Object) properties32);
        boolean boolean58 = properties5.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3638");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet17 = properties14.stringPropertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet22 = properties19.stringPropertyNames();
        boolean boolean23 = properties18.containsValue((java.lang.Object) properties19);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties18.propertyNames();
        java.lang.Object obj27 = properties14.put((java.lang.Object) wildcardEnumeration25, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj43 = properties14.getOrDefault((java.lang.Object) boolean35, (java.lang.Object) atomikosProperties36);
        boolean boolean44 = properties0.remove((java.lang.Object) atomikosProperties8, obj43);
        atomikosProperties8.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties8.setService("");
        long long49 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setService("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3639");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet7 = properties5.keySet();
        int int8 = properties5.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3640");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        boolean boolean18 = properties0.containsKey((java.lang.Object) 35);
        java.lang.String str20 = properties0.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.util.Collection<java.lang.Object> objCollection21 = properties0.values();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objCollection21);
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3641");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties0.getService();
        long long11 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3642");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.io.OutputStream outputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream5, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3643");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) '4');
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3644");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setService("{[]=0.0}");
        atomikosProperties0.setService("tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3645");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean21 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setSerialJtaTransactions(true);
        atomikosProperties15.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3646");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        java.lang.String str11 = atomikosProperties0.getService();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3647");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.lang.String str25 = properties0.getProperty("{tmlog=}");
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setService("{=hi!}");
        atomikosProperties27.setLogBaseDir("");
        boolean boolean38 = properties0.contains((java.lang.Object) atomikosProperties27);
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream39, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3648");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.io.InputStream inputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.loadFromXML(inputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3649");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3650");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3651");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties0.getService();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{=hi!}" + "'", str14, "{=hi!}");
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3652");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        boolean boolean12 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties7.getTransactionManagerUniqueName();
        java.lang.String str14 = atomikosProperties7.getService();
        atomikosProperties7.setCheckpointInterval(0L);
        atomikosProperties7.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setDefaultJtaTimeout((long) (short) -1);
        boolean boolean24 = properties0.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3653");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.lang.String str28 = properties24.toString();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.lang.Object obj36 = properties29.setProperty("tmlog", "");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.String str38 = properties29.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties29.entrySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isEnableLogging();
        atomikosProperties41.setForceShutdownOnVmExit(true);
        atomikosProperties41.setForceShutdownOnVmExit(true);
        java.util.Properties properties53 = atomikosProperties41.asProperties();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet58 = properties55.stringPropertyNames();
        boolean boolean59 = properties54.containsValue((java.lang.Object) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setSerialJtaTransactions(false);
        java.lang.String str67 = atomikosProperties60.getService();
        java.util.Properties properties68 = atomikosProperties60.asProperties();
        java.util.Properties properties69 = atomikosProperties60.asProperties();
        boolean boolean70 = properties54.contains((java.lang.Object) atomikosProperties60);
        java.lang.Object obj71 = properties29.put((java.lang.Object) properties53, (java.lang.Object) atomikosProperties60);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties53.elements();
        java.util.Set<java.lang.String> strSet73 = properties53.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{tmlog=}" + "'", str38, "{tmlog=}");
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(strSet73);
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3654");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.io.Reader reader10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(reader10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3655");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int7 = atomikosProperties0.getMaxActives();
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3656");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.keys();
        java.util.Enumeration<?> wildcardEnumeration10 = properties8.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration11 = properties8.propertyNames();
        java.util.Set<java.lang.Object> objSet12 = properties8.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objSet12);
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3657");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.save(outputStream25, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3658");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet6 = properties3.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.util.Enumeration<?> wildcardEnumeration14 = properties7.propertyNames();
        java.lang.Object obj16 = properties3.put((java.lang.Object) wildcardEnumeration14, (java.lang.Object) 10.0d);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties17.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties17.entrySet();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = properties17.remove((java.lang.Object) properties25, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        int int37 = properties36.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        boolean boolean42 = atomikosProperties39.isSerialJtaTransactions();
        java.lang.String str43 = atomikosProperties39.getService();
        boolean boolean44 = atomikosProperties39.isEnableLogging();
        java.lang.String str45 = atomikosProperties39.getTransactionManagerUniqueName();
        boolean boolean46 = properties36.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setEnableLogging(false);
        boolean boolean54 = atomikosProperties47.isSerialJtaTransactions();
        int int55 = atomikosProperties47.getMaxActives();
        boolean boolean56 = atomikosProperties47.isSerialJtaTransactions();
        boolean boolean57 = properties3.remove((java.lang.Object) properties36, (java.lang.Object) boolean56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxTimeout((long) '#');
        boolean boolean65 = atomikosProperties58.isEnableLogging();
        atomikosProperties58.setCheckpointInterval((long) 100);
        java.lang.String str68 = atomikosProperties58.getTransactionManagerUniqueName();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties58);
        boolean boolean70 = properties0.equals((java.lang.Object) boolean69);
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        boolean boolean82 = properties79.isEmpty();
        java.lang.Object obj85 = properties79.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        boolean boolean89 = properties71.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties86);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration91 = properties0.keys();
        java.io.Reader reader92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objEnumeration91);
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3659");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str8 = atomikosProperties0.getService();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3660");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        java.lang.String str28 = atomikosProperties22.getLogBaseName();
        java.lang.String str29 = atomikosProperties22.getLogBaseName();
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        long long31 = atomikosProperties22.getMaxTimeout();
        java.lang.String str32 = atomikosProperties22.getLogBaseName();
        int int33 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.lang.String str37 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setEnableLogging(false);
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setMaxTimeout(0L);
        long long49 = atomikosProperties38.getDefaultJtaTimeout();
        long long50 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj51 = properties0.remove((java.lang.Object) atomikosProperties38);
        java.util.Enumeration<?> wildcardEnumeration52 = properties0.propertyNames();
        java.io.Reader reader53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{{}=tmlog}" + "'", str37, "{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10000L + "'", long50 == 10000L);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3661");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setDefaultJtaTimeout((long) 2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3662");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.lang.Object obj7 = properties0.clone();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        int int12 = properties8.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        boolean boolean19 = properties8.containsKey((java.lang.Object) objSet18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        boolean boolean30 = properties8.remove((java.lang.Object) properties21, (java.lang.Object) 1.0f);
        java.lang.Object obj31 = properties21.clone();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.lang.Object obj39 = properties32.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setTransactionManagerUniqueName("hi!");
        atomikosProperties40.setForceShutdownOnVmExit(false);
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str50 = atomikosProperties40.getTransactionManagerUniqueName();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        boolean boolean56 = properties51.containsValue((java.lang.Object) properties52);
        java.util.Collection<java.lang.Object> objCollection57 = properties51.values();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.lang.Object obj65 = properties51.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet64);
        java.util.Set<java.lang.Object> objSet66 = properties51.keySet();
        java.util.Set<java.lang.Object> objSet67 = properties51.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties51.entrySet();
        java.util.Set<java.lang.Object> objSet69 = properties51.keySet();
        java.lang.Object obj70 = properties32.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) properties51);
        boolean boolean71 = properties21.containsKey((java.lang.Object) properties51);
        int int72 = properties21.size();
        java.lang.Object obj73 = properties0.remove((java.lang.Object) int72);
        int int74 = properties0.size();
        java.util.Set<java.lang.String> strSet75 = properties0.stringPropertyNames();
        java.io.OutputStream outputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream76, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strSet75);
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3663");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj23 = properties0.setProperty("tmlog", "{true=true}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxTimeout((long) '#');
        boolean boolean31 = atomikosProperties24.isEnableLogging();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        boolean boolean34 = atomikosProperties24.isSerialJtaTransactions();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties43.keys();
        java.lang.String str51 = properties43.getProperty("hi!");
        java.lang.String str53 = properties43.getProperty("");
        java.lang.Object obj55 = properties35.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj56 = properties35.clone();
        boolean boolean57 = properties0.remove((java.lang.Object) atomikosProperties24, (java.lang.Object) properties35);
        java.io.InputStream inputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.load(inputStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{=100.0}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3664");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration11 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties0.entrySet();
        java.io.PrintWriter printWriter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3665");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        java.lang.String str20 = atomikosProperties16.getService();
        boolean boolean21 = atomikosProperties16.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties16.asProperties();
        atomikosProperties16.setForceShutdownOnVmExit(true);
        atomikosProperties16.setMaxActives((int) (short) -1);
        atomikosProperties16.setMaxTimeout((long) ' ');
        atomikosProperties16.setEnableLogging(false);
        atomikosProperties16.setService("{{}={}}");
        atomikosProperties16.setLogBaseName("{{}={}}");
        boolean boolean35 = properties0.equals((java.lang.Object) atomikosProperties16);
        java.util.Set<java.lang.String> strSet36 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3666");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration11 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties0.entrySet();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.lang.Object obj19 = properties13.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet20 = properties13.keySet();
        java.util.Set<java.lang.Object> objSet21 = properties13.keySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet25 = properties22.stringPropertyNames();
        java.lang.String str26 = properties22.toString();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.lang.Object obj34 = properties27.setProperty("tmlog", "");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj36 = properties27.clone();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        boolean boolean40 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties37.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties37.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isForceShutdownOnVmExit();
        int int51 = atomikosProperties43.getMaxActives();
        java.lang.Object obj52 = properties37.remove((java.lang.Object) int51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties37.entrySet();
        boolean boolean54 = properties27.containsKey((java.lang.Object) objEntrySet53);
        boolean boolean55 = properties0.remove((java.lang.Object) objSet21, (java.lang.Object) objEntrySet53);
        java.io.Writer writer56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer56, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{tmlog=}");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3667");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj8 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        atomikosProperties9.setCheckpointInterval((long) 100);
        atomikosProperties9.setSerialJtaTransactions(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = properties0.put(obj8, (java.lang.Object) atomikosProperties9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3668");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((-1));
        java.lang.String str14 = atomikosProperties0.getService();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties16.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties16.entrySet();
        java.util.Set<java.lang.String> strSet23 = properties16.stringPropertyNames();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties24.entrySet();
        boolean boolean30 = properties16.contains((java.lang.Object) properties24);
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties37.entrySet();
        java.lang.Object obj45 = properties31.put((java.lang.Object) properties34, (java.lang.Object) properties37);
        java.lang.Object obj46 = properties34.clone();
        boolean boolean47 = properties16.containsKey((java.lang.Object) properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties34.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.String str53 = atomikosProperties49.getService();
        atomikosProperties49.setMaxActives((int) (byte) 100);
        java.lang.Object obj56 = properties15.replace((java.lang.Object) properties34, (java.lang.Object) atomikosProperties49);
        java.lang.String str57 = properties34.toString();
        java.io.Reader reader58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.load(reader58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{}" + "'", str57, "{}");
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3669");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str7 = atomikosProperties0.getService();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("{hi!=[], {}={}}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3670");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str13 = atomikosProperties0.getService();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3671");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.lang.Object obj13 = properties0.setProperty("{{}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isEnableLogging();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setMaxActives((int) (byte) 100);
        atomikosProperties14.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties14.setDefaultJtaTimeout((long) 'a');
        boolean boolean30 = atomikosProperties14.isForceShutdownOnVmExit();
        boolean boolean31 = properties0.contains((java.lang.Object) boolean30);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3672");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setLogBaseName("{=hi!}");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.lang.Object obj20 = properties17.setProperty("{{}=tmlog}", "{[]=0.0}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3673");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        boolean boolean7 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties0.keys();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3674");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration28 = properties10.propertyNames();
        java.io.PrintWriter printWriter29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.list(printWriter29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3675");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties7.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        java.lang.Object obj22 = properties7.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setForceShutdownOnVmExit(false);
        long long25 = atomikosProperties14.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.lang.String str31 = atomikosProperties27.getService();
        boolean boolean32 = atomikosProperties27.isEnableLogging();
        java.util.Properties properties33 = atomikosProperties27.asProperties();
        atomikosProperties27.setForceShutdownOnVmExit(true);
        atomikosProperties27.setMaxActives((int) (short) -1);
        atomikosProperties27.setMaxTimeout((long) ' ');
        boolean boolean40 = properties0.replace((java.lang.Object) long25, (java.lang.Object) (-1.0d), (java.lang.Object) atomikosProperties27);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.lang.Object obj47 = properties41.setProperty("", "hi!");
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection56 = properties55.values();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties55.keys();
        java.lang.Object obj58 = properties48.remove((java.lang.Object) properties55);
        java.lang.Object obj59 = properties41.get((java.lang.Object) properties55);
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties73 = atomikosProperties66.asProperties();
        int int74 = atomikosProperties66.getMaxActives();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        boolean boolean82 = properties75.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj83 = properties60.put((java.lang.Object) atomikosProperties66, (java.lang.Object) properties75);
        boolean boolean84 = properties55.containsKey((java.lang.Object) properties75);
        boolean boolean85 = properties0.containsKey((java.lang.Object) properties75);
        java.lang.Object obj88 = properties75.setProperty("{true=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3676");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration11 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream13, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3677");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.lang.Object obj11 = properties0.setProperty("{[]=0.0}", "{}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3678");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        boolean boolean49 = properties44.containsValue((java.lang.Object) properties45);
        java.util.Collection<java.lang.Object> objCollection50 = properties44.values();
        java.lang.Object obj51 = properties27.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) objCollection50);
        boolean boolean53 = properties18.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection50, (java.lang.Object) 10.0d);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        int int58 = properties54.size();
        java.util.Properties properties59 = new java.util.Properties(properties54);
        java.util.Set<java.lang.String> strSet60 = properties54.stringPropertyNames();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties61.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isForceShutdownOnVmExit();
        java.lang.Object obj76 = properties61.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties68);
        boolean boolean77 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.Object obj78 = properties18.replace((java.lang.Object) properties54, (java.lang.Object) boolean77);
        java.lang.Object obj79 = properties15.remove((java.lang.Object) properties54);
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        boolean boolean84 = properties81.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties92 = atomikosProperties85.asProperties();
        int int93 = atomikosProperties85.getMaxActives();
        atomikosProperties85.setService("hi!");
        java.lang.Object obj96 = properties81.get((java.lang.Object) atomikosProperties85);
        java.lang.Object obj97 = properties54.put((java.lang.Object) "{{}={}}", (java.lang.Object) properties81);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Properties properties99 = new java.util.Properties(properties54);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 50 + "'", int93 == 50);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3679");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Enumeration<?> wildcardEnumeration21 = properties16.propertyNames();
        java.util.Properties properties22 = new java.util.Properties(properties16);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        boolean boolean30 = properties24.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        int int32 = properties24.size();
        java.util.Collection<java.lang.Object> objCollection33 = properties24.values();
        java.util.Properties properties34 = new java.util.Properties(properties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties24.entrySet();
        boolean boolean36 = properties22.contains((java.lang.Object) properties24);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3680");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.lang.Object obj36 = properties0.put((java.lang.Object) false, (java.lang.Object) boolean35);
        java.lang.Object obj37 = properties0.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.lang.String str41 = properties0.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.lang.Object obj42 = null;
        boolean boolean43 = properties0.equals(obj42);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3681");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties12 = atomikosProperties8.asProperties();
        java.lang.Object obj13 = properties0.remove((java.lang.Object) properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.lang.Object obj20 = properties14.clone();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet25 = properties22.stringPropertyNames();
        boolean boolean26 = properties21.containsValue((java.lang.Object) properties22);
        java.util.Collection<java.lang.Object> objCollection27 = properties21.values();
        java.lang.Object obj28 = properties21.clone();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties29.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj36 = properties29.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.lang.Object obj51 = properties37.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet50);
        java.util.Set<java.lang.Object> objSet52 = properties37.keySet();
        boolean boolean53 = properties29.containsKey((java.lang.Object) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        atomikosProperties54.setCheckpointInterval((long) 10);
        atomikosProperties54.setForceShutdownOnVmExit(true);
        boolean boolean62 = properties14.replace((java.lang.Object) properties21, (java.lang.Object) properties29, (java.lang.Object) true);
        java.lang.Object obj65 = properties29.setProperty("{=hi!}", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = atomikosProperties66.isSerialJtaTransactions();
        atomikosProperties66.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties72 = atomikosProperties66.asProperties();
        java.lang.Object obj73 = properties0.replace((java.lang.Object) "{=hi!}", (java.lang.Object) properties72);
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream74, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3682");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = atomikosProperties26.isSerialJtaTransactions();
        java.lang.String str30 = atomikosProperties26.getService();
        boolean boolean31 = atomikosProperties26.isEnableLogging();
        java.util.Properties properties32 = atomikosProperties26.asProperties();
        atomikosProperties26.setForceShutdownOnVmExit(true);
        atomikosProperties26.setMaxActives((int) (short) -1);
        boolean boolean37 = properties0.containsValue((java.lang.Object) (short) -1);
        java.lang.Object obj38 = properties0.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{[]=0.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{[]=0.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{[]=0.0}");
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3683");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = new java.util.Properties();
        boolean boolean41 = properties39.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setSerialJtaTransactions(false);
        java.lang.String str49 = atomikosProperties42.getService();
        boolean boolean50 = properties39.containsKey((java.lang.Object) atomikosProperties42);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        boolean boolean52 = properties39.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        java.lang.String str60 = atomikosProperties53.getService();
        atomikosProperties53.setDefaultJtaTimeout((long) '#');
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setTransactionManagerUniqueName("{tmlog=}");
        atomikosProperties53.setService("{=hi!}");
        atomikosProperties53.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setMaxTimeout((long) '#');
        boolean boolean78 = atomikosProperties71.isEnableLogging();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        atomikosProperties71.setCheckpointInterval(0L);
        java.lang.String str83 = atomikosProperties71.getService();
        atomikosProperties71.setSerialJtaTransactions(true);
        java.lang.Object obj86 = properties39.replace((java.lang.Object) atomikosProperties53, (java.lang.Object) true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3684");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        java.lang.Object obj81 = properties71.clone();
        java.util.Collection<java.lang.Object> objCollection82 = properties71.values();
        java.lang.Object obj83 = properties3.remove((java.lang.Object) properties71);
        int int84 = properties3.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties92 = atomikosProperties85.asProperties();
        int int93 = atomikosProperties85.getMaxActives();
        atomikosProperties85.setTransactionManagerUniqueName("hi!");
        long long96 = atomikosProperties85.getDefaultJtaTimeout();
        java.lang.Object obj97 = properties3.get((java.lang.Object) atomikosProperties85);
        java.util.Enumeration<?> wildcardEnumeration98 = properties3.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "{}");
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + true + "'", obj83, true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 50 + "'", int93 == 50);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 10000L + "'", long96 == 10000L);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertNotNull(wildcardEnumeration98);
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3685");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((-1));
        java.lang.String str14 = atomikosProperties0.getService();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties16.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties16.entrySet();
        java.util.Set<java.lang.String> strSet23 = properties16.stringPropertyNames();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties24.entrySet();
        boolean boolean30 = properties16.contains((java.lang.Object) properties24);
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties37.entrySet();
        java.lang.Object obj45 = properties31.put((java.lang.Object) properties34, (java.lang.Object) properties37);
        java.lang.Object obj46 = properties34.clone();
        boolean boolean47 = properties16.containsKey((java.lang.Object) properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties34.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.String str53 = atomikosProperties49.getService();
        atomikosProperties49.setMaxActives((int) (byte) 100);
        java.lang.Object obj56 = properties15.replace((java.lang.Object) properties34, (java.lang.Object) atomikosProperties49);
        java.io.InputStream inputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.loadFromXML(inputStream57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3686");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties0.keys();
        java.lang.String str37 = properties0.toString();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Collection<java.lang.Object> objCollection40 = properties38.values();
        java.util.Properties properties41 = new java.util.Properties(properties38);
        properties41.clear();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        int int47 = properties43.size();
        java.util.Properties properties48 = new java.util.Properties(properties43);
        java.util.Set<java.lang.String> strSet49 = properties43.stringPropertyNames();
        java.util.Set<java.lang.String> strSet50 = properties43.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties51.elements();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties56.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties56.elements();
        java.lang.Object obj62 = properties43.replace((java.lang.Object) objEnumeration55, (java.lang.Object) objEnumeration61);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Properties properties65 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = atomikosProperties66.isSerialJtaTransactions();
        java.lang.String str70 = atomikosProperties66.getService();
        boolean boolean71 = atomikosProperties66.isEnableLogging();
        java.util.Properties properties72 = atomikosProperties66.asProperties();
        java.util.Set<java.lang.String> strSet73 = properties72.stringPropertyNames();
        boolean boolean74 = properties72.isEmpty();
        boolean boolean75 = properties72.isEmpty();
        boolean boolean76 = properties43.containsValue((java.lang.Object) boolean75);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{hi!=[]}" + "'", str37, "{hi!=[]}");
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3687");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties13.containsValue((java.lang.Object) properties53);
        boolean boolean56 = properties13.isEmpty();
        java.lang.String str57 = properties13.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{}" + "'", str57, "{}");
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3688");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties13.containsValue((java.lang.Object) properties53);
        boolean boolean56 = properties13.isEmpty();
        java.util.Properties properties57 = new java.util.Properties(properties13);
        java.util.Properties properties58 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.String str63 = atomikosProperties59.getService();
        atomikosProperties59.setEnableLogging(false);
        long long66 = atomikosProperties59.getMaxTimeout();
        java.util.Properties properties67 = atomikosProperties59.asProperties();
        boolean boolean68 = properties58.containsValue((java.lang.Object) atomikosProperties59);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3689");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties0.keys();
        properties0.clear();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        int int31 = properties29.size();
        java.util.Properties properties32 = new java.util.Properties(properties29);
        java.lang.Class<?> wildcardClass33 = properties32.getClass();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties37.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties40.entrySet();
        java.lang.Object obj48 = properties34.put((java.lang.Object) properties37, (java.lang.Object) properties40);
        java.lang.String str50 = properties37.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        long long58 = atomikosProperties51.getMaxTimeout();
        boolean boolean59 = properties37.containsValue((java.lang.Object) atomikosProperties51);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties37.elements();
        java.util.Set<java.lang.String> strSet61 = properties37.stringPropertyNames();
        java.util.Set<java.lang.String> strSet62 = properties37.stringPropertyNames();
        java.lang.Object obj63 = properties0.getOrDefault((java.lang.Object) wildcardClass33, (java.lang.Object) properties37);
        java.io.Reader reader64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3690");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        java.lang.Object obj20 = properties14.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = properties6.remove((java.lang.Object) properties14, (java.lang.Object) atomikosProperties21);
        boolean boolean25 = properties0.equals((java.lang.Object) atomikosProperties21);
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream26, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3691");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        boolean boolean12 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties7.getTransactionManagerUniqueName();
        java.lang.String str14 = atomikosProperties7.getService();
        atomikosProperties7.setCheckpointInterval(0L);
        atomikosProperties7.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setDefaultJtaTimeout((long) (short) -1);
        boolean boolean24 = properties0.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setMaxActives((int) (byte) 100);
        atomikosProperties25.setForceShutdownOnVmExit(false);
        boolean boolean39 = atomikosProperties25.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties40.containsKey((java.lang.Object) objSet50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties40.keys();
        int int53 = properties40.size();
        java.lang.Object obj54 = properties0.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties40);
        java.util.Properties properties55 = new java.util.Properties(properties40);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection57 = properties56.values();
        java.util.Collection<java.lang.Object> objCollection58 = properties56.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isThreadedTwoPhaseCommit();
        atomikosProperties59.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = atomikosProperties65.isSerialJtaTransactions();
        atomikosProperties65.setTransactionManagerUniqueName("hi!");
        java.lang.String str71 = atomikosProperties65.getLogBaseName();
        java.lang.String str72 = atomikosProperties65.getLogBaseName();
        boolean boolean73 = atomikosProperties65.isForceShutdownOnVmExit();
        long long74 = atomikosProperties65.getMaxTimeout();
        java.lang.String str75 = atomikosProperties65.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        boolean boolean83 = properties56.replace((java.lang.Object) atomikosProperties59, (java.lang.Object) str75, (java.lang.Object) true);
        java.util.Properties properties84 = atomikosProperties59.asProperties();
        java.lang.Object obj85 = properties40.get((java.lang.Object) atomikosProperties59);
        java.util.Set<java.lang.String> strSet86 = properties40.stringPropertyNames();
        java.io.OutputStream outputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.storeToXML(outputStream87, "{{}={}}", "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strSet86);
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3692");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        boolean boolean4 = properties3.isEmpty();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3693");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3694");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        int int24 = atomikosProperties6.getMaxActives();
        long long25 = atomikosProperties6.getCheckpointInterval();
        long long26 = atomikosProperties6.getDefaultJtaTimeout();
        atomikosProperties6.setMaxActives((int) (short) 1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3695");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(0);
        long long11 = atomikosProperties0.getCheckpointInterval();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3696");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet16 = properties13.stringPropertyNames();
        boolean boolean17 = properties12.containsValue((java.lang.Object) properties13);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.lang.Object obj26 = properties12.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.util.Properties properties31 = atomikosProperties27.asProperties();
        java.lang.Object obj34 = properties31.setProperty("hi!", "");
        java.util.Properties properties35 = new java.util.Properties(properties31);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection40 = properties39.values();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties42.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties42.entrySet();
        java.lang.Object obj50 = properties36.put((java.lang.Object) properties39, (java.lang.Object) properties42);
        java.lang.Object obj51 = properties12.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) properties42);
        boolean boolean52 = properties0.remove((java.lang.Object) boolean11, (java.lang.Object) properties12);
        java.util.Set<java.lang.Object> objSet53 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        int int61 = atomikosProperties54.getMaxActives();
        atomikosProperties54.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties54.setTransactionManagerUniqueName("{}");
        atomikosProperties54.setMaxTimeout((-1L));
        java.lang.Object obj68 = properties0.get((java.lang.Object) atomikosProperties54);
        int int69 = properties0.size();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3697");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3698");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3699");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        int int5 = properties0.size();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean19 = properties14.containsValue((java.lang.Object) atomikosProperties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        int int24 = properties20.size();
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Set<java.lang.String> strSet26 = properties20.stringPropertyNames();
        java.util.Set<java.lang.String> strSet27 = properties20.stringPropertyNames();
        java.lang.Object obj28 = properties6.getOrDefault((java.lang.Object) properties14, (java.lang.Object) properties20);
        boolean boolean29 = properties0.equals((java.lang.Object) properties20);
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream30, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3700");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.keys();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties10.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        java.lang.Object obj32 = properties18.put((java.lang.Object) properties21, (java.lang.Object) properties24);
        java.lang.String str34 = properties21.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        long long42 = atomikosProperties35.getMaxTimeout();
        boolean boolean43 = properties21.containsValue((java.lang.Object) atomikosProperties35);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties21.elements();
        boolean boolean45 = properties10.contains((java.lang.Object) objEnumeration44);
        java.util.Properties properties46 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxTimeout((long) '#');
        long long54 = atomikosProperties47.getCheckpointInterval();
        atomikosProperties47.setMaxTimeout((long) (byte) 100);
        atomikosProperties47.setThreadedTwoPhaseCommit(false);
        java.lang.String str59 = atomikosProperties47.getLogBaseDir();
        java.lang.String str60 = atomikosProperties47.getLogBaseName();
        java.lang.Object obj61 = properties10.remove((java.lang.Object) atomikosProperties47);
        atomikosProperties47.setDefaultJtaTimeout((long) 10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        boolean boolean67 = atomikosProperties64.isSerialJtaTransactions();
        atomikosProperties64.setTransactionManagerUniqueName("hi!");
        java.lang.String str70 = atomikosProperties64.getLogBaseName();
        java.lang.String str71 = atomikosProperties64.getLogBaseName();
        java.lang.String str72 = atomikosProperties64.getService();
        boolean boolean73 = atomikosProperties64.isEnableLogging();
        java.lang.String str74 = atomikosProperties64.getLogBaseDir();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj75 = properties8.put((java.lang.Object) atomikosProperties47, (java.lang.Object) str74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 500L + "'", long54 == 500L);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3701");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties0.propertyNames();
        java.lang.String str7 = properties0.toString();
        java.lang.String str9 = properties0.getProperty("{tmlog=}");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties10.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        java.lang.Object obj25 = properties10.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties17);
        atomikosProperties17.setForceShutdownOnVmExit(true);
        java.util.Properties properties28 = atomikosProperties17.asProperties();
        java.lang.String str29 = atomikosProperties17.getService();
        boolean boolean30 = properties0.containsKey((java.lang.Object) atomikosProperties17);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3702");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long13 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3703");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isForceShutdownOnVmExit();
        boolean boolean33 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str36 = atomikosProperties22.getLogBaseName();
        boolean boolean37 = atomikosProperties22.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3704");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration18 = properties9.propertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties19.entrySet();
        java.util.Set<java.lang.String> strSet26 = properties19.stringPropertyNames();
        boolean boolean27 = properties19.isEmpty();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        boolean boolean29 = properties7.containsKey((java.lang.Object) properties9);
        java.lang.Object obj30 = properties7.clone();
        java.lang.Object obj33 = properties7.setProperty("{hi!=[]}", "{tmlog=}");
        java.io.InputStream inputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.loadFromXML(inputStream34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3705");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties10.getService();
        boolean boolean15 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties16 = atomikosProperties10.asProperties();
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setMaxActives((int) (short) -1);
        atomikosProperties10.setMaxTimeout((long) ' ');
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setService("{{}={}}");
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.lang.Object obj37 = properties27.remove((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setTransactionManagerUniqueName("hi!");
        java.lang.String str44 = atomikosProperties38.getLogBaseName();
        java.lang.String str45 = atomikosProperties38.getLogBaseName();
        boolean boolean46 = atomikosProperties38.isForceShutdownOnVmExit();
        long long47 = atomikosProperties38.getMaxTimeout();
        java.lang.String str48 = atomikosProperties38.getTransactionManagerUniqueName();
        java.lang.String str49 = atomikosProperties38.getLogBaseName();
        boolean boolean50 = atomikosProperties38.isThreadedTwoPhaseCommit();
        atomikosProperties38.setThreadedTwoPhaseCommit(false);
        boolean boolean53 = properties0.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties27, (java.lang.Object) atomikosProperties38);
        atomikosProperties38.setService("{=hi!}");
        long long56 = atomikosProperties38.getCheckpointInterval();
        atomikosProperties38.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 500L + "'", long56 == 500L);
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3706");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties5.containsKey((java.lang.Object) objSet15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties5.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        boolean boolean27 = properties5.remove((java.lang.Object) properties18, (java.lang.Object) 1.0f);
        boolean boolean28 = properties18.isEmpty();
        boolean boolean30 = properties0.remove((java.lang.Object) properties18, (java.lang.Object) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties18.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.util.Properties properties38 = atomikosProperties32.asProperties();
        java.util.Set<java.lang.String> strSet39 = properties38.stringPropertyNames();
        boolean boolean40 = properties38.isEmpty();
        java.lang.Object obj41 = properties18.remove((java.lang.Object) boolean40);
        int int42 = properties18.size();
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.save(outputStream43, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3707");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = properties0.clone();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties15.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj22 = properties15.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.lang.Object obj37 = properties23.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet36);
        java.util.Set<java.lang.Object> objSet38 = properties23.keySet();
        boolean boolean39 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setCheckpointInterval((long) 10);
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean48 = properties0.replace((java.lang.Object) properties7, (java.lang.Object) properties15, (java.lang.Object) true);
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.lang.String str57 = properties49.getProperty("hi!");
        java.lang.String str59 = properties49.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        boolean boolean67 = properties49.containsKey((java.lang.Object) atomikosProperties60);
        java.lang.Object obj70 = properties49.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        boolean boolean74 = atomikosProperties71.isThreadedTwoPhaseCommit();
        atomikosProperties71.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setMaxTimeout((long) '#');
        boolean boolean84 = atomikosProperties77.isEnableLogging();
        java.lang.Object obj85 = properties49.put((java.lang.Object) false, (java.lang.Object) boolean84);
        java.lang.Object obj86 = properties49.clone();
        java.lang.Object obj87 = properties49.clone();
        java.util.Properties properties88 = new java.util.Properties();
        boolean boolean90 = properties88.contains((java.lang.Object) 100.0d);
        java.lang.Object obj91 = null;
        boolean boolean92 = properties88.equals(obj91);
        int int93 = properties88.size();
        java.lang.Object obj94 = properties15.getOrDefault(obj87, (java.lang.Object) int93);
        java.io.OutputStream outputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream95, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{hi!=, false=true}");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertEquals("'" + obj94 + "' != '" + 0 + "'", obj94, 0);
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3708");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Set<java.lang.Object> objSet44 = properties0.keySet();
        java.io.InputStream inputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(objSet44);
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{=hi!}");
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("{true=true}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3710");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.String str29 = atomikosProperties12.getLogBaseName();
        long long30 = atomikosProperties12.getMaxTimeout();
        long long31 = atomikosProperties12.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 35L + "'", long30 == 35L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 35L + "'", long31 == 35L);
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3711");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Enumeration<?> wildcardEnumeration21 = properties16.propertyNames();
        java.util.Properties properties22 = new java.util.Properties(properties16);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj24 = properties5.clone();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties25.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setMaxTimeout((long) '#');
        boolean boolean39 = atomikosProperties32.isForceShutdownOnVmExit();
        java.lang.Object obj40 = properties25.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties32);
        atomikosProperties32.setForceShutdownOnVmExit(true);
        java.util.Properties properties43 = atomikosProperties32.asProperties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties5.containsValue((java.lang.Object) properties44);
        java.io.InputStream inputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.loadFromXML(inputStream46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{tmlog=}");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3712");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties5.entrySet();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.lang.Object obj19 = properties13.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = properties5.remove((java.lang.Object) properties13, (java.lang.Object) atomikosProperties20);
        java.util.Properties properties24 = new java.util.Properties(properties13);
        int int25 = properties24.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.lang.String str31 = atomikosProperties27.getService();
        boolean boolean32 = atomikosProperties27.isEnableLogging();
        java.lang.String str33 = atomikosProperties27.getTransactionManagerUniqueName();
        boolean boolean34 = properties24.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties35.entrySet();
        java.lang.Object obj42 = properties24.remove((java.lang.Object) objEntrySet41);
        boolean boolean43 = properties24.isEmpty();
        java.lang.String str44 = properties24.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = atomikosProperties45.isSerialJtaTransactions();
        java.util.Properties properties49 = atomikosProperties45.asProperties();
        int int50 = atomikosProperties45.getMaxActives();
        java.lang.Object obj51 = properties0.putIfAbsent((java.lang.Object) properties24, (java.lang.Object) int50);
        java.io.Writer writer52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer52, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3713");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 1);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.io.PrintWriter printWriter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.list(printWriter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection11);
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3714");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties0.entrySet();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream12, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEntrySet11);
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3715");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        int int28 = atomikosProperties20.getMaxActives();
        atomikosProperties20.setService("hi!");
        java.lang.Object obj31 = properties16.get((java.lang.Object) atomikosProperties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        java.util.Properties properties51 = new java.util.Properties(properties40);
        int int52 = properties51.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str58 = atomikosProperties54.getService();
        boolean boolean59 = atomikosProperties54.isEnableLogging();
        java.lang.String str60 = atomikosProperties54.getTransactionManagerUniqueName();
        boolean boolean61 = properties51.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties62.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties62.entrySet();
        java.lang.Object obj69 = properties51.remove((java.lang.Object) objEntrySet68);
        boolean boolean70 = properties51.isEmpty();
        java.lang.String str71 = properties51.toString();
        properties51.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties51.elements();
        java.lang.Object obj74 = properties0.replace((java.lang.Object) properties16, (java.lang.Object) properties51);
        boolean boolean75 = properties16.isEmpty();
        java.io.PrintWriter printWriter76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.list(printWriter76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3716");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Set<java.lang.Object> objSet23 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxTimeout((long) '#');
        long long31 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str32 = atomikosProperties24.getTransactionManagerUniqueName();
        atomikosProperties24.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties24.setLogBaseName("hi!");
        long long37 = atomikosProperties24.getCheckpointInterval();
        java.util.Properties properties38 = atomikosProperties24.asProperties();
        boolean boolean39 = properties0.equals((java.lang.Object) properties38);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties40.containsValue((java.lang.Object) "hi!");
        java.lang.String str46 = properties40.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration47 = properties40.propertyNames();
        java.lang.String str49 = properties40.getProperty("{{}={}}");
        java.lang.String str50 = properties40.toString();
        java.util.Properties properties51 = new java.util.Properties();
        boolean boolean53 = properties51.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setSerialJtaTransactions(false);
        java.lang.String str61 = atomikosProperties54.getService();
        boolean boolean62 = properties51.containsKey((java.lang.Object) atomikosProperties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setMaxTimeout((long) '#');
        boolean boolean70 = atomikosProperties63.isEnableLogging();
        atomikosProperties63.setCheckpointInterval((long) 100);
        atomikosProperties63.setForceShutdownOnVmExit(false);
        boolean boolean75 = properties51.containsValue((java.lang.Object) atomikosProperties63);
        atomikosProperties63.setService("{=hi!}");
        java.util.Properties properties78 = atomikosProperties63.asProperties();
        java.lang.Object obj79 = properties40.get((java.lang.Object) atomikosProperties63);
        int int80 = atomikosProperties63.getMaxActives();
        java.lang.Object obj81 = properties0.remove((java.lang.Object) int80);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 500L + "'", long31 == 500L);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3717");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.lang.Object obj63 = properties49.put((java.lang.Object) properties52, (java.lang.Object) properties55);
        java.lang.String str65 = properties52.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        long long73 = atomikosProperties66.getMaxTimeout();
        boolean boolean74 = properties52.containsValue((java.lang.Object) atomikosProperties66);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties52.elements();
        java.util.Set<java.lang.String> strSet76 = properties52.stringPropertyNames();
        boolean boolean77 = properties43.contains((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setEnableLogging(false);
        boolean boolean86 = atomikosProperties79.isSerialJtaTransactions();
        int int87 = atomikosProperties79.getMaxActives();
        boolean boolean88 = atomikosProperties79.isEnableLogging();
        long long89 = atomikosProperties79.getCheckpointInterval();
        java.util.Properties properties90 = atomikosProperties79.asProperties();
        atomikosProperties79.setForceShutdownOnVmExit(false);
        boolean boolean93 = atomikosProperties79.isSerialJtaTransactions();
        java.lang.Object obj94 = properties52.put((java.lang.Object) (byte) -1, (java.lang.Object) boolean93);
        java.lang.Object obj95 = properties0.get((java.lang.Object) boolean93);
        int int96 = properties0.size();
        java.io.PrintStream printStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 500L + "'", long89 == 500L);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3718");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.lang.Object obj41 = properties13.clone();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        java.lang.String str46 = properties42.toString();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.lang.Object obj54 = properties47.setProperty("tmlog", "");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Collection<java.lang.Object> objCollection56 = properties42.values();
        java.lang.Object obj57 = properties13.get((java.lang.Object) objCollection56);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{}" + "'", str46, "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3719");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setDefaultJtaTimeout((long) 9);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3720");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet15 = properties0.stringPropertyNames();
        boolean boolean16 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        boolean boolean20 = atomikosProperties17.isSerialJtaTransactions();
        java.lang.String str21 = atomikosProperties17.getService();
        atomikosProperties17.setEnableLogging(false);
        long long24 = atomikosProperties17.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        boolean boolean30 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.String str31 = atomikosProperties25.getLogBaseDir();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties32.keys();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean42 = properties35.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection43 = properties35.values();
        java.lang.Object obj44 = properties35.clone();
        boolean boolean45 = properties32.equals((java.lang.Object) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties32.elements();
        boolean boolean47 = properties0.replace((java.lang.Object) long24, (java.lang.Object) atomikosProperties25, (java.lang.Object) properties32);
        java.io.PrintWriter printWriter48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3721");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        boolean boolean29 = properties26.isEmpty();
        java.lang.Object obj32 = properties26.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = properties18.remove((java.lang.Object) properties26, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties37 = new java.util.Properties(properties26);
        int int38 = properties37.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        java.lang.String str44 = atomikosProperties40.getService();
        boolean boolean45 = atomikosProperties40.isEnableLogging();
        java.lang.String str46 = atomikosProperties40.getTransactionManagerUniqueName();
        boolean boolean47 = properties37.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        java.lang.String str55 = atomikosProperties48.getLogBaseDir();
        boolean boolean56 = atomikosProperties48.isThreadedTwoPhaseCommit();
        java.lang.Object obj57 = properties37.get((java.lang.Object) boolean56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxTimeout((long) '#');
        long long65 = atomikosProperties58.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties58.getTransactionManagerUniqueName();
        java.lang.Object obj67 = properties0.getOrDefault((java.lang.Object) properties37, (java.lang.Object) str66);
        boolean boolean68 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 500L + "'", long65 == 500L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3722");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(1L);
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3723");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        long long14 = atomikosProperties0.getMaxTimeout();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3724");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.lang.Object obj11 = properties0.setProperty("{=hi!}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3725");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("");
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3726");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.String str31 = properties18.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        long long39 = atomikosProperties32.getMaxTimeout();
        boolean boolean40 = properties18.containsValue((java.lang.Object) atomikosProperties32);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties18.elements();
        boolean boolean42 = properties7.contains((java.lang.Object) objEnumeration41);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        boolean boolean44 = properties7.isEmpty();
        properties7.clear();
        java.lang.Object obj48 = properties7.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3727");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        atomikosProperties8.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj45 = properties16.getOrDefault((java.lang.Object) boolean37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties38);
        java.lang.String str47 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties48 = atomikosProperties8.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties48.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEntrySet50);
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3728");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxTimeout((long) '4');
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.keys();
        java.lang.Class<?> wildcardClass16 = objEnumeration15.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3729");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties46.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) properties39, (java.lang.Object) boolean62);
        java.lang.Object obj64 = properties0.remove((java.lang.Object) properties39);
        java.lang.String str66 = properties0.getProperty("{=hi!}");
        java.util.Properties properties67 = new java.util.Properties(properties0);
        boolean boolean69 = properties0.equals((java.lang.Object) "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.PrintStream printStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3730");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet9 = properties7.keySet();
        java.util.Set<java.lang.Object> objSet10 = properties7.keySet();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objSet10);
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3731");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.lang.String str20 = properties12.getProperty("hi!");
        java.lang.String str22 = properties12.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setEnableLogging(false);
        boolean boolean30 = properties12.containsKey((java.lang.Object) atomikosProperties23);
        java.lang.Object obj33 = properties12.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isThreadedTwoPhaseCommit();
        atomikosProperties34.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        java.lang.Object obj48 = properties12.put((java.lang.Object) false, (java.lang.Object) boolean47);
        java.lang.Object obj49 = properties12.clone();
        java.lang.Object obj50 = properties12.clone();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream52, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{hi!=, false=true}");
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3732");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{=hi!}");
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{=hi!}" + "'", str14, "{=hi!}");
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3733");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties5.containsKey((java.lang.Object) objSet15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties5.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        boolean boolean27 = properties5.remove((java.lang.Object) properties18, (java.lang.Object) 1.0f);
        boolean boolean28 = properties18.isEmpty();
        boolean boolean30 = properties0.remove((java.lang.Object) properties18, (java.lang.Object) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties18.elements();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        boolean boolean43 = properties37.isEmpty();
        java.lang.Object obj44 = properties32.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean43);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties45.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties45.keys();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet58 = properties55.stringPropertyNames();
        boolean boolean59 = properties54.containsValue((java.lang.Object) properties55);
        java.util.Collection<java.lang.Object> objCollection60 = properties54.values();
        java.util.Enumeration<?> wildcardEnumeration61 = properties54.propertyNames();
        java.lang.Object obj63 = properties50.put((java.lang.Object) wildcardEnumeration61, (java.lang.Object) 10.0d);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet68 = properties65.stringPropertyNames();
        boolean boolean69 = properties64.containsValue((java.lang.Object) properties65);
        java.util.Collection<java.lang.Object> objCollection70 = properties64.values();
        java.lang.Object obj71 = properties64.clone();
        boolean boolean72 = properties32.replace((java.lang.Object) properties45, (java.lang.Object) 10.0d, obj71);
        java.util.Properties properties73 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties45.keys();
        java.lang.Object obj75 = properties18.remove((java.lang.Object) properties45);
        java.util.Enumeration<?> wildcardEnumeration76 = properties18.propertyNames();
        java.util.Collection<java.lang.Object> objCollection77 = properties18.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + obj44 + "' != '" + true + "'", obj44, true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(wildcardEnumeration61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
        org.junit.Assert.assertNotNull(objCollection77);
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3734");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties12 = atomikosProperties8.asProperties();
        java.lang.Object obj13 = properties0.remove((java.lang.Object) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isEnableLogging();
        atomikosProperties14.setTransactionManagerUniqueName("hi!");
        java.lang.String str24 = atomikosProperties14.getTransactionManagerUniqueName();
        java.lang.Class<?> wildcardClass25 = atomikosProperties14.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setMaxTimeout((long) '#');
        boolean boolean33 = atomikosProperties26.isEnableLogging();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        boolean boolean36 = atomikosProperties26.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties26.getService();
        java.lang.Object obj38 = properties12.getOrDefault((java.lang.Object) atomikosProperties14, (java.lang.Object) atomikosProperties26);
        long long39 = atomikosProperties14.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3735");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        atomikosProperties3.setMaxTimeout(500L);
        java.lang.String str31 = atomikosProperties3.getLogBaseDir();
        boolean boolean32 = atomikosProperties3.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3736");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        long long14 = atomikosProperties0.getMaxTimeout();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3737");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 1);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3738");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3739");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        boolean boolean29 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) long28);
        java.util.Set<java.lang.Object> objSet30 = properties0.keySet();
        java.util.Enumeration<?> wildcardEnumeration31 = properties0.propertyNames();
        java.io.Writer writer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer32, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3740");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.lang.Object obj30 = properties24.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = properties16.remove((java.lang.Object) properties24, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        int int36 = properties35.size();
        int int37 = properties35.size();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj39 = properties35.get((java.lang.Object) properties38);
        boolean boolean40 = properties0.containsValue((java.lang.Object) properties38);
        boolean boolean41 = properties38.isEmpty();
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.save(outputStream42, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3741");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties34.clone();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties41.keys();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties48.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        java.lang.Object obj63 = properties48.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setForceShutdownOnVmExit(false);
        long long66 = atomikosProperties55.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.String str72 = atomikosProperties68.getService();
        boolean boolean73 = atomikosProperties68.isEnableLogging();
        java.util.Properties properties74 = atomikosProperties68.asProperties();
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setMaxActives((int) (short) -1);
        atomikosProperties68.setMaxTimeout((long) ' ');
        boolean boolean81 = properties41.replace((java.lang.Object) long66, (java.lang.Object) (-1.0d), (java.lang.Object) atomikosProperties68);
        boolean boolean82 = properties8.remove((java.lang.Object) properties34, (java.lang.Object) long66);
        java.lang.Object obj83 = properties8.clone();
        int int84 = properties8.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3742");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.loadFromXML(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3743");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3744");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        int int5 = properties0.size();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Enumeration<?> wildcardEnumeration12 = properties7.propertyNames();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean21 = properties7.containsValue((java.lang.Object) objEntrySet20);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.lang.Object obj36 = properties22.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet35);
        java.util.Set<java.lang.Object> objSet37 = properties22.keySet();
        java.util.Set<java.lang.Object> objSet38 = properties22.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties22.entrySet();
        java.util.Set<java.lang.Object> objSet40 = properties22.keySet();
        boolean boolean41 = properties7.equals((java.lang.Object) objSet40);
        java.util.Set<java.lang.Object> objSet42 = properties7.keySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        java.lang.String str47 = properties43.toString();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.lang.Object obj55 = properties48.setProperty("tmlog", "");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.lang.Object obj57 = properties48.clone();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties58.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties58.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = atomikosProperties66.isSerialJtaTransactions();
        java.lang.String str70 = atomikosProperties66.getService();
        boolean boolean71 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setCheckpointInterval((long) (byte) 100);
        java.lang.String str74 = atomikosProperties66.getLogBaseName();
        boolean boolean75 = properties58.contains((java.lang.Object) atomikosProperties66);
        boolean boolean76 = properties48.containsValue((java.lang.Object) atomikosProperties66);
        java.util.Properties properties77 = new java.util.Properties(properties48);
        java.lang.Object obj78 = properties0.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties48);
        java.lang.Object obj79 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = properties7.containsKey(obj79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{tmlog=}");
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3745");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties(properties8);
        java.lang.String str17 = properties15.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxTimeout((long) '#');
        boolean boolean25 = atomikosProperties18.isEnableLogging();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setMaxActives((int) (byte) 100);
        atomikosProperties18.setForceShutdownOnVmExit(false);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        int int34 = atomikosProperties18.getMaxActives();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection39 = properties35.values();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.keys();
        java.lang.Object obj41 = properties15.getOrDefault((java.lang.Object) atomikosProperties18, (java.lang.Object) objEnumeration40);
        java.lang.String str42 = atomikosProperties18.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3746");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3747");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setEnableLogging(true);
        atomikosProperties22.setLogBaseDir("");
        boolean boolean36 = properties6.replace((java.lang.Object) 10000L, (java.lang.Object) atomikosProperties10, (java.lang.Object) "");
        properties6.clear();
        int int38 = properties6.size();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection40 = properties39.values();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        java.lang.Object obj44 = properties39.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        boolean boolean48 = properties46.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setSerialJtaTransactions(false);
        java.lang.String str56 = atomikosProperties49.getService();
        boolean boolean57 = properties46.containsKey((java.lang.Object) atomikosProperties49);
        boolean boolean58 = properties39.containsKey((java.lang.Object) properties46);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties39.entrySet();
        java.lang.Object obj60 = properties0.getOrDefault((java.lang.Object) properties6, (java.lang.Object) objEntrySet59);
        java.io.Writer writer61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.store(writer61, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(obj60);
// flaky:         org.junit.Assert.assertEquals(obj60.toString(), "[{}={}]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[{}={}]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[{}={}]");
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3748");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3749");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        java.lang.String str47 = atomikosProperties40.getService();
        atomikosProperties40.setDefaultJtaTimeout((long) '#');
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties19.get((java.lang.Object) (byte) -1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3750");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setCheckpointInterval((long) (-1));
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        properties15.clear();
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(outputStream17, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3751");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval(300000L);
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(true);
        long long18 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3752");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setLogBaseDir("tmlog");
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) 2);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3753");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        int int18 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str23 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3754");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long9 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3755");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.lang.String str29 = atomikosProperties16.getTransactionManagerUniqueName();
        atomikosProperties16.setMaxTimeout(10000L);
        java.lang.String str32 = atomikosProperties16.getService();
        boolean boolean33 = atomikosProperties16.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3756");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        long long14 = atomikosProperties0.getCheckpointInterval();
        int int15 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{[]=0.0}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3757");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean12 = properties9.isEmpty();
        java.lang.Object obj15 = properties9.setProperty("", "hi!");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.lang.Object obj26 = properties16.remove((java.lang.Object) properties23);
        java.lang.Object obj27 = properties9.get((java.lang.Object) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties23.keys();
        java.lang.Object obj29 = properties0.get((java.lang.Object) properties23);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet34 = properties31.stringPropertyNames();
        boolean boolean35 = properties30.containsValue((java.lang.Object) properties31);
        java.util.Enumeration<?> wildcardEnumeration36 = properties30.propertyNames();
        java.lang.Object obj37 = properties0.remove((java.lang.Object) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setMaxTimeout((long) '#');
        boolean boolean45 = atomikosProperties38.isEnableLogging();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        java.lang.String str48 = atomikosProperties38.getLogBaseName();
        boolean boolean49 = properties0.contains((java.lang.Object) str48);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3758");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        long long35 = atomikosProperties28.getCheckpointInterval();
        java.lang.String str36 = atomikosProperties28.getTransactionManagerUniqueName();
        atomikosProperties28.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties28.setSerialJtaTransactions(false);
        java.util.Properties properties41 = atomikosProperties28.asProperties();
        atomikosProperties28.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setMaxTimeout((long) '#');
        boolean boolean51 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setMaxActives((int) '#');
        atomikosProperties44.setSerialJtaTransactions(true);
        boolean boolean56 = atomikosProperties44.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass57 = atomikosProperties44.getClass();
        java.lang.Object obj58 = properties27.getOrDefault((java.lang.Object) atomikosProperties28, (java.lang.Object) atomikosProperties44);
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setDefaultJtaTimeout((long) (short) -1);
        boolean boolean65 = atomikosProperties28.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3759");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        atomikosProperties7.setSerialJtaTransactions(true);
        atomikosProperties7.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3760");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        atomikosProperties0.setCheckpointInterval(10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3761");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        atomikosProperties34.setLogBaseName("hi!");
        long long44 = atomikosProperties34.getDefaultJtaTimeout();
        boolean boolean45 = atomikosProperties34.isSerialJtaTransactions();
        java.util.Properties properties46 = new java.util.Properties();
        boolean boolean48 = properties46.contains((java.lang.Object) 100.0d);
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        boolean boolean55 = properties49.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties49.entrySet();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        boolean boolean60 = properties57.isEmpty();
        java.lang.Object obj63 = properties57.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        boolean boolean67 = properties49.remove((java.lang.Object) properties57, (java.lang.Object) atomikosProperties64);
        boolean boolean68 = properties46.equals((java.lang.Object) properties49);
        boolean boolean69 = properties49.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties49.elements();
        java.util.Collection<java.lang.Object> objCollection71 = properties49.values();
        boolean boolean72 = properties32.remove((java.lang.Object) boolean45, (java.lang.Object) properties49);
        java.io.OutputStream outputStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties32.storeToXML(outputStream73, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3762");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties7.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        boolean boolean15 = properties1.containsValue((java.lang.Object) objEntrySet14);
        java.lang.String str17 = properties1.getProperty("");
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.lang.String str22 = properties18.toString();
        java.lang.String str23 = properties18.toString();
        java.util.Set<java.lang.Object> objSet24 = properties18.keySet();
        boolean boolean25 = properties1.contains((java.lang.Object) objSet24);
        java.lang.Class<?> wildcardClass26 = objSet24.getClass();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3763");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long18 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties7.asProperties();
        atomikosProperties7.setLogBaseDir("{{}={}}");
        atomikosProperties7.setThreadedTwoPhaseCommit(false);
        atomikosProperties7.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties7.setDefaultJtaTimeout((long) (byte) 10);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3764");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties0.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean29 = properties18.containsKey((java.lang.Object) objSet28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties18.keys();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties31.entrySet();
        boolean boolean40 = properties18.remove((java.lang.Object) properties31, (java.lang.Object) 1.0f);
        java.lang.Object obj41 = properties31.clone();
        java.util.Collection<java.lang.Object> objCollection42 = properties31.values();
        java.util.Collection<java.lang.Object> objCollection43 = properties31.values();
        java.lang.String str44 = properties31.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxTimeout((long) '#');
        boolean boolean52 = atomikosProperties45.isEnableLogging();
        atomikosProperties45.setMaxActives((int) '#');
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        java.lang.Class<?> wildcardClass59 = atomikosProperties45.getClass();
        boolean boolean60 = properties31.contains((java.lang.Object) atomikosProperties45);
        boolean boolean61 = properties31.isEmpty();
        boolean boolean62 = properties0.containsValue((java.lang.Object) properties31);
        java.lang.String str63 = properties31.toString();
        java.io.OutputStream outputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.store(outputStream64, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}");
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3765");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3766");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet7 = properties6.stringPropertyNames();
        java.lang.Object obj8 = properties6.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.keys();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
// flaky:         org.junit.Assert.assertEquals(obj8.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration9);
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3767");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties34.entrySet();
        java.lang.Object obj41 = properties0.put((java.lang.Object) atomikosProperties30, (java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties42.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setEnableLogging(false);
        atomikosProperties54.setSerialJtaTransactions(false);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties63.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties63.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        boolean boolean74 = properties71.isEmpty();
        java.lang.Object obj77 = properties71.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        boolean boolean81 = properties63.remove((java.lang.Object) properties71, (java.lang.Object) atomikosProperties78);
        java.util.Properties properties82 = new java.util.Properties(properties71);
        int int83 = properties82.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        boolean boolean88 = atomikosProperties85.isSerialJtaTransactions();
        java.lang.String str89 = atomikosProperties85.getService();
        boolean boolean90 = atomikosProperties85.isEnableLogging();
        java.lang.String str91 = atomikosProperties85.getTransactionManagerUniqueName();
        boolean boolean92 = properties82.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties85);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        boolean boolean95 = properties0.replace((java.lang.Object) atomikosProperties42, (java.lang.Object) false, (java.lang.Object) atomikosProperties85);
        boolean boolean96 = atomikosProperties85.isSerialJtaTransactions();
        atomikosProperties85.setEnableLogging(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseName("{{}=tmlog}");
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3769");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3770");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=[], {}={}}");
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3771");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout(1L);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3772");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties15.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        java.lang.String str31 = atomikosProperties25.getLogBaseName();
        long long32 = atomikosProperties25.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        boolean boolean38 = atomikosProperties33.isSerialJtaTransactions();
        boolean boolean39 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.String str40 = atomikosProperties33.getService();
        boolean boolean41 = atomikosProperties33.isThreadedTwoPhaseCommit();
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj44 = properties15.put((java.lang.Object) long32, (java.lang.Object) false);
        java.lang.String str46 = properties15.getProperty("{hi!=[], {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        java.util.Properties properties51 = atomikosProperties47.asProperties();
        java.lang.Object obj54 = properties51.setProperty("hi!", "");
        java.util.Properties properties55 = new java.util.Properties(properties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties51.entrySet();
        java.lang.Object obj57 = properties51.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties51.keys();
        java.lang.Class<?> wildcardClass59 = objEnumeration58.getClass();
        java.lang.Object obj60 = properties15.remove((java.lang.Object) objEnumeration58);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(obj57);
// flaky:         org.junit.Assert.assertEquals(obj57.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3773");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3774");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        boolean boolean34 = properties0.remove((java.lang.Object) str32, (java.lang.Object) 1.0d);
        java.util.Properties properties35 = new java.util.Properties(properties0);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        boolean boolean45 = properties40.containsValue((java.lang.Object) properties41);
        java.util.Collection<java.lang.Object> objCollection46 = properties40.values();
        java.util.Enumeration<?> wildcardEnumeration47 = properties40.propertyNames();
        java.lang.Object obj49 = properties36.put((java.lang.Object) wildcardEnumeration47, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.String str55 = atomikosProperties51.getService();
        boolean boolean56 = atomikosProperties51.isEnableLogging();
        java.lang.String str57 = atomikosProperties51.getTransactionManagerUniqueName();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties71.isEmpty();
        java.lang.Object obj82 = properties36.put((java.lang.Object) atomikosProperties51, (java.lang.Object) properties71);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.lang.String str84 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3775");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str8 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3776");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties10.elements();
        java.lang.Object obj35 = properties10.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3777");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties0.getService();
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{tmlog=}");
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3778");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        boolean boolean7 = properties0.isEmpty();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        boolean boolean14 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties8.entrySet();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        java.lang.Object obj22 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = properties8.remove((java.lang.Object) properties16, (java.lang.Object) atomikosProperties23);
        boolean boolean27 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setService("{=hi!}");
        boolean boolean30 = properties0.containsKey((java.lang.Object) atomikosProperties23);
        java.lang.String str31 = atomikosProperties23.getTransactionManagerUniqueName();
        atomikosProperties23.setTransactionManagerUniqueName("{hi!=[]}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3779");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.io.PrintStream printStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3780");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str4 = properties0.getProperty("");
        java.lang.String str7 = properties0.getProperty("{true=true}", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3781");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties0.elements();
        java.io.PrintStream printStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3782");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        int int5 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isEnableLogging();
        atomikosProperties6.setForceShutdownOnVmExit(true);
        boolean boolean16 = atomikosProperties6.isThreadedTwoPhaseCommit();
        atomikosProperties6.setLogBaseName("{tmlog=}");
        boolean boolean19 = properties0.containsKey((java.lang.Object) "{tmlog=}");
        java.io.InputStream inputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3783");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) 9);
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3784");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties12 = atomikosProperties8.asProperties();
        java.lang.Object obj13 = properties0.remove((java.lang.Object) properties12);
        java.lang.Object obj14 = properties12.clone();
        boolean boolean15 = properties12.isEmpty();
        java.lang.String str17 = properties12.getProperty("{hi!=[], {}={}}");
        java.io.PrintWriter printWriter18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printWriter18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
// flaky:         org.junit.Assert.assertEquals(obj14.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3785");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection15 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        boolean boolean22 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean25 = properties0.remove((java.lang.Object) objCollection15, (java.lang.Object) atomikosProperties16);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet39);
        java.util.Set<java.lang.Object> objSet41 = properties26.keySet();
        java.util.Set<java.lang.Object> objSet42 = properties26.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties26.entrySet();
        boolean boolean44 = properties0.contains((java.lang.Object) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = atomikosProperties45.isSerialJtaTransactions();
        java.lang.String str49 = atomikosProperties45.getService();
        boolean boolean50 = atomikosProperties45.isEnableLogging();
        atomikosProperties45.setThreadedTwoPhaseCommit(false);
        long long53 = atomikosProperties45.getCheckpointInterval();
        boolean boolean54 = atomikosProperties45.isEnableLogging();
        java.lang.String str55 = atomikosProperties45.getLogBaseDir();
        atomikosProperties45.setCheckpointInterval((long) ' ');
        java.lang.Object obj58 = properties0.get((java.lang.Object) ' ');
        java.io.Writer writer59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer59, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 500L + "'", long53 == 500L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3786");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.lang.String str6 = properties0.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setEnableLogging(false);
        boolean boolean14 = atomikosProperties7.isSerialJtaTransactions();
        int int15 = atomikosProperties7.getMaxActives();
        atomikosProperties7.setTransactionManagerUniqueName("tmlog");
        boolean boolean18 = atomikosProperties7.isSerialJtaTransactions();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        java.lang.Object obj33 = properties19.put((java.lang.Object) properties22, (java.lang.Object) properties25);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.util.Set<java.lang.Object> objSet50 = properties34.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties34.entrySet();
        java.lang.Object obj52 = properties22.remove((java.lang.Object) objEntrySet51);
        java.lang.String str53 = properties22.toString();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.String str58 = properties54.toString();
        java.lang.String str59 = properties54.toString();
        java.util.Set<java.lang.Object> objSet60 = properties54.keySet();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean67 = properties61.isEmpty();
        java.lang.Object obj68 = properties22.putIfAbsent((java.lang.Object) properties54, (java.lang.Object) boolean67);
        boolean boolean70 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) properties22, (java.lang.Object) '4');
        java.lang.String str71 = atomikosProperties7.getLogBaseDir();
        long long72 = atomikosProperties7.getCheckpointInterval();
        boolean boolean73 = atomikosProperties7.isForceShutdownOnVmExit();
        boolean boolean74 = atomikosProperties7.isSerialJtaTransactions();
        java.lang.String str75 = atomikosProperties7.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3787");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        java.util.Enumeration<?> wildcardEnumeration56 = properties33.propertyNames();
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.save(outputStream57, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3788");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        long long9 = atomikosProperties0.getCheckpointInterval();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3789");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        long long29 = atomikosProperties21.getDefaultJtaTimeout();
        atomikosProperties21.setSerialJtaTransactions(true);
        atomikosProperties21.setLogBaseDir("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str34 = atomikosProperties21.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3790");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        int int19 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        boolean boolean29 = atomikosProperties20.isSerialJtaTransactions();
        java.lang.String str30 = atomikosProperties20.getService();
        java.lang.Object obj31 = properties0.get((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setForceShutdownOnVmExit(false);
        atomikosProperties20.setSerialJtaTransactions(true);
        boolean boolean36 = atomikosProperties20.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3791");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Enumeration<?> wildcardEnumeration34 = properties8.propertyNames();
        int int35 = properties8.size();
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream36, "{{}=tmlog}", "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3792");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties(properties8);
        java.lang.String str17 = properties15.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxTimeout((long) '#');
        boolean boolean25 = atomikosProperties18.isEnableLogging();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setMaxActives((int) (byte) 100);
        atomikosProperties18.setForceShutdownOnVmExit(false);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        int int34 = atomikosProperties18.getMaxActives();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection39 = properties35.values();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.keys();
        java.lang.Object obj41 = properties15.getOrDefault((java.lang.Object) atomikosProperties18, (java.lang.Object) objEnumeration40);
        java.lang.String str42 = properties15.toString();
        java.util.Set<java.lang.String> strSet43 = properties15.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertNotNull(strSet43);
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3793");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties(properties0);
        java.lang.String str10 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3794");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long8 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3795");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        java.util.Properties properties67 = atomikosProperties55.asProperties();
        atomikosProperties55.setTransactionManagerUniqueName("tmlog");
        atomikosProperties55.setMaxActives((int) (short) 1);
        long long72 = atomikosProperties55.getDefaultJtaTimeout();
        atomikosProperties55.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10000L + "'", long72 == 10000L);
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3796");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout(1L);
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("tmlog");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3797");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties16.containsKey((java.lang.Object) objSet26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties16.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean38 = properties16.remove((java.lang.Object) properties29, (java.lang.Object) 1.0f);
        java.lang.Object obj39 = properties29.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties29.values();
        java.util.Properties properties41 = new java.util.Properties(properties29);
        boolean boolean42 = properties0.containsKey((java.lang.Object) properties29);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Enumeration<?> wildcardEnumeration49 = properties44.propertyNames();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.util.Set<java.lang.String> strSet51 = properties50.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        boolean boolean54 = properties52.contains((java.lang.Object) 100.0d);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        boolean boolean74 = properties52.equals((java.lang.Object) properties55);
        java.util.Enumeration<?> wildcardEnumeration75 = properties55.propertyNames();
        java.lang.String str77 = properties55.getProperty("{=hi!}");
        java.lang.Object obj78 = properties55.clone();
        java.lang.Object obj79 = properties0.replace((java.lang.Object) properties50, (java.lang.Object) properties55);
        java.util.Properties properties80 = new java.util.Properties(properties50);
        boolean boolean81 = properties80.isEmpty();
        java.io.Reader reader82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties80.load(reader82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3798");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties7.isSerialJtaTransactions();
        atomikosProperties7.setTransactionManagerUniqueName("hi!");
        boolean boolean13 = atomikosProperties7.isEnableLogging();
        java.lang.String str14 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        atomikosProperties17.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties31 = atomikosProperties17.asProperties();
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) atomikosProperties7, (java.lang.Object) properties31);
        java.util.Properties properties33 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        boolean boolean38 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isEnableLogging();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setCheckpointInterval(0L);
        java.lang.String str53 = atomikosProperties41.getService();
        boolean boolean54 = atomikosProperties41.isForceShutdownOnVmExit();
        java.util.Properties properties55 = atomikosProperties41.asProperties();
        java.lang.Object obj56 = properties55.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties55.elements();
        java.lang.Object obj58 = properties33.getOrDefault((java.lang.Object) atomikosProperties34, (java.lang.Object) properties55);
        atomikosProperties34.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties34.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals(obj32.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(obj56);
// flaky:         org.junit.Assert.assertEquals(obj56.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals(obj58.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3799");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3800");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        atomikosProperties0.setMaxActives(10);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3801");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        int int21 = properties19.size();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Enumeration<?> wildcardEnumeration28 = properties23.propertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean37 = properties23.containsValue((java.lang.Object) objEntrySet36);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        boolean boolean43 = properties38.containsValue((java.lang.Object) properties39);
        java.util.Collection<java.lang.Object> objCollection44 = properties38.values();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.lang.Object obj52 = properties38.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet51);
        java.util.Set<java.lang.Object> objSet53 = properties38.keySet();
        java.util.Set<java.lang.Object> objSet54 = properties38.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties38.entrySet();
        java.util.Set<java.lang.Object> objSet56 = properties38.keySet();
        boolean boolean57 = properties23.equals((java.lang.Object) objSet56);
        boolean boolean58 = properties19.containsKey((java.lang.Object) objSet56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.String str63 = atomikosProperties59.getService();
        atomikosProperties59.setEnableLogging(false);
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        atomikosProperties59.setCheckpointInterval((long) 1);
        java.util.Properties properties69 = atomikosProperties59.asProperties();
        java.util.Collection<java.lang.Object> objCollection70 = properties69.values();
        java.lang.Object obj71 = properties19.get((java.lang.Object) objCollection70);
        java.util.Properties properties72 = new java.util.Properties(properties19);
        java.util.Set<java.lang.Object> objSet73 = properties19.keySet();
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.storeToXML(outputStream74, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objSet73);
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3802");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration11 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties0.entrySet();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream13, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3803");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives((-1));
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3804");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties10.getService();
        boolean boolean15 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties16 = atomikosProperties10.asProperties();
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setMaxActives((int) (short) -1);
        atomikosProperties10.setMaxTimeout((long) ' ');
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setService("{{}={}}");
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.lang.Object obj37 = properties27.remove((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setTransactionManagerUniqueName("hi!");
        java.lang.String str44 = atomikosProperties38.getLogBaseName();
        java.lang.String str45 = atomikosProperties38.getLogBaseName();
        boolean boolean46 = atomikosProperties38.isForceShutdownOnVmExit();
        long long47 = atomikosProperties38.getMaxTimeout();
        java.lang.String str48 = atomikosProperties38.getTransactionManagerUniqueName();
        java.lang.String str49 = atomikosProperties38.getLogBaseName();
        boolean boolean50 = atomikosProperties38.isThreadedTwoPhaseCommit();
        atomikosProperties38.setThreadedTwoPhaseCommit(false);
        boolean boolean53 = properties0.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties27, (java.lang.Object) atomikosProperties38);
        atomikosProperties38.setService("{=hi!}");
        atomikosProperties38.setCheckpointInterval((long) 1);
        java.lang.String str58 = atomikosProperties38.getLogBaseDir();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3805");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.setEnableLogging(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        atomikosProperties22.setLogBaseDir("{=hi!}");
        int int38 = atomikosProperties22.getMaxActives();
        int int39 = atomikosProperties22.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3806");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.Object obj21 = properties9.clone();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setForceShutdownOnVmExit(true);
        atomikosProperties23.setForceShutdownOnVmExit(true);
        java.util.Properties properties35 = atomikosProperties23.asProperties();
        boolean boolean36 = properties9.containsKey((java.lang.Object) properties35);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3807");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        int int28 = atomikosProperties20.getMaxActives();
        atomikosProperties20.setService("hi!");
        java.lang.Object obj31 = properties16.get((java.lang.Object) atomikosProperties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        java.util.Properties properties51 = new java.util.Properties(properties40);
        int int52 = properties51.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str58 = atomikosProperties54.getService();
        boolean boolean59 = atomikosProperties54.isEnableLogging();
        java.lang.String str60 = atomikosProperties54.getTransactionManagerUniqueName();
        boolean boolean61 = properties51.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties62.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties62.entrySet();
        java.lang.Object obj69 = properties51.remove((java.lang.Object) objEntrySet68);
        boolean boolean70 = properties51.isEmpty();
        java.lang.String str71 = properties51.toString();
        properties51.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties51.elements();
        java.lang.Object obj74 = properties0.replace((java.lang.Object) properties16, (java.lang.Object) properties51);
        boolean boolean75 = properties16.isEmpty();
        java.util.Set<java.lang.String> strSet76 = properties16.stringPropertyNames();
        boolean boolean77 = properties16.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3808");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        boolean boolean10 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties11.isEnableLogging();
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setLogBaseName("{=hi!}");
        java.lang.Object obj19 = properties0.get((java.lang.Object) atomikosProperties11);
        java.lang.Class<?> wildcardClass20 = atomikosProperties11.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3809");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.lang.String str25 = properties0.getProperty("{tmlog=}");
        java.lang.Object obj26 = properties0.clone();
        java.util.Properties properties27 = new java.util.Properties(properties0);
        java.lang.String str28 = properties0.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3810");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection42 = properties34.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setLogBaseName("{=hi!}");
        java.lang.Object obj50 = properties8.put((java.lang.Object) objCollection42, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setForceShutdownOnVmExit(true);
        boolean boolean53 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setEnableLogging(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3811");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        java.lang.String str28 = atomikosProperties22.getLogBaseName();
        java.lang.String str29 = atomikosProperties22.getLogBaseName();
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        long long31 = atomikosProperties22.getMaxTimeout();
        java.lang.String str32 = atomikosProperties22.getLogBaseName();
        int int33 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.lang.String str37 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setEnableLogging(false);
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setMaxTimeout(0L);
        long long49 = atomikosProperties38.getDefaultJtaTimeout();
        long long50 = atomikosProperties38.getDefaultJtaTimeout();
        java.lang.Object obj51 = properties0.remove((java.lang.Object) atomikosProperties38);
        java.util.Enumeration<?> wildcardEnumeration52 = properties0.propertyNames();
        java.io.OutputStream outputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream53, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{{}=tmlog}" + "'", str37, "{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10000L + "'", long50 == 10000L);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3812");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties47.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setMaxTimeout((long) '#');
        boolean boolean61 = atomikosProperties54.isForceShutdownOnVmExit();
        java.lang.Object obj62 = properties47.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties54);
        atomikosProperties54.setForceShutdownOnVmExit(true);
        java.util.Properties properties65 = atomikosProperties54.asProperties();
        java.util.Set<java.lang.Object> objSet66 = properties65.keySet();
        java.util.Collection<java.lang.Object> objCollection67 = properties65.values();
        java.lang.Object obj68 = properties65.clone();
        java.util.Properties properties69 = new java.util.Properties();
        java.util.Properties properties70 = new java.util.Properties();
        java.lang.Object obj72 = properties70.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet73 = properties70.stringPropertyNames();
        boolean boolean74 = properties69.containsValue((java.lang.Object) properties70);
        java.util.Collection<java.lang.Object> objCollection75 = properties69.values();
        java.util.Enumeration<?> wildcardEnumeration76 = properties69.propertyNames();
        java.lang.String str78 = properties69.getProperty("{=hi!}");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = properties0.remove((java.lang.Object) properties65, (java.lang.Object) str78);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals(obj68.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3813");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        boolean boolean33 = properties28.containsValue((java.lang.Object) properties29);
        java.util.Collection<java.lang.Object> objCollection34 = properties28.values();
        boolean boolean35 = properties28.isEmpty();
        boolean boolean36 = properties27.equals((java.lang.Object) properties28);
        java.util.Collection<java.lang.Object> objCollection37 = properties28.values();
        java.io.OutputStream outputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.storeToXML(outputStream38, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3814");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        java.lang.Object obj11 = properties7.remove((java.lang.Object) atomikosProperties8);
        boolean boolean12 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setService("{{}={}}");
        boolean boolean15 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass16 = atomikosProperties8.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3815");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Enumeration<?> wildcardEnumeration5 = properties0.propertyNames();
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream6, "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration5);
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3816");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.lang.Object obj10 = properties0.remove((java.lang.Object) properties7);
        int int11 = properties0.size();
        java.lang.Object obj12 = properties0.clone();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream13, "", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3817");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long14 = atomikosProperties0.getMaxTimeout();
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxTimeout(0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3818");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("{tmlog=}");
        java.lang.String str16 = properties11.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.store(outputStream17, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3819");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        long long37 = atomikosProperties32.getMaxTimeout();
        java.lang.Object obj38 = properties0.get((java.lang.Object) atomikosProperties32);
        atomikosProperties32.setCheckpointInterval(52L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3820");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.lang.Object obj30 = properties23.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = atomikosProperties31.isSerialJtaTransactions();
        atomikosProperties31.setTransactionManagerUniqueName("hi!");
        atomikosProperties31.setForceShutdownOnVmExit(false);
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str41 = atomikosProperties31.getTransactionManagerUniqueName();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        boolean boolean47 = properties42.containsValue((java.lang.Object) properties43);
        java.util.Collection<java.lang.Object> objCollection48 = properties42.values();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        java.lang.Object obj56 = properties42.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet55);
        java.util.Set<java.lang.Object> objSet57 = properties42.keySet();
        java.util.Set<java.lang.Object> objSet58 = properties42.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties42.entrySet();
        java.util.Set<java.lang.Object> objSet60 = properties42.keySet();
        java.lang.Object obj61 = properties23.replace((java.lang.Object) atomikosProperties31, (java.lang.Object) properties42);
        java.util.Properties properties62 = atomikosProperties31.asProperties();
        boolean boolean63 = atomikosProperties31.isSerialJtaTransactions();
        java.lang.String str64 = atomikosProperties31.getLogBaseDir();
        java.lang.String str65 = atomikosProperties31.getService();
        boolean boolean66 = properties0.containsKey((java.lang.Object) atomikosProperties31);
        atomikosProperties31.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3821");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream13, "tmlog", "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3822");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties10.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean15 = atomikosProperties12.isSerialJtaTransactions();
        java.lang.String str16 = atomikosProperties12.getService();
        boolean boolean17 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setMaxActives(2);
        java.util.Properties properties20 = atomikosProperties12.asProperties();
        boolean boolean21 = properties10.equals((java.lang.Object) atomikosProperties12);
        java.util.Collection<java.lang.Object> objCollection22 = properties10.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties10.entrySet();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEntrySet23);
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3823");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.io.PrintStream printStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3824");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setEnableLogging(false);
        boolean boolean11 = atomikosProperties4.isSerialJtaTransactions();
        int int12 = atomikosProperties4.getMaxActives();
        atomikosProperties4.setDefaultJtaTimeout((long) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.util.Properties properties21 = atomikosProperties15.asProperties();
        atomikosProperties15.setForceShutdownOnVmExit(true);
        atomikosProperties15.setMaxActives((int) (short) -1);
        atomikosProperties15.setMaxTimeout((long) ' ');
        atomikosProperties15.setEnableLogging(false);
        boolean boolean30 = properties0.remove((java.lang.Object) atomikosProperties4, (java.lang.Object) atomikosProperties15);
        int int31 = atomikosProperties15.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3825");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties9.getService();
        boolean boolean14 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties9.asProperties();
        atomikosProperties9.setForceShutdownOnVmExit(true);
        atomikosProperties9.setMaxActives((int) (short) -1);
        boolean boolean20 = properties0.containsKey((java.lang.Object) (short) -1);
        java.util.Set<java.lang.Object> objSet21 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet22 = properties0.keySet();
        java.io.InputStream inputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objSet22);
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3826");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        long long12 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout((long) ' ');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3827");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.Object obj12 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setMaxTimeout((long) '#');
        java.lang.String str20 = atomikosProperties13.getLogBaseDir();
        boolean boolean21 = atomikosProperties13.isThreadedTwoPhaseCommit();
        int int22 = atomikosProperties13.getMaxActives();
        atomikosProperties13.setTransactionManagerUniqueName("tmlog");
        atomikosProperties13.setDefaultJtaTimeout((long) 'a');
        boolean boolean27 = atomikosProperties13.isForceShutdownOnVmExit();
        java.lang.String str28 = atomikosProperties13.getTransactionManagerUniqueName();
        long long29 = atomikosProperties13.getDefaultJtaTimeout();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = properties11.getOrDefault(obj12, (java.lang.Object) long29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 97L + "'", long29 == 97L);
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3828");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        int int4 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.io.InputStream inputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEnumeration5);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3829");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.lang.Object obj20 = properties8.clone();
        java.lang.Object obj21 = properties8.clone();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        boolean boolean30 = properties22.equals((java.lang.Object) "");
        java.lang.String str31 = properties22.toString();
        boolean boolean32 = properties8.containsKey((java.lang.Object) properties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties8.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{=hi!}");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{=hi!}");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEntrySet33);
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3830");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties13.containsValue((java.lang.Object) properties53);
        boolean boolean56 = properties13.isEmpty();
        java.util.Properties properties57 = new java.util.Properties(properties13);
        java.util.Properties properties58 = new java.util.Properties(properties13);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties58.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3831");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        int int11 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str17 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3832");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        int int22 = properties0.size();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        java.lang.Object obj38 = properties23.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties30);
        boolean boolean39 = atomikosProperties30.isSerialJtaTransactions();
        boolean boolean40 = properties0.containsValue((java.lang.Object) boolean39);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream41, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3833");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        boolean boolean17 = atomikosProperties14.isSerialJtaTransactions();
        java.lang.String str18 = atomikosProperties14.getService();
        boolean boolean19 = atomikosProperties14.isEnableLogging();
        long long20 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        boolean boolean22 = properties13.contains((java.lang.Object) properties21);
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream23, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3834");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3835");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        boolean boolean19 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setMaxActives((int) ' ');
        atomikosProperties15.setMaxTimeout((long) (short) 10);
        java.lang.Class<?> wildcardClass24 = atomikosProperties15.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3836");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        boolean boolean10 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties11.isEnableLogging();
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setLogBaseName("{=hi!}");
        java.lang.Object obj19 = properties0.get((java.lang.Object) atomikosProperties11);
        int int20 = atomikosProperties11.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3837");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties26 = atomikosProperties19.asProperties();
        int int27 = atomikosProperties19.getMaxActives();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        boolean boolean35 = properties28.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj36 = properties13.put((java.lang.Object) atomikosProperties19, (java.lang.Object) properties28);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        boolean boolean44 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection45 = properties37.values();
        java.lang.Object obj46 = properties37.clone();
        java.util.Collection<java.lang.Object> objCollection47 = properties37.values();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection52 = properties48.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        boolean boolean56 = atomikosProperties53.isSerialJtaTransactions();
        atomikosProperties53.setTransactionManagerUniqueName("hi!");
        boolean boolean59 = atomikosProperties53.isEnableLogging();
        atomikosProperties53.setSerialJtaTransactions(true);
        boolean boolean62 = properties37.remove((java.lang.Object) objCollection52, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties63 = new java.util.Properties();
        boolean boolean65 = properties63.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setSerialJtaTransactions(false);
        java.lang.String str73 = atomikosProperties66.getService();
        boolean boolean74 = properties63.containsKey((java.lang.Object) atomikosProperties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setSerialJtaTransactions(false);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setMaxTimeout((long) '#');
        boolean boolean82 = atomikosProperties75.isEnableLogging();
        atomikosProperties75.setCheckpointInterval((long) 100);
        atomikosProperties75.setForceShutdownOnVmExit(false);
        boolean boolean87 = properties63.containsValue((java.lang.Object) atomikosProperties75);
        java.lang.Object obj88 = properties28.replace((java.lang.Object) atomikosProperties53, (java.lang.Object) atomikosProperties75);
        boolean boolean89 = properties0.equals((java.lang.Object) atomikosProperties75);
        java.util.Set<java.lang.String> strSet90 = properties0.stringPropertyNames();
        java.io.OutputStream outputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream91, "", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strSet90);
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3838");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        atomikosProperties12.setForceShutdownOnVmExit(false);
        atomikosProperties12.setService("{{}={}}");
        atomikosProperties12.setMaxActives((int) (byte) 1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3839");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        int int11 = atomikosProperties0.getMaxActives();
        int int12 = atomikosProperties0.getMaxActives();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3840");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet9 = properties0.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet13 = properties10.stringPropertyNames();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Enumeration<?> wildcardEnumeration21 = properties14.propertyNames();
        java.lang.Object obj23 = properties10.put((java.lang.Object) wildcardEnumeration21, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxTimeout((long) '#');
        boolean boolean31 = atomikosProperties24.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj39 = properties10.getOrDefault((java.lang.Object) boolean31, (java.lang.Object) atomikosProperties32);
        long long40 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties41 = atomikosProperties32.asProperties();
        java.lang.Object obj42 = properties0.remove((java.lang.Object) atomikosProperties32);
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream43, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3841");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        java.util.Properties properties46 = new java.util.Properties(properties36);
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties46.storeToXML(outputStream47, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3842");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties26 = atomikosProperties19.asProperties();
        int int27 = atomikosProperties19.getMaxActives();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        boolean boolean35 = properties28.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj36 = properties13.put((java.lang.Object) atomikosProperties19, (java.lang.Object) properties28);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        boolean boolean44 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection45 = properties37.values();
        java.lang.Object obj46 = properties37.clone();
        java.util.Collection<java.lang.Object> objCollection47 = properties37.values();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection52 = properties48.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        boolean boolean56 = atomikosProperties53.isSerialJtaTransactions();
        atomikosProperties53.setTransactionManagerUniqueName("hi!");
        boolean boolean59 = atomikosProperties53.isEnableLogging();
        atomikosProperties53.setSerialJtaTransactions(true);
        boolean boolean62 = properties37.remove((java.lang.Object) objCollection52, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties63 = new java.util.Properties();
        boolean boolean65 = properties63.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setSerialJtaTransactions(false);
        java.lang.String str73 = atomikosProperties66.getService();
        boolean boolean74 = properties63.containsKey((java.lang.Object) atomikosProperties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setSerialJtaTransactions(false);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setMaxTimeout((long) '#');
        boolean boolean82 = atomikosProperties75.isEnableLogging();
        atomikosProperties75.setCheckpointInterval((long) 100);
        atomikosProperties75.setForceShutdownOnVmExit(false);
        boolean boolean87 = properties63.containsValue((java.lang.Object) atomikosProperties75);
        java.lang.Object obj88 = properties28.replace((java.lang.Object) atomikosProperties53, (java.lang.Object) atomikosProperties75);
        boolean boolean89 = properties0.equals((java.lang.Object) atomikosProperties75);
        java.lang.Object obj90 = properties0.clone();
        java.io.OutputStream outputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream91, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3843");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(0);
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3844");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int8 = atomikosProperties0.getMaxActives();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        long long10 = atomikosProperties0.getMaxTimeout();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3845");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.lang.String str33 = properties25.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration34 = properties25.propertyNames();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties35.entrySet();
        java.util.Set<java.lang.String> strSet42 = properties35.stringPropertyNames();
        boolean boolean43 = properties35.isEmpty();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Set<java.lang.String> strSet45 = properties35.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration49 = properties46.propertyNames();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        boolean boolean53 = properties50.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties50.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties50.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxTimeout((long) '#');
        boolean boolean63 = atomikosProperties56.isForceShutdownOnVmExit();
        int int64 = atomikosProperties56.getMaxActives();
        java.lang.Object obj65 = properties50.remove((java.lang.Object) int64);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties50.entrySet();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.lang.String str71 = properties67.getProperty("");
        java.lang.Object obj72 = properties46.getOrDefault((java.lang.Object) properties50, (java.lang.Object) str71);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setMaxTimeout((long) '#');
        boolean boolean80 = atomikosProperties73.isEnableLogging();
        atomikosProperties73.setCheckpointInterval((long) 100);
        atomikosProperties73.setForceShutdownOnVmExit(false);
        boolean boolean85 = properties46.equals((java.lang.Object) atomikosProperties73);
        java.lang.Object obj86 = properties8.put((java.lang.Object) strSet45, (java.lang.Object) boolean85);
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties8.elements();
        java.util.Properties properties88 = new java.util.Properties(properties8);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objEnumeration87);
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3846");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives(10);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3847");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties0.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3848");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.lang.Object obj33 = properties10.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3849");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Enumeration<?> wildcardEnumeration21 = properties16.propertyNames();
        java.util.Properties properties22 = new java.util.Properties(properties16);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj24 = properties5.clone();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties25.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setMaxTimeout((long) '#');
        boolean boolean39 = atomikosProperties32.isForceShutdownOnVmExit();
        java.lang.Object obj40 = properties25.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties32);
        atomikosProperties32.setForceShutdownOnVmExit(true);
        java.util.Properties properties43 = atomikosProperties32.asProperties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties5.containsValue((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean49 = atomikosProperties46.isSerialJtaTransactions();
        java.util.Properties properties50 = atomikosProperties46.asProperties();
        java.lang.Object obj53 = properties50.setProperty("hi!", "");
        java.util.Properties properties54 = new java.util.Properties(properties50);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.lang.String str63 = properties55.getProperty("hi!");
        java.lang.String str65 = properties55.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setEnableLogging(false);
        boolean boolean73 = properties55.containsKey((java.lang.Object) atomikosProperties66);
        atomikosProperties66.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties76.elements();
        boolean boolean80 = properties76.isEmpty();
        java.util.Set<java.lang.Object> objSet81 = properties76.keySet();
        boolean boolean83 = properties76.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection84 = properties76.values();
        java.lang.Object obj85 = properties76.clone();
        java.util.Collection<java.lang.Object> objCollection86 = properties76.values();
        boolean boolean87 = properties50.remove((java.lang.Object) atomikosProperties66, (java.lang.Object) objCollection86);
        java.lang.Class<?> wildcardClass88 = atomikosProperties66.getClass();
        boolean boolean89 = properties5.containsKey((java.lang.Object) atomikosProperties66);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{tmlog=}");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objCollection84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{}");
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3850");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.lang.Object obj42 = properties18.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) objCollection41);
        boolean boolean44 = properties9.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection41, (java.lang.Object) 10.0d);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties(properties45);
        java.util.Set<java.lang.String> strSet51 = properties45.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties52.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxTimeout((long) '#');
        boolean boolean66 = atomikosProperties59.isForceShutdownOnVmExit();
        java.lang.Object obj67 = properties52.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties59);
        boolean boolean68 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.Object obj69 = properties9.replace((java.lang.Object) properties45, (java.lang.Object) boolean68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties45.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        boolean boolean82 = properties79.isEmpty();
        java.lang.Object obj85 = properties79.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        boolean boolean89 = properties71.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties86);
        java.util.Properties properties90 = new java.util.Properties(properties79);
        java.lang.Object obj91 = properties0.replace((java.lang.Object) objEntrySet70, (java.lang.Object) properties90);
        java.lang.Object obj92 = properties90.clone();
        boolean boolean93 = properties90.isEmpty();
        java.lang.String str96 = properties90.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{}");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3851");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setMaxTimeout(500L);
        java.lang.Class<?> wildcardClass35 = atomikosProperties22.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3852");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.lang.Object obj26 = properties12.put((java.lang.Object) properties15, (java.lang.Object) properties18);
        java.lang.Object obj27 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setCheckpointInterval((long) 100);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean40 = properties15.equals((java.lang.Object) atomikosProperties28);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.elements();
        boolean boolean47 = properties15.containsKey((java.lang.Object) properties41);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.lang.Object obj62 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = properties48.remove((java.lang.Object) properties56, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties67 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.Object obj69 = properties67.clone();
        java.lang.Object obj70 = properties11.getOrDefault((java.lang.Object) properties41, (java.lang.Object) properties67);
        java.util.Set<java.lang.String> strSet71 = properties41.stringPropertyNames();
        java.util.Properties properties72 = new java.util.Properties(properties41);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        int int77 = properties73.size();
        java.util.Properties properties78 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties78.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties78.elements();
        boolean boolean81 = properties72.equals((java.lang.Object) properties78);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties78.entrySet();
        boolean boolean83 = properties78.isEmpty();
        java.io.OutputStream outputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties78.storeToXML(outputStream84, "{{}={}}", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3853");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties11.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.lang.Object obj19 = properties5.put((java.lang.Object) properties8, (java.lang.Object) properties11);
        java.lang.Object obj20 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        boolean boolean28 = atomikosProperties21.isEnableLogging();
        atomikosProperties21.setCheckpointInterval((long) 100);
        atomikosProperties21.setSerialJtaTransactions(true);
        boolean boolean33 = properties8.equals((java.lang.Object) atomikosProperties21);
        java.lang.String str34 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setMaxTimeout(10000L);
        boolean boolean37 = properties0.containsKey((java.lang.Object) 10000L);
        java.lang.Object obj40 = properties0.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{=hi!}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3854");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        boolean boolean46 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        java.util.Properties properties51 = atomikosProperties47.asProperties();
        java.lang.Object obj54 = properties51.setProperty("hi!", "");
        java.util.Properties properties55 = new java.util.Properties(properties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties51.entrySet();
        java.lang.Object obj57 = properties51.clone();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        boolean boolean64 = properties58.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isEnableLogging();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet79 = properties76.stringPropertyNames();
        boolean boolean80 = properties75.containsValue((java.lang.Object) properties76);
        java.util.Collection<java.lang.Object> objCollection81 = properties75.values();
        java.lang.Object obj82 = properties58.replace((java.lang.Object) atomikosProperties65, (java.lang.Object) objCollection81);
        int int83 = properties58.size();
        java.util.Properties properties84 = new java.util.Properties(properties58);
        boolean boolean85 = properties36.remove(obj57, (java.lang.Object) properties84);
        java.util.Set<java.lang.Object> objSet86 = properties84.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(obj57);
// flaky:         org.junit.Assert.assertEquals(obj57.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objCollection81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objSet86);
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3855");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        java.util.Properties properties27 = atomikosProperties23.asProperties();
        java.lang.Object obj30 = properties27.setProperty("hi!", "");
        java.util.Properties properties31 = new java.util.Properties(properties27);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection36 = properties35.values();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties38.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        java.lang.Object obj46 = properties32.put((java.lang.Object) properties35, (java.lang.Object) properties38);
        java.lang.Object obj47 = properties8.putIfAbsent((java.lang.Object) properties31, (java.lang.Object) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setSerialJtaTransactions(false);
        java.lang.String str55 = atomikosProperties48.getService();
        java.util.Properties properties56 = atomikosProperties48.asProperties();
        java.lang.Object obj57 = properties0.replace((java.lang.Object) properties8, (java.lang.Object) atomikosProperties48);
        long long58 = atomikosProperties48.getMaxTimeout();
        boolean boolean59 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3856");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3857");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties0.elements();
        java.lang.Object obj10 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        java.lang.String str15 = atomikosProperties11.getService();
        atomikosProperties11.setMaxActives((int) (byte) 100);
        boolean boolean18 = properties0.equals((java.lang.Object) (byte) 100);
        java.io.PrintWriter printWriter19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{-1=100}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{-1=100}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{-1=100}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3858");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        boolean boolean57 = properties56.isEmpty();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties56.contains((java.lang.Object) properties71);
        java.util.Properties properties82 = new java.util.Properties(properties71);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties83.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties83.entrySet();
        java.util.Properties properties91 = new java.util.Properties(properties83);
        java.util.Set<java.lang.Object> objSet92 = properties83.keySet();
        java.lang.Object obj93 = properties0.putIfAbsent((java.lang.Object) properties71, (java.lang.Object) properties83);
        java.util.Set<java.lang.Object> objSet94 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(objSet94);
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3859");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{}");
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3860");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection41 = properties40.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        boolean boolean51 = properties46.containsValue((java.lang.Object) properties47);
        java.util.Collection<java.lang.Object> objCollection52 = properties46.values();
        java.util.Enumeration<?> wildcardEnumeration53 = properties46.propertyNames();
        java.lang.Object obj55 = properties42.put((java.lang.Object) wildcardEnumeration53, (java.lang.Object) 10.0d);
        boolean boolean56 = properties40.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties40.keys();
        boolean boolean58 = properties39.equals((java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties40.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties40.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration60);
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3861");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout(0L);
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setMaxTimeout(35L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3862");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.lang.Object obj36 = properties0.put((java.lang.Object) false, (java.lang.Object) boolean35);
        java.util.Set<java.lang.Object> objSet37 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3863");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3864");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        boolean boolean29 = atomikosProperties12.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3865");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties0.elements();
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream22, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3866");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str13 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3867");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseName("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3868");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        long long7 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3869");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer8, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEntrySet7);
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3870");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet32 = properties14.keySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration40 = properties33.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties33.entrySet();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties14.elements();
        java.lang.Object obj44 = properties14.clone();
        java.util.Enumeration<?> wildcardEnumeration45 = properties14.propertyNames();
        java.util.Collection<java.lang.Object> objCollection46 = properties14.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration45);
        org.junit.Assert.assertNotNull(objCollection46);
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3871");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties27.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isForceShutdownOnVmExit();
        java.lang.Object obj42 = properties27.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties34);
        int int43 = atomikosProperties34.getMaxActives();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties44.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj51 = properties44.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet65);
        java.util.Set<java.lang.Object> objSet67 = properties52.keySet();
        boolean boolean68 = properties44.containsKey((java.lang.Object) properties52);
        java.util.Set<java.lang.String> strSet69 = properties52.stringPropertyNames();
        java.lang.String str70 = properties52.toString();
        boolean boolean71 = properties0.remove((java.lang.Object) atomikosProperties34, (java.lang.Object) properties52);
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties72.elements();
        boolean boolean76 = properties72.isEmpty();
        java.util.Set<java.lang.Object> objSet77 = properties72.keySet();
        boolean boolean79 = properties72.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection80 = properties72.values();
        java.lang.Object obj81 = properties72.clone();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        boolean boolean85 = properties82.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties82.elements();
        java.lang.Object obj89 = properties82.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties82.entrySet();
        boolean boolean91 = properties72.contains((java.lang.Object) properties82);
        boolean boolean92 = properties0.containsValue((java.lang.Object) boolean91);
        boolean boolean93 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration94 = properties0.elements();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{hi!=[]}" + "'", str70, "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "{}");
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(objEnumeration94);
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3872");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setLogBaseName("{=hi!}");
        int int21 = atomikosProperties11.getMaxActives();
        int int22 = atomikosProperties11.getMaxActives();
        int int23 = atomikosProperties11.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3873");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        boolean boolean10 = properties7.isEmpty();
        java.util.Set<java.lang.String> strSet11 = properties7.stringPropertyNames();
        boolean boolean12 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties13.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj20 = properties13.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet25 = properties22.stringPropertyNames();
        boolean boolean26 = properties21.containsValue((java.lang.Object) properties22);
        java.util.Collection<java.lang.Object> objCollection27 = properties21.values();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.lang.Object obj35 = properties21.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet34);
        java.util.Set<java.lang.Object> objSet36 = properties21.keySet();
        boolean boolean37 = properties13.containsKey((java.lang.Object) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties21.elements();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        boolean boolean45 = properties39.isEmpty();
        boolean boolean46 = properties21.contains((java.lang.Object) boolean45);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        boolean boolean58 = properties52.isEmpty();
        java.lang.Object obj59 = properties47.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean58);
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        boolean boolean63 = properties60.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties60.keys();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet68 = properties65.stringPropertyNames();
        java.util.Properties properties69 = new java.util.Properties();
        java.util.Properties properties70 = new java.util.Properties();
        java.lang.Object obj72 = properties70.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet73 = properties70.stringPropertyNames();
        boolean boolean74 = properties69.containsValue((java.lang.Object) properties70);
        java.util.Collection<java.lang.Object> objCollection75 = properties69.values();
        java.util.Enumeration<?> wildcardEnumeration76 = properties69.propertyNames();
        java.lang.Object obj78 = properties65.put((java.lang.Object) wildcardEnumeration76, (java.lang.Object) 10.0d);
        java.util.Properties properties79 = new java.util.Properties();
        java.util.Properties properties80 = new java.util.Properties();
        java.lang.Object obj82 = properties80.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet83 = properties80.stringPropertyNames();
        boolean boolean84 = properties79.containsValue((java.lang.Object) properties80);
        java.util.Collection<java.lang.Object> objCollection85 = properties79.values();
        java.lang.Object obj86 = properties79.clone();
        boolean boolean87 = properties47.replace((java.lang.Object) properties60, (java.lang.Object) 10.0d, obj86);
        java.util.Collection<java.lang.Object> objCollection88 = properties60.values();
        boolean boolean89 = properties21.containsValue((java.lang.Object) properties60);
        java.lang.Object obj90 = properties7.get((java.lang.Object) boolean89);
        java.io.Reader reader91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(reader91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + obj59 + "' != '" + true + "'", obj59, true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objCollection88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3874");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties10.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Set<java.lang.String> strSet17 = properties10.stringPropertyNames();
        boolean boolean18 = properties10.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        boolean boolean26 = properties20.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        boolean boolean31 = properties28.isEmpty();
        java.lang.Object obj34 = properties28.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = properties20.remove((java.lang.Object) properties28, (java.lang.Object) atomikosProperties35);
        java.util.Properties properties39 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties28.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = atomikosProperties41.isSerialJtaTransactions();
        int int49 = atomikosProperties41.getMaxActives();
        atomikosProperties41.setTransactionManagerUniqueName("tmlog");
        int int52 = atomikosProperties41.getMaxActives();
        int int53 = atomikosProperties41.getMaxActives();
        boolean boolean54 = atomikosProperties41.isForceShutdownOnVmExit();
        java.lang.Object obj55 = properties0.replace((java.lang.Object) objEnumeration40, (java.lang.Object) atomikosProperties41);
        boolean boolean56 = atomikosProperties41.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 50 + "'", int53 == 50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3875");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties14.keys();
        java.lang.String str24 = properties14.getProperty("", "{=hi!}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{=hi!}" + "'", str24, "{=hi!}");
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3876");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        java.lang.String str20 = atomikosProperties16.getService();
        atomikosProperties16.setEnableLogging(false);
        long long23 = atomikosProperties16.getDefaultJtaTimeout();
        java.lang.Object obj24 = properties0.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setMaxTimeout(0L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3877");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        atomikosProperties7.setMaxActives((int) (byte) 100);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        boolean boolean21 = atomikosProperties7.isThreadedTwoPhaseCommit();
        boolean boolean22 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj23 = properties5.remove((java.lang.Object) boolean22);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream24, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3878");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        long long5 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3879");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.io.PrintStream printStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.list(printStream46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
    }

    @Test
    public void test3880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3880");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getCheckpointInterval();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test3881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3881");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
        atomikosProperties0.setService("{=hi!}");
        atomikosProperties0.setLogBaseDir("{{}={}}");
        atomikosProperties0.setMaxActives(100);
        java.lang.String str20 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
    }

    @Test
    public void test3882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3882");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties0.keys();
        properties0.clear();
        java.lang.String str30 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.lang.Object obj45 = properties31.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet44);
        java.util.Set<java.lang.Object> objSet46 = properties31.keySet();
        java.util.Set<java.lang.Object> objSet47 = properties31.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties31.entrySet();
        java.util.Set<java.lang.Object> objSet49 = properties31.keySet();
        java.lang.String str51 = properties31.getProperty("");
        java.lang.Object obj54 = properties31.setProperty("", "{=hi!}");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        properties31.clear();
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.save(outputStream57, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test3883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3883");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test3884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3884");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Set<java.lang.Object> objSet21 = properties14.keySet();
        java.util.Collection<java.lang.Object> objCollection22 = properties14.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objCollection22);
    }

    @Test
    public void test3885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3885");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        java.util.Properties properties27 = atomikosProperties23.asProperties();
        java.lang.Object obj30 = properties27.setProperty("hi!", "");
        java.util.Properties properties31 = new java.util.Properties(properties27);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection36 = properties35.values();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties38.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        java.lang.Object obj46 = properties32.put((java.lang.Object) properties35, (java.lang.Object) properties38);
        java.lang.Object obj47 = properties8.putIfAbsent((java.lang.Object) properties31, (java.lang.Object) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setSerialJtaTransactions(false);
        java.lang.String str55 = atomikosProperties48.getService();
        java.util.Properties properties56 = atomikosProperties48.asProperties();
        java.lang.Object obj57 = properties0.replace((java.lang.Object) properties8, (java.lang.Object) atomikosProperties48);
        int int58 = properties8.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
    }

    @Test
    public void test3886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3886");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        boolean boolean46 = properties40.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties40.entrySet();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties48.isEmpty();
        java.lang.Object obj54 = properties48.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        boolean boolean58 = properties40.remove((java.lang.Object) properties48, (java.lang.Object) atomikosProperties55);
        java.util.Properties properties59 = new java.util.Properties(properties48);
        int int60 = properties59.size();
        int int61 = properties59.size();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties62.keys();
        java.lang.String str70 = properties62.getProperty("hi!");
        java.lang.String str72 = properties62.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setEnableLogging(false);
        boolean boolean80 = properties62.containsKey((java.lang.Object) atomikosProperties73);
        atomikosProperties73.setTransactionManagerUniqueName("tmlog");
        atomikosProperties73.setEnableLogging(true);
        long long85 = atomikosProperties73.getMaxTimeout();
        boolean boolean86 = properties59.containsValue((java.lang.Object) long85);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.util.Set<java.lang.String> strSet88 = properties23.stringPropertyNames();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 300000L + "'", long85 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strSet88);
    }

    @Test
    public void test3887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3887");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        boolean boolean10 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties11.isEnableLogging();
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setLogBaseName("{=hi!}");
        java.lang.Object obj19 = properties0.get((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setForceShutdownOnVmExit(true);
        atomikosProperties11.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test3888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3888");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str7 = properties0.toString();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.lang.Object obj15 = properties8.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties8.entrySet();
        java.util.Properties properties17 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxTimeout((long) '#');
        boolean boolean25 = atomikosProperties18.isEnableLogging();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        boolean boolean29 = properties26.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties26.elements();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.lang.Object obj38 = properties31.setProperty("tmlog", "");
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection43 = properties42.values();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties42.keys();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties45.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties45.entrySet();
        java.lang.Object obj53 = properties39.put((java.lang.Object) properties42, (java.lang.Object) properties45);
        java.lang.String str55 = properties42.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        boolean boolean59 = atomikosProperties56.isSerialJtaTransactions();
        java.lang.Object obj60 = properties31.put((java.lang.Object) properties42, (java.lang.Object) boolean59);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties62.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        atomikosProperties69.setThreadedTwoPhaseCommit(true);
        atomikosProperties69.setMaxTimeout((long) '#');
        boolean boolean76 = atomikosProperties69.isForceShutdownOnVmExit();
        java.lang.Object obj77 = properties62.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties69);
        long long78 = atomikosProperties69.getDefaultJtaTimeout();
        atomikosProperties69.setMaxActives((int) (short) 1);
        java.lang.String str81 = atomikosProperties69.getService();
        atomikosProperties69.setCheckpointInterval((long) '4');
        boolean boolean84 = properties8.replace((java.lang.Object) atomikosProperties18, (java.lang.Object) properties26, (java.lang.Object) atomikosProperties69);
        boolean boolean85 = properties0.containsValue((java.lang.Object) properties26);
        java.io.Reader reader86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.load(reader86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 10000L + "'", long78 == 10000L);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test3889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3889");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(100);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.storeToXML(outputStream17, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test3890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3890");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("");
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        atomikosProperties0.setCheckpointInterval(0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test3891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3891");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Collection<java.lang.Object> objCollection16 = properties0.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties17.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.String str29 = atomikosProperties25.getService();
        boolean boolean30 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) 100);
        java.lang.String str33 = atomikosProperties25.getLogBaseName();
        boolean boolean34 = properties17.contains((java.lang.Object) atomikosProperties25);
        java.lang.Object obj35 = properties17.clone();
        properties17.clear();
        java.lang.Object obj39 = properties17.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[], {}={}}");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.lang.String str42 = properties0.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test3892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3892");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        long long31 = atomikosProperties12.getCheckpointInterval();
        java.util.Properties properties32 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties40 = atomikosProperties33.asProperties();
        int int41 = atomikosProperties33.getMaxActives();
        atomikosProperties33.setService("hi!");
        long long44 = atomikosProperties33.getMaxTimeout();
        atomikosProperties33.setTransactionManagerUniqueName("hi!");
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.String str49 = atomikosProperties33.getService();
        int int50 = atomikosProperties33.getMaxActives();
        java.lang.String str51 = atomikosProperties33.getLogBaseDir();
        atomikosProperties33.setEnableLogging(false);
        long long54 = atomikosProperties33.getDefaultJtaTimeout();
        java.lang.Object obj55 = properties32.get((java.lang.Object) atomikosProperties33);
        java.lang.String str58 = properties32.getProperty("{hi!=[], {}={}}", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test3893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3893");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str19 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setMaxActives(50);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        atomikosProperties15.setDefaultJtaTimeout((long) 100);
        java.lang.String str26 = atomikosProperties15.getService();
        java.lang.String str27 = atomikosProperties15.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test3894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3894");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet15 = properties0.stringPropertyNames();
        boolean boolean16 = properties0.isEmpty();
        boolean boolean17 = properties0.isEmpty();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        java.lang.Object obj32 = properties18.put((java.lang.Object) properties21, (java.lang.Object) properties24);
        java.lang.Object obj33 = properties21.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setCheckpointInterval((long) 100);
        atomikosProperties34.setSerialJtaTransactions(true);
        boolean boolean46 = properties21.equals((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<?> wildcardEnumeration47 = properties21.propertyNames();
        java.lang.Object obj48 = properties21.clone();
        java.lang.Object obj49 = properties0.get((java.lang.Object) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isEnableLogging();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setMaxActives((int) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setLogBaseName("{=hi!}");
        java.lang.String str69 = atomikosProperties62.getTransactionManagerUniqueName();
        java.util.Properties properties70 = atomikosProperties62.asProperties();
        boolean boolean71 = atomikosProperties62.isForceShutdownOnVmExit();
        atomikosProperties62.setDefaultJtaTimeout(1L);
        atomikosProperties62.setDefaultJtaTimeout((long) 2);
        boolean boolean76 = atomikosProperties62.isEnableLogging();
        java.lang.Object obj77 = properties0.getOrDefault((java.lang.Object) atomikosProperties50, (java.lang.Object) boolean76);
        java.util.Set<java.lang.String> strSet78 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertNotNull(strSet78);
    }

    @Test
    public void test3895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3895");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean12 = properties9.isEmpty();
        java.lang.Object obj15 = properties9.setProperty("", "hi!");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.lang.Object obj26 = properties16.remove((java.lang.Object) properties23);
        java.lang.Object obj27 = properties9.get((java.lang.Object) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties23.keys();
        java.lang.Object obj29 = properties0.get((java.lang.Object) properties23);
        java.lang.String str30 = properties23.toString();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.keys();
        java.lang.String str39 = properties31.getProperty("hi!");
        java.lang.String str41 = properties31.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration42 = properties31.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setEnableLogging(false);
        boolean boolean50 = atomikosProperties43.isSerialJtaTransactions();
        int int51 = atomikosProperties43.getMaxActives();
        boolean boolean52 = atomikosProperties43.isEnableLogging();
        java.lang.String str53 = atomikosProperties43.getLogBaseDir();
        atomikosProperties43.setService("{=hi!}");
        boolean boolean56 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setCheckpointInterval((long) 2);
        java.lang.String str59 = atomikosProperties43.getLogBaseDir();
        java.lang.Object obj60 = properties23.putIfAbsent((java.lang.Object) properties31, (java.lang.Object) atomikosProperties43);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test3896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3896");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties10.getService();
        boolean boolean15 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties16 = atomikosProperties10.asProperties();
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setMaxActives((int) (short) -1);
        atomikosProperties10.setMaxTimeout((long) ' ');
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setService("{{}={}}");
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.lang.Object obj37 = properties27.remove((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setTransactionManagerUniqueName("hi!");
        java.lang.String str44 = atomikosProperties38.getLogBaseName();
        java.lang.String str45 = atomikosProperties38.getLogBaseName();
        boolean boolean46 = atomikosProperties38.isForceShutdownOnVmExit();
        long long47 = atomikosProperties38.getMaxTimeout();
        java.lang.String str48 = atomikosProperties38.getTransactionManagerUniqueName();
        java.lang.String str49 = atomikosProperties38.getLogBaseName();
        boolean boolean50 = atomikosProperties38.isThreadedTwoPhaseCommit();
        atomikosProperties38.setThreadedTwoPhaseCommit(false);
        boolean boolean53 = properties0.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties27, (java.lang.Object) atomikosProperties38);
        atomikosProperties38.setService("{=hi!}");
        atomikosProperties38.setCheckpointInterval((long) 1);
        java.lang.String str58 = atomikosProperties38.getService();
        boolean boolean59 = atomikosProperties38.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{=hi!}" + "'", str58, "{=hi!}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test3897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3897");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("{=hi!}");
        java.lang.Object obj18 = properties0.setProperty("{hi!=[]}", "{}");
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream19, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test3898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3898");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setCheckpointInterval(100L);
        int int16 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
    }

    @Test
    public void test3899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3899");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean51 = properties44.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection52 = properties44.values();
        java.lang.Object obj53 = properties44.clone();
        boolean boolean54 = properties41.equals((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        boolean boolean58 = atomikosProperties55.isSerialJtaTransactions();
        atomikosProperties55.setTransactionManagerUniqueName("hi!");
        java.lang.String str61 = atomikosProperties55.getLogBaseName();
        java.lang.String str62 = atomikosProperties55.getLogBaseName();
        atomikosProperties55.setService("{{}={}}");
        java.lang.Object obj65 = properties13.getOrDefault((java.lang.Object) properties44, (java.lang.Object) atomikosProperties55);
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test3900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3900");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = atomikosProperties41.isSerialJtaTransactions();
        java.util.Properties properties45 = atomikosProperties41.asProperties();
        java.lang.String str46 = atomikosProperties41.getService();
        long long47 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setLogBaseDir("{=hi!}");
        atomikosProperties41.setMaxTimeout(10L);
        java.util.Properties properties52 = atomikosProperties41.asProperties();
        boolean boolean53 = properties23.containsValue((java.lang.Object) atomikosProperties41);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.save(outputStream54, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test3901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3901");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean51 = properties44.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection52 = properties44.values();
        java.lang.Object obj53 = properties44.clone();
        boolean boolean54 = properties41.equals((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        boolean boolean58 = atomikosProperties55.isSerialJtaTransactions();
        atomikosProperties55.setTransactionManagerUniqueName("hi!");
        java.lang.String str61 = atomikosProperties55.getLogBaseName();
        java.lang.String str62 = atomikosProperties55.getLogBaseName();
        atomikosProperties55.setService("{{}={}}");
        java.lang.Object obj65 = properties13.getOrDefault((java.lang.Object) properties44, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setMaxActives((int) (byte) 100);
        long long68 = atomikosProperties55.getDefaultJtaTimeout();
        atomikosProperties55.setTransactionManagerUniqueName("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10000L + "'", long68 == 10000L);
    }

    @Test
    public void test3902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3902");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection41 = properties40.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        boolean boolean51 = properties46.containsValue((java.lang.Object) properties47);
        java.util.Collection<java.lang.Object> objCollection52 = properties46.values();
        java.util.Enumeration<?> wildcardEnumeration53 = properties46.propertyNames();
        java.lang.Object obj55 = properties42.put((java.lang.Object) wildcardEnumeration53, (java.lang.Object) 10.0d);
        boolean boolean56 = properties40.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties40.keys();
        boolean boolean58 = properties39.equals((java.lang.Object) properties40);
        java.io.Reader reader59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.load(reader59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test3903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3903");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.lang.Object obj36 = properties0.put((java.lang.Object) false, (java.lang.Object) boolean35);
        java.lang.Object obj37 = properties0.clone();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        java.lang.Object obj53 = properties39.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.util.Properties properties58 = atomikosProperties54.asProperties();
        java.lang.Object obj61 = properties58.setProperty("hi!", "");
        java.util.Properties properties62 = new java.util.Properties(properties58);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection67 = properties66.values();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties66.keys();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties69.elements();
        boolean boolean73 = properties69.isEmpty();
        java.util.Set<java.lang.Object> objSet74 = properties69.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties69.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties69.entrySet();
        java.lang.Object obj77 = properties63.put((java.lang.Object) properties66, (java.lang.Object) properties69);
        java.lang.Object obj78 = properties39.putIfAbsent((java.lang.Object) properties62, (java.lang.Object) properties69);
        java.util.Properties properties79 = new java.util.Properties(properties62);
        java.lang.Object obj80 = properties0.replace((java.lang.Object) 1, (java.lang.Object) properties62);
        java.io.Reader reader81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties62.load(reader81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test3904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3904");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties0.elements();
        boolean boolean51 = properties0.isEmpty();
        java.io.InputStream inputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test3905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3905");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties5.containsKey((java.lang.Object) objSet15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties5.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        boolean boolean27 = properties5.remove((java.lang.Object) properties18, (java.lang.Object) 1.0f);
        boolean boolean28 = properties18.isEmpty();
        boolean boolean30 = properties0.remove((java.lang.Object) properties18, (java.lang.Object) 100);
        java.util.Set<java.lang.String> strSet31 = properties18.stringPropertyNames();
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream32, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet31);
    }

    @Test
    public void test3906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3906");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval((-1L));
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3907");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties9.containsValue((java.lang.Object) "hi!");
        java.lang.String str15 = properties9.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration16 = properties9.propertyNames();
        java.lang.String str18 = properties9.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties19.isSerialJtaTransactions();
        java.lang.String str23 = atomikosProperties19.getService();
        boolean boolean24 = atomikosProperties19.isEnableLogging();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        atomikosProperties19.setForceShutdownOnVmExit(true);
        atomikosProperties19.setMaxActives((int) (short) -1);
        atomikosProperties19.setMaxTimeout((long) ' ');
        atomikosProperties19.setEnableLogging(false);
        atomikosProperties19.setService("{{}={}}");
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        boolean boolean42 = properties36.isEmpty();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        java.lang.Object obj46 = properties36.remove((java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        atomikosProperties47.setTransactionManagerUniqueName("hi!");
        java.lang.String str53 = atomikosProperties47.getLogBaseName();
        java.lang.String str54 = atomikosProperties47.getLogBaseName();
        boolean boolean55 = atomikosProperties47.isForceShutdownOnVmExit();
        long long56 = atomikosProperties47.getMaxTimeout();
        java.lang.String str57 = atomikosProperties47.getTransactionManagerUniqueName();
        java.lang.String str58 = atomikosProperties47.getLogBaseName();
        boolean boolean59 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.setThreadedTwoPhaseCommit(false);
        boolean boolean62 = properties9.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) properties36, (java.lang.Object) atomikosProperties47);
        java.lang.Object obj63 = properties8.remove((java.lang.Object) properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties8.keys();
        java.io.OutputStream outputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(outputStream65, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
    }

    @Test
    public void test3908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3908");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties13.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        java.lang.Object obj28 = properties13.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setForceShutdownOnVmExit(true);
        java.util.Properties properties31 = atomikosProperties20.asProperties();
        java.lang.String str32 = atomikosProperties20.getService();
        boolean boolean33 = atomikosProperties20.isForceShutdownOnVmExit();
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean36 = properties12.containsValue((java.lang.Object) true);
        java.io.PrintWriter printWriter37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printWriter37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3909");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties0.elements();
        java.lang.String str65 = properties0.getProperty("{[]=0.0}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str65, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test3910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3910");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.keys();
        java.util.Set<java.lang.String> strSet16 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setEnableLogging(true);
        atomikosProperties17.setLogBaseDir("");
        long long31 = atomikosProperties17.getMaxTimeout();
        atomikosProperties17.setSerialJtaTransactions(true);
        java.lang.String str34 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setCheckpointInterval(35L);
        long long37 = atomikosProperties17.getDefaultJtaTimeout();
        java.lang.String str38 = atomikosProperties17.getService();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = properties0.containsValue((java.lang.Object) str38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 35L + "'", long31 == 35L);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test3911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3911");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test3912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3912");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long18 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties7.asProperties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection27 = properties26.values();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        java.lang.Object obj37 = properties23.put((java.lang.Object) properties26, (java.lang.Object) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties23.keys();
        java.util.Set<java.lang.String> strSet39 = properties23.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        int int48 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setService("hi!");
        long long51 = atomikosProperties40.getMaxTimeout();
        atomikosProperties40.setLogBaseName("{}");
        java.lang.String str54 = atomikosProperties40.getLogBaseName();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties(properties63);
        int int75 = properties74.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties77.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties77.getService();
        boolean boolean82 = atomikosProperties77.isEnableLogging();
        java.lang.String str83 = atomikosProperties77.getTransactionManagerUniqueName();
        boolean boolean84 = properties74.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties77);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        boolean boolean87 = properties21.replace((java.lang.Object) properties23, (java.lang.Object) atomikosProperties40, (java.lang.Object) true);
        java.util.Properties properties88 = new java.util.Properties(properties21);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties88.storeToXML(outputStream89, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{}" + "'", str54, "{}");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test3913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3913");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties0.keys();
        java.util.Set<java.lang.Object> objSet32 = properties0.keySet();
        java.io.InputStream inputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objSet32);
    }

    @Test
    public void test3914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3914");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties0.entrySet();
        java.io.OutputStream outputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream55, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet54);
    }

    @Test
    public void test3915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3915");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        properties0.clear();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.lang.Object obj59 = properties45.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        boolean boolean63 = atomikosProperties60.isSerialJtaTransactions();
        java.util.Properties properties64 = atomikosProperties60.asProperties();
        java.lang.Object obj67 = properties64.setProperty("hi!", "");
        java.util.Properties properties68 = new java.util.Properties(properties64);
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties75.entrySet();
        java.lang.Object obj83 = properties69.put((java.lang.Object) properties72, (java.lang.Object) properties75);
        java.lang.Object obj84 = properties45.putIfAbsent((java.lang.Object) properties68, (java.lang.Object) properties75);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration86 = properties45.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Properties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test3916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3916");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        boolean boolean25 = properties19.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.lang.Object obj33 = properties27.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = properties19.remove((java.lang.Object) properties27, (java.lang.Object) atomikosProperties34);
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.io.InputStream inputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.loadFromXML(inputStream39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test3917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3917");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3918");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.keys();
        java.lang.Object obj15 = properties10.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet16 = properties10.stringPropertyNames();
        java.util.Properties properties17 = new java.util.Properties();
        boolean boolean19 = properties17.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        java.lang.String str27 = atomikosProperties20.getService();
        boolean boolean28 = properties17.containsKey((java.lang.Object) atomikosProperties20);
        boolean boolean29 = properties10.containsKey((java.lang.Object) properties17);
        java.lang.String str31 = properties10.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setMaxTimeout((long) '#');
        boolean boolean39 = atomikosProperties32.isEnableLogging();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setMaxActives((int) (byte) 100);
        atomikosProperties32.setForceShutdownOnVmExit(false);
        boolean boolean46 = properties10.contains((java.lang.Object) false);
        properties10.clear();
        boolean boolean48 = properties10.isEmpty();
        java.lang.Object obj49 = properties0.remove((java.lang.Object) boolean48);
        java.util.Set<java.lang.String> strSet50 = properties0.stringPropertyNames();
        java.io.InputStream inputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test3919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3919");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = properties12.remove((java.lang.Object) properties20, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        int int32 = properties31.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties34.getService();
        boolean boolean39 = atomikosProperties34.isEnableLogging();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean41 = properties31.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setEnableLogging(false);
        boolean boolean44 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties0.keys();
        java.lang.Object obj47 = properties0.clone();
        java.io.OutputStream outputStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream48, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
    }

    @Test
    public void test3920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3920");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getService();
        java.util.Properties properties13 = atomikosProperties3.asProperties();
        java.io.InputStream inputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.load(inputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test3921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3921");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration18 = properties9.propertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties19.entrySet();
        java.util.Set<java.lang.String> strSet26 = properties19.stringPropertyNames();
        boolean boolean27 = properties19.isEmpty();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        boolean boolean29 = properties7.containsKey((java.lang.Object) properties9);
        java.util.Set<java.lang.Object> objSet30 = properties7.keySet();
        java.util.Set<java.lang.String> strSet31 = properties7.stringPropertyNames();
        java.util.Set<java.lang.String> strSet32 = properties7.stringPropertyNames();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean39 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.lang.Object obj47 = properties41.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = properties33.remove((java.lang.Object) properties41, (java.lang.Object) atomikosProperties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        atomikosProperties52.setTransactionManagerUniqueName("hi!");
        java.lang.String str58 = atomikosProperties52.getTransactionManagerUniqueName();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        boolean boolean65 = properties59.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties59.entrySet();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        boolean boolean70 = properties67.isEmpty();
        java.lang.Object obj73 = properties67.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setSerialJtaTransactions(false);
        boolean boolean77 = properties59.remove((java.lang.Object) properties67, (java.lang.Object) atomikosProperties74);
        java.util.Properties properties78 = new java.util.Properties(properties67);
        int int79 = properties78.size();
        int int80 = properties78.size();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj82 = properties78.get((java.lang.Object) properties81);
        java.lang.Object obj83 = properties33.getOrDefault((java.lang.Object) atomikosProperties52, (java.lang.Object) properties81);
        java.lang.Object obj84 = properties33.clone();
        boolean boolean85 = properties7.contains(obj84);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{}");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test3922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3922");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean21 = properties14.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection22 = properties14.values();
        java.lang.Object obj23 = properties14.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties14.values();
        boolean boolean25 = properties0.containsKey((java.lang.Object) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setMaxTimeout((long) '#');
        boolean boolean33 = atomikosProperties26.isEnableLogging();
        long long34 = atomikosProperties26.getCheckpointInterval();
        atomikosProperties26.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties26.setDefaultJtaTimeout((long) 'a');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties43.getService();
        atomikosProperties43.setEnableLogging(false);
        java.lang.Object obj50 = properties14.put((java.lang.Object) 'a', (java.lang.Object) atomikosProperties43);
        java.io.Writer writer51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.store(writer51, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 500L + "'", long34 == 500L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test3923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3923");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str9 = atomikosProperties0.getService();
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
    }

    @Test
    public void test3924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3924");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection42 = properties34.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setLogBaseName("{=hi!}");
        java.lang.Object obj50 = properties8.put((java.lang.Object) objCollection42, (java.lang.Object) atomikosProperties43);
        java.io.InputStream inputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test3925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3925");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.lang.String str41 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj49 = properties19.get((java.lang.Object) atomikosProperties42);
        atomikosProperties42.setLogBaseName("{{}={}}");
        atomikosProperties42.setTransactionManagerUniqueName("{[]=0.0}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test3926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3926");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Set<java.lang.String> strSet27 = properties3.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        boolean boolean31 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setEnableLogging(false);
        boolean boolean39 = atomikosProperties32.isSerialJtaTransactions();
        int int40 = atomikosProperties32.getMaxActives();
        atomikosProperties32.setDefaultJtaTimeout((long) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties43.getService();
        boolean boolean48 = atomikosProperties43.isEnableLogging();
        java.util.Properties properties49 = atomikosProperties43.asProperties();
        atomikosProperties43.setForceShutdownOnVmExit(true);
        atomikosProperties43.setMaxActives((int) (short) -1);
        atomikosProperties43.setMaxTimeout((long) ' ');
        atomikosProperties43.setEnableLogging(false);
        boolean boolean58 = properties28.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        boolean boolean64 = atomikosProperties59.isForceShutdownOnVmExit();
        java.lang.String str65 = atomikosProperties59.getTransactionManagerUniqueName();
        java.lang.String str66 = atomikosProperties59.getService();
        atomikosProperties59.setEnableLogging(false);
        java.lang.Object obj69 = properties3.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties59);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties3.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
    }

    @Test
    public void test3927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3927");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.lang.String str18 = properties0.getProperty("{}");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.util.Properties properties38 = atomikosProperties34.asProperties();
        java.lang.Object obj41 = properties38.setProperty("hi!", "");
        java.util.Properties properties42 = new java.util.Properties(properties38);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties49.entrySet();
        java.lang.Object obj57 = properties43.put((java.lang.Object) properties46, (java.lang.Object) properties49);
        java.lang.Object obj58 = properties19.putIfAbsent((java.lang.Object) properties42, (java.lang.Object) properties49);
        properties49.clear();
        java.lang.Object obj60 = properties0.get((java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties49.keys();
        java.util.Properties properties62 = new java.util.Properties(properties49);
        java.lang.String str64 = properties62.getProperty("");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test3928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3928");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test3929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3929");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.lang.String str35 = properties0.toString();
        java.io.InputStream inputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{hi!=[]}" + "'", str35, "{hi!=[]}");
    }

    @Test
    public void test3930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3930");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet9 = properties8.stringPropertyNames();
        java.util.Set<java.lang.String> strSet10 = properties8.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test3931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3931");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Set<java.lang.Object> objSet55 = properties0.keySet();
        java.lang.Object obj56 = properties0.clone();
        java.lang.Object obj59 = properties0.setProperty("{hi!=[]}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.PrintWriter printWriter60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test3932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3932");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet9 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet10 = properties0.stringPropertyNames();
        java.lang.String str13 = properties0.getProperty("{hi!=[], {}={}}", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3933");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties6.keys();
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.storeToXML(outputStream33, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
    }

    @Test
    public void test3934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3934");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.Object obj18 = properties0.clone();
        properties0.clear();
        java.io.Writer writer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer20, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
    }

    @Test
    public void test3935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3935");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties7.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str11 = properties7.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        java.lang.String str19 = atomikosProperties12.getService();
        java.util.Properties properties20 = atomikosProperties12.asProperties();
        java.util.Properties properties21 = atomikosProperties12.asProperties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        int int27 = properties23.size();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        boolean boolean34 = properties23.containsKey((java.lang.Object) objSet33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties23.keys();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties36.entrySet();
        boolean boolean45 = properties23.remove((java.lang.Object) properties36, (java.lang.Object) 1.0f);
        java.lang.Object obj46 = properties36.clone();
        java.util.Collection<java.lang.Object> objCollection47 = properties36.values();
        java.util.Collection<java.lang.Object> objCollection48 = properties36.values();
        java.lang.String str49 = properties36.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isEnableLogging();
        atomikosProperties50.setMaxActives((int) '#');
        atomikosProperties50.setSerialJtaTransactions(true);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        java.lang.Class<?> wildcardClass64 = atomikosProperties50.getClass();
        boolean boolean65 = properties36.contains((java.lang.Object) atomikosProperties50);
        boolean boolean66 = properties21.equals((java.lang.Object) properties36);
        boolean boolean67 = properties7.equals((java.lang.Object) properties21);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test3936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3936");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        long long67 = atomikosProperties55.getMaxTimeout();
        atomikosProperties55.setMaxActives((int) ' ');
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 35L + "'", long67 == 35L);
    }

    @Test
    public void test3937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3937");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setMaxActives(9);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test3938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3938");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        long long31 = atomikosProperties12.getCheckpointInterval();
        java.util.Properties properties32 = atomikosProperties12.asProperties();
        boolean boolean33 = atomikosProperties12.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test3939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3939");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties20.keys();
        java.lang.Object obj33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = properties20.containsValue(obj33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
    }

    @Test
    public void test3940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3940");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setForceShutdownOnVmExit(true);
        java.util.Properties properties27 = atomikosProperties16.asProperties();
        boolean boolean28 = properties0.containsValue((java.lang.Object) atomikosProperties16);
        int int29 = properties0.size();
        java.lang.String str32 = properties0.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}" + "'", str32, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
    }

    @Test
    public void test3941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3941");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        boolean boolean63 = atomikosProperties58.isSerialJtaTransactions();
        boolean boolean64 = atomikosProperties58.isForceShutdownOnVmExit();
        java.lang.String str65 = atomikosProperties58.getService();
        boolean boolean66 = atomikosProperties58.isThreadedTwoPhaseCommit();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        boolean boolean73 = properties67.isEmpty();
        java.util.Properties properties74 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection75 = properties74.values();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties74.keys();
        java.lang.Object obj77 = properties67.remove((java.lang.Object) properties74);
        int int78 = properties67.size();
        java.lang.Object obj79 = properties34.putIfAbsent((java.lang.Object) atomikosProperties58, (java.lang.Object) int78);
        atomikosProperties58.setTransactionManagerUniqueName("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test3942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3942");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean39 = properties28.containsKey((java.lang.Object) objSet38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties28.keys();
        int int41 = properties28.size();
        boolean boolean42 = properties10.containsValue((java.lang.Object) int41);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Enumeration<?> wildcardEnumeration49 = properties44.propertyNames();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.util.Set<java.lang.String> strSet51 = properties50.stringPropertyNames();
        java.lang.Object obj53 = properties10.putIfAbsent((java.lang.Object) properties50, (java.lang.Object) 9);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream54, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test3943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3943");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        java.lang.String str28 = atomikosProperties22.getLogBaseName();
        java.lang.String str29 = atomikosProperties22.getLogBaseName();
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        long long31 = atomikosProperties22.getMaxTimeout();
        java.lang.String str32 = atomikosProperties22.getLogBaseName();
        int int33 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        int int37 = properties0.size();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        boolean boolean41 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties38.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties38.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setMaxTimeout((long) '#');
        boolean boolean51 = atomikosProperties44.isForceShutdownOnVmExit();
        int int52 = atomikosProperties44.getMaxActives();
        java.lang.Object obj53 = properties38.remove((java.lang.Object) int52);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties38.entrySet();
        boolean boolean55 = properties0.contains((java.lang.Object) objEntrySet54);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        int int60 = properties56.size();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean67 = properties56.containsKey((java.lang.Object) objSet66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties56.keys();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties69.elements();
        boolean boolean73 = properties69.isEmpty();
        java.util.Set<java.lang.Object> objSet74 = properties69.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties69.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties69.entrySet();
        boolean boolean78 = properties56.remove((java.lang.Object) properties69, (java.lang.Object) 1.0f);
        java.lang.Object obj79 = properties69.clone();
        java.util.Collection<java.lang.Object> objCollection80 = properties69.values();
        java.util.Properties properties81 = new java.util.Properties(properties69);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        java.util.Properties properties83 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection84 = properties83.values();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties83.keys();
        properties83.clear();
        boolean boolean87 = properties0.equals((java.lang.Object) properties83);
        java.io.InputStream inputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.load(inputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{}");
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertNotNull(objCollection84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test3944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3944");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.util.Enumeration<?> wildcardEnumeration23 = properties22.propertyNames();
        java.io.PrintWriter printWriter24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.list(printWriter24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
    }

    @Test
    public void test3945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3945");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.io.PrintWriter printWriter19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test3946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3946");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("tmlog");
        long long14 = atomikosProperties0.getMaxTimeout();
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
    }

    @Test
    public void test3947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3947");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection46 = properties36.values();
        java.io.InputStream inputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.load(inputStream47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
    }

    @Test
    public void test3948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3948");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test3949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3949");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxTimeout((long) 'a');
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval(97L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test3950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3950");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        java.lang.Object obj25 = properties16.put((java.lang.Object) strSet23, (java.lang.Object) 0.0d);
        java.lang.String str26 = properties16.toString();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.util.Set<java.lang.String> strSet31 = properties27.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.lang.String str36 = properties32.toString();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.lang.Object obj44 = properties37.setProperty("tmlog", "");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.Object obj46 = properties37.clone();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean50 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties47.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties47.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        int int61 = atomikosProperties53.getMaxActives();
        java.lang.Object obj62 = properties47.remove((java.lang.Object) int61);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties47.entrySet();
        boolean boolean64 = properties37.containsKey((java.lang.Object) objEntrySet63);
        java.lang.Object obj65 = properties27.get((java.lang.Object) objEntrySet63);
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        boolean boolean67 = properties15.containsValue((java.lang.Object) properties27);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{[]=0.0}" + "'", str26, "{[]=0.0}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{tmlog=}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test3951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3951");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        atomikosProperties8.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj45 = properties16.getOrDefault((java.lang.Object) boolean37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties38);
        java.lang.String str47 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties48 = atomikosProperties8.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties48.save(outputStream50, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(objEnumeration49);
    }

    @Test
    public void test3952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3952");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.elements();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test3953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3953");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test3954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3954");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties17.containsValue((java.lang.Object) "hi!");
        java.lang.String str23 = properties17.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration24 = properties17.propertyNames();
        java.lang.String str26 = properties17.getProperty("{{}={}}");
        java.lang.String str27 = properties17.toString();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.io.Writer writer29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
    }

    @Test
    public void test3955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3955");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties12.containsKey((java.lang.Object) objSet22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties12.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        boolean boolean34 = properties12.remove((java.lang.Object) properties25, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration35 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.util.Set<java.lang.String> strSet44 = properties43.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet45 = properties43.keySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.Object obj67 = properties25.put((java.lang.Object) objSet45, (java.lang.Object) false);
        java.lang.Object obj68 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = atomikosProperties69.isSerialJtaTransactions();
        java.lang.String str73 = atomikosProperties69.getService();
        long long74 = atomikosProperties69.getMaxTimeout();
        java.lang.String str75 = atomikosProperties69.getService();
        int int76 = atomikosProperties69.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setEnableLogging(false);
        boolean boolean84 = atomikosProperties77.isSerialJtaTransactions();
        int int85 = atomikosProperties77.getMaxActives();
        boolean boolean86 = atomikosProperties77.isEnableLogging();
        long long87 = atomikosProperties77.getCheckpointInterval();
        java.util.Properties properties88 = atomikosProperties77.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties88.elements();
        java.lang.Object obj92 = properties88.setProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[]}");
        boolean boolean93 = properties25.remove((java.lang.Object) int76, (java.lang.Object) properties88);
        java.util.Set<java.lang.String> strSet94 = properties25.stringPropertyNames();
        java.util.Properties properties95 = new java.util.Properties(properties25);
        java.io.OutputStream outputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.store(outputStream96, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration35);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 50 + "'", int76 == 50);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 50 + "'", int85 == 50);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 500L + "'", long87 == 500L);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strSet94);
    }

    @Test
    public void test3956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3956");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.io.InputStream inputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
    }

    @Test
    public void test3957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3957");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxActives(10);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3958");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setEnableLogging(false);
        boolean boolean58 = atomikosProperties51.isSerialJtaTransactions();
        int int59 = atomikosProperties51.getMaxActives();
        boolean boolean60 = atomikosProperties51.isEnableLogging();
        long long61 = atomikosProperties51.getCheckpointInterval();
        java.util.Properties properties62 = atomikosProperties51.asProperties();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        int int67 = properties63.size();
        java.util.Properties properties68 = new java.util.Properties(properties63);
        java.util.Set<java.lang.String> strSet69 = properties63.stringPropertyNames();
        java.lang.Object obj70 = properties0.getOrDefault((java.lang.Object) properties62, (java.lang.Object) strSet69);
        java.util.Enumeration<?> wildcardEnumeration71 = properties0.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setMaxTimeout((long) '#');
        boolean boolean79 = atomikosProperties72.isEnableLogging();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setEnableLogging(true);
        atomikosProperties72.setLogBaseDir("");
        atomikosProperties72.setMaxActives((int) (short) 100);
        java.lang.String str88 = atomikosProperties72.getService();
        atomikosProperties72.setMaxTimeout((long) (byte) -1);
        java.lang.Object obj91 = properties0.remove((java.lang.Object) atomikosProperties72);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertNotNull(wildcardEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test3959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3959");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        properties0.clear();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream18, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
    }

    @Test
    public void test3960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3960");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int7 = atomikosProperties0.getMaxActives();
        long long8 = atomikosProperties0.getMaxTimeout();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3961");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties(properties8);
        java.lang.String str17 = properties15.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test3962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3962");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout(1L);
        atomikosProperties0.setDefaultJtaTimeout((long) 2);
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test3963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3963");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        boolean boolean40 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties8.getLogBaseDir();
        java.lang.String str42 = atomikosProperties8.getLogBaseDir();
        atomikosProperties8.setLogBaseDir("{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test3964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3964");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test3965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3965");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        boolean boolean13 = properties11.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        java.lang.String str21 = atomikosProperties14.getService();
        boolean boolean22 = properties11.containsKey((java.lang.Object) atomikosProperties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 100);
        atomikosProperties23.setForceShutdownOnVmExit(false);
        boolean boolean35 = properties11.containsValue((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setService("{=hi!}");
        java.util.Properties properties38 = atomikosProperties23.asProperties();
        java.lang.Object obj39 = properties0.get((java.lang.Object) atomikosProperties23);
        java.util.Set<java.lang.Object> objSet40 = properties0.keySet();
        java.lang.Object obj41 = properties0.clone();
        java.util.Properties properties42 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.storeToXML(outputStream43, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
    }

    @Test
    public void test3966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3966");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        long long10 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties11.entrySet();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEntrySet12);
    }

    @Test
    public void test3967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3967");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        boolean boolean51 = properties31.contains((java.lang.Object) atomikosProperties47);
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties52.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties52.entrySet();
        java.util.Set<java.lang.String> strSet59 = properties52.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties60.entrySet();
        boolean boolean66 = properties52.contains((java.lang.Object) properties60);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection71 = properties70.values();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties70.keys();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties73.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties73.entrySet();
        java.lang.Object obj81 = properties67.put((java.lang.Object) properties70, (java.lang.Object) properties73);
        java.lang.Object obj82 = properties70.clone();
        boolean boolean83 = properties52.containsKey((java.lang.Object) properties70);
        boolean boolean84 = properties31.equals((java.lang.Object) boolean83);
        java.util.Properties properties85 = new java.util.Properties();
        java.lang.Object obj87 = properties85.remove((java.lang.Object) 0.0d);
        boolean boolean88 = properties85.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties85.keys();
        java.lang.Object obj90 = properties31.get((java.lang.Object) objEnumeration89);
        int int91 = properties31.size();
        java.lang.Object obj94 = properties31.setProperty("{tmlog=}", "{=hi!}");
        java.io.OutputStream outputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.store(outputStream95, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test3968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3968");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties27.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isForceShutdownOnVmExit();
        java.lang.Object obj42 = properties27.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties34);
        int int43 = atomikosProperties34.getMaxActives();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties44.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj51 = properties44.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet65);
        java.util.Set<java.lang.Object> objSet67 = properties52.keySet();
        boolean boolean68 = properties44.containsKey((java.lang.Object) properties52);
        java.util.Set<java.lang.String> strSet69 = properties52.stringPropertyNames();
        java.lang.String str70 = properties52.toString();
        boolean boolean71 = properties0.remove((java.lang.Object) atomikosProperties34, (java.lang.Object) properties52);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet72 = properties52.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties52.keys();
        java.util.Collection<java.lang.Object> objCollection74 = properties52.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{hi!=[]}" + "'", str70, "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEntrySet72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objCollection74);
    }

    @Test
    public void test3969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3969");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.lang.String str19 = properties9.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setEnableLogging(false);
        boolean boolean27 = properties9.containsKey((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean37 = properties30.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection38 = properties30.values();
        java.lang.Object obj39 = properties30.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties30.values();
        boolean boolean41 = properties4.remove((java.lang.Object) atomikosProperties20, (java.lang.Object) objCollection40);
        atomikosProperties20.setMaxActives(0);
        long long44 = atomikosProperties20.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
    }

    @Test
    public void test3970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3970");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setService("{hi!=[]}");
        atomikosProperties0.setMaxTimeout((long) 100);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test3971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3971");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.setProperty("hi!", "{=hi!}");
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3972");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.keys();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties19.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.lang.Object obj27 = properties13.put((java.lang.Object) properties16, (java.lang.Object) properties19);
        java.lang.String str29 = properties16.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = atomikosProperties30.isSerialJtaTransactions();
        java.lang.Object obj34 = properties5.put((java.lang.Object) properties16, (java.lang.Object) boolean33);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Set<java.lang.Object> objSet36 = properties5.keySet();
        java.lang.Class<?> wildcardClass37 = objSet36.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test3973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3973");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        java.lang.String str10 = atomikosProperties4.getLogBaseName();
        java.lang.String str11 = atomikosProperties4.getLogBaseName();
        java.lang.Object obj12 = properties0.get((java.lang.Object) str11);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream13, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test3974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3974");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.lang.Object obj20 = properties8.clone();
        java.lang.Object obj21 = properties8.clone();
        boolean boolean22 = properties8.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{=hi!}");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{=hi!}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test3975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3975");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean40 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        java.lang.Object obj48 = properties42.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = properties34.remove((java.lang.Object) properties42, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties53 = new java.util.Properties(properties42);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties54.entrySet();
        java.lang.Class<?> wildcardClass60 = objEntrySet59.getClass();
        java.lang.Object obj61 = properties10.getOrDefault((java.lang.Object) properties42, (java.lang.Object) wildcardClass60);
        java.io.Writer writer62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.store(writer62, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.util.Collections$SynchronizedSet");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.util.Collections$SynchronizedSet");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.util.Collections$SynchronizedSet");
    }

    @Test
    public void test3976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3976");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet9 = properties0.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties10.containsKey((java.lang.Object) objSet20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties10.keys();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties23.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        boolean boolean32 = properties10.remove((java.lang.Object) properties23, (java.lang.Object) 1.0f);
        java.lang.Object obj33 = properties23.clone();
        java.util.Collection<java.lang.Object> objCollection34 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection35 = properties23.values();
        java.lang.Object obj36 = properties0.get((java.lang.Object) properties23);
        java.util.Set<java.lang.String> strSet37 = properties23.stringPropertyNames();
        java.io.InputStream inputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.loadFromXML(inputStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test3977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3977");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.lang.String str7 = properties0.toString();
        properties0.clear();
        java.lang.String str11 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{=hi!}" + "'", str7, "{=hi!}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str11, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test3978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3978");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet9 = properties7.keySet();
        java.lang.String str10 = properties7.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Set<java.lang.String> strSet15 = properties11.stringPropertyNames();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.lang.String str20 = properties16.toString();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.lang.Object obj28 = properties21.setProperty("tmlog", "");
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.lang.Object obj30 = properties21.clone();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        boolean boolean34 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties31.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setMaxTimeout((long) '#');
        boolean boolean44 = atomikosProperties37.isForceShutdownOnVmExit();
        int int45 = atomikosProperties37.getMaxActives();
        java.lang.Object obj46 = properties31.remove((java.lang.Object) int45);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties31.entrySet();
        boolean boolean48 = properties21.containsKey((java.lang.Object) objEntrySet47);
        java.lang.Object obj49 = properties11.get((java.lang.Object) objEntrySet47);
        java.util.Properties properties50 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties50.entrySet();
        java.util.Properties properties52 = new java.util.Properties();
        boolean boolean54 = properties52.contains((java.lang.Object) 100.0d);
        java.lang.Object obj55 = null;
        boolean boolean56 = properties52.equals(obj55);
        java.util.Properties properties57 = new java.util.Properties(properties52);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties52.entrySet();
        java.lang.Object obj59 = properties7.put((java.lang.Object) properties50, (java.lang.Object) properties52);
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties52.save(outputStream60, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objSet9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{tmlog=}");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test3979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3979");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet7 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        java.lang.String str17 = atomikosProperties10.getLogBaseDir();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.lang.String str20 = atomikosProperties10.getLogBaseDir();
        int int21 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setMaxActives((int) (short) 1);
        java.lang.String str24 = atomikosProperties10.getService();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection40 = properties39.values();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        java.lang.Object obj42 = properties32.remove((java.lang.Object) properties39);
        java.lang.Object obj43 = properties25.get((java.lang.Object) properties39);
        boolean boolean44 = properties25.isEmpty();
        java.lang.String str45 = properties25.toString();
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties10, (java.lang.Object) str45);
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream47, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{=hi!}" + "'", str45, "{=hi!}");
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test3980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3980");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        int int19 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        boolean boolean29 = atomikosProperties20.isSerialJtaTransactions();
        java.lang.String str30 = atomikosProperties20.getService();
        java.lang.Object obj31 = properties0.get((java.lang.Object) atomikosProperties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setMaxActives((int) '#');
        int int43 = atomikosProperties33.getMaxActives();
        java.lang.String str44 = atomikosProperties33.getLogBaseDir();
        java.lang.String str45 = atomikosProperties33.getLogBaseDir();
        boolean boolean46 = properties0.equals((java.lang.Object) str45);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 35 + "'", int43 == 35);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test3981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3981");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        java.lang.String str44 = properties34.toString();
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.save(outputStream45, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
    }

    @Test
    public void test3982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3982");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test3983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3983");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Collection<java.lang.Object> objCollection11 = properties0.values();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet15 = properties12.stringPropertyNames();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.lang.Object obj21 = properties12.put((java.lang.Object) strSet19, (java.lang.Object) 0.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.lang.Object obj36 = properties22.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet35);
        java.util.Set<java.lang.Object> objSet37 = properties22.keySet();
        java.lang.Object obj39 = properties12.putIfAbsent((java.lang.Object) properties22, (java.lang.Object) (short) 10);
        java.lang.Object obj42 = properties22.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[]}");
        java.util.Set<java.lang.Object> objSet43 = properties22.keySet();
        boolean boolean44 = properties0.containsKey((java.lang.Object) properties22);
        int int45 = properties22.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
    }

    @Test
    public void test3984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3984");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet9 = properties0.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties10.isEmpty();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection18 = properties17.values();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties17.keys();
        java.lang.Object obj20 = properties10.remove((java.lang.Object) properties17);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = properties0.containsValue(obj20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test3985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3985");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        long long38 = atomikosProperties31.getMaxTimeout();
        java.lang.String str39 = atomikosProperties31.getLogBaseName();
        boolean boolean40 = atomikosProperties31.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Enumeration<?> wildcardEnumeration52 = properties45.propertyNames();
        java.lang.Object obj54 = properties41.put((java.lang.Object) wildcardEnumeration52, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj70 = properties41.getOrDefault((java.lang.Object) boolean62, (java.lang.Object) atomikosProperties63);
        long long71 = atomikosProperties63.getMaxTimeout();
        java.lang.String str72 = atomikosProperties63.getTransactionManagerUniqueName();
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) atomikosProperties31, (java.lang.Object) str72);
        atomikosProperties31.setDefaultJtaTimeout(100L);
        long long76 = atomikosProperties31.getCheckpointInterval();
        atomikosProperties31.setLogBaseDir("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 500L + "'", long76 == 500L);
    }

    @Test
    public void test3986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3986");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        int int5 = properties0.size();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean19 = properties14.containsValue((java.lang.Object) atomikosProperties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        int int24 = properties20.size();
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Set<java.lang.String> strSet26 = properties20.stringPropertyNames();
        java.util.Set<java.lang.String> strSet27 = properties20.stringPropertyNames();
        java.lang.Object obj28 = properties6.getOrDefault((java.lang.Object) properties14, (java.lang.Object) properties20);
        boolean boolean29 = properties0.equals((java.lang.Object) properties20);
        java.util.Set<java.lang.Object> objSet30 = properties20.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
    }

    @Test
    public void test3987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3987");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<?> wildcardEnumeration23 = properties3.propertyNames();
        java.lang.String str25 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setSerialJtaTransactions(false);
        java.lang.String str33 = atomikosProperties26.getService();
        java.util.Properties properties34 = atomikosProperties26.asProperties();
        boolean boolean35 = atomikosProperties26.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isEnableLogging();
        atomikosProperties36.setCheckpointInterval((long) 100);
        java.lang.String str46 = atomikosProperties36.getTransactionManagerUniqueName();
        atomikosProperties36.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties49 = atomikosProperties36.asProperties();
        java.lang.Object obj50 = properties3.put((java.lang.Object) boolean35, (java.lang.Object) properties49);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        boolean boolean58 = properties51.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection59 = properties51.values();
        java.lang.Object obj60 = properties51.clone();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        boolean boolean64 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties61.elements();
        java.lang.Object obj68 = properties61.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties61.entrySet();
        boolean boolean70 = properties51.contains((java.lang.Object) properties61);
        java.lang.Object obj71 = properties61.clone();
        java.lang.String str73 = properties61.getProperty("tmlog");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "{}");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test3988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3988");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties26.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.Object obj43 = properties0.get((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.Object obj47 = properties44.setProperty("{{}={}}", "hi!");
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        java.lang.String str52 = properties48.toString();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.lang.Object obj60 = properties53.setProperty("tmlog", "");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj62 = properties53.clone();
        boolean boolean63 = properties44.contains((java.lang.Object) properties53);
        java.io.InputStream inputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.loadFromXML(inputStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{}" + "'", str52, "{}");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test3989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3989");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        java.lang.Object obj54 = properties14.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "{}");
    }

    @Test
    public void test3990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3990");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet9 = properties0.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties10.containsKey((java.lang.Object) objSet20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties10.keys();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties23.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        boolean boolean32 = properties10.remove((java.lang.Object) properties23, (java.lang.Object) 1.0f);
        java.lang.Object obj33 = properties23.clone();
        java.util.Collection<java.lang.Object> objCollection34 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection35 = properties23.values();
        java.lang.Object obj36 = properties0.get((java.lang.Object) properties23);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties37.elements();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.lang.Object obj59 = properties45.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        boolean boolean63 = atomikosProperties60.isSerialJtaTransactions();
        java.util.Properties properties64 = atomikosProperties60.asProperties();
        java.lang.Object obj67 = properties64.setProperty("hi!", "");
        java.util.Properties properties68 = new java.util.Properties(properties64);
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties75.entrySet();
        java.lang.Object obj83 = properties69.put((java.lang.Object) properties72, (java.lang.Object) properties75);
        java.lang.Object obj84 = properties45.putIfAbsent((java.lang.Object) properties68, (java.lang.Object) properties75);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        atomikosProperties85.setSerialJtaTransactions(false);
        java.lang.String str92 = atomikosProperties85.getService();
        java.util.Properties properties93 = atomikosProperties85.asProperties();
        java.lang.Object obj94 = properties37.replace((java.lang.Object) properties45, (java.lang.Object) atomikosProperties85);
        long long95 = atomikosProperties85.getMaxTimeout();
        boolean boolean96 = atomikosProperties85.isEnableLogging();
        long long97 = atomikosProperties85.getMaxTimeout();
        java.lang.Object obj98 = properties23.remove((java.lang.Object) long97);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(properties93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 300000L + "'", long95 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 300000L + "'", long97 == 300000L);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test3991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3991");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.lang.Object obj36 = properties0.put((java.lang.Object) false, (java.lang.Object) boolean35);
        java.lang.Object obj37 = properties0.clone();
        java.lang.Object obj38 = properties0.clone();
        java.lang.Object obj39 = properties0.clone();
        java.io.InputStream inputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{hi!=, false=true}");
    }

    @Test
    public void test3992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3992");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        long long16 = atomikosProperties0.getMaxTimeout();
        long long17 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 35L + "'", long16 == 35L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
    }

    @Test
    public void test3993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3993");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test3994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3994");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties0.elements();
        properties0.clear();
        java.lang.String str53 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test3995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3995");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean18 = properties15.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties15.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        boolean boolean28 = atomikosProperties21.isForceShutdownOnVmExit();
        int int29 = atomikosProperties21.getMaxActives();
        java.lang.Object obj30 = properties15.remove((java.lang.Object) int29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties15.entrySet();
        boolean boolean32 = properties5.containsKey((java.lang.Object) objEntrySet31);
        java.io.InputStream inputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.loadFromXML(inputStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test3996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3996");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = atomikosProperties16.asProperties();
        java.lang.String str30 = atomikosProperties16.getTransactionManagerUniqueName();
        long long31 = atomikosProperties16.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
    }

    @Test
    public void test3997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3997");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        boolean boolean51 = properties31.contains((java.lang.Object) atomikosProperties47);
        java.util.Set<java.lang.Object> objSet52 = properties31.keySet();
        properties31.clear();
        java.io.InputStream inputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.loadFromXML(inputStream54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objSet52);
    }

    @Test
    public void test3998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3998");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties7.entrySet();
        java.util.Set<java.lang.String> strSet9 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties10.isThreadedTwoPhaseCommit();
        boolean boolean14 = atomikosProperties10.isForceShutdownOnVmExit();
        boolean boolean15 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) 50);
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        atomikosProperties19.setForceShutdownOnVmExit(false);
        atomikosProperties19.setSerialJtaTransactions(false);
        java.lang.Object obj33 = properties18.get((java.lang.Object) false);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.util.Set<java.lang.Object> objSet50 = properties34.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties34.entrySet();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        boolean boolean55 = properties52.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean57 = properties52.containsValue((java.lang.Object) atomikosProperties56);
        java.lang.String str59 = properties52.getProperty("tmlog");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        java.lang.Object obj68 = properties52.get((java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = atomikosProperties69.isSerialJtaTransactions();
        atomikosProperties69.setCheckpointInterval((long) 10);
        atomikosProperties69.setForceShutdownOnVmExit(true);
        java.lang.String str77 = atomikosProperties69.getTransactionManagerUniqueName();
        long long78 = atomikosProperties69.getMaxTimeout();
        boolean boolean79 = properties18.remove((java.lang.Object) '#', (java.lang.Object) long78);
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.io.PrintStream printStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printStream81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test3999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3999");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties16.containsKey((java.lang.Object) objSet26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties16.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean38 = properties16.remove((java.lang.Object) properties29, (java.lang.Object) 1.0f);
        java.lang.Object obj39 = properties29.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties29.values();
        java.util.Properties properties41 = new java.util.Properties(properties29);
        boolean boolean42 = properties0.containsKey((java.lang.Object) properties29);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Enumeration<?> wildcardEnumeration49 = properties44.propertyNames();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.util.Set<java.lang.String> strSet51 = properties50.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        boolean boolean54 = properties52.contains((java.lang.Object) 100.0d);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        boolean boolean74 = properties52.equals((java.lang.Object) properties55);
        java.util.Enumeration<?> wildcardEnumeration75 = properties55.propertyNames();
        java.lang.String str77 = properties55.getProperty("{=hi!}");
        java.lang.Object obj78 = properties55.clone();
        java.lang.Object obj79 = properties0.replace((java.lang.Object) properties50, (java.lang.Object) properties55);
        java.util.Properties properties80 = new java.util.Properties(properties50);
        java.io.InputStream inputStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties50.loadFromXML(inputStream81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test4000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test4000");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        boolean boolean32 = properties27.containsValue((java.lang.Object) properties28);
        java.util.Enumeration<?> wildcardEnumeration33 = properties28.propertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties34.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        boolean boolean42 = properties28.containsValue((java.lang.Object) objEntrySet41);
        java.lang.String str44 = properties28.getProperty("");
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        java.lang.String str49 = properties45.toString();
        java.lang.String str50 = properties45.toString();
        java.util.Set<java.lang.Object> objSet51 = properties45.keySet();
        boolean boolean52 = properties28.contains((java.lang.Object) objSet51);
        java.lang.Object obj53 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        atomikosProperties54.setTransactionManagerUniqueName("hi!");
        java.lang.String str60 = atomikosProperties54.getLogBaseName();
        java.lang.String str61 = atomikosProperties54.getLogBaseName();
        boolean boolean62 = atomikosProperties54.isSerialJtaTransactions();
        long long63 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.setCheckpointInterval(0L);
        java.lang.String str66 = atomikosProperties54.getLogBaseName();
        boolean boolean67 = properties28.containsKey((java.lang.Object) atomikosProperties54);
        java.lang.Object obj68 = properties16.remove((java.lang.Object) properties28);
        java.io.PrintStream printStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.list(printStream69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 300000L + "'", long63 == 300000L);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj68);
    }
}
