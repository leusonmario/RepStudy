import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj14 = properties9.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet15 = properties9.stringPropertyNames();
        java.util.Properties properties16 = new java.util.Properties();
        boolean boolean18 = properties16.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setSerialJtaTransactions(false);
        java.lang.String str26 = atomikosProperties19.getService();
        boolean boolean27 = properties16.containsKey((java.lang.Object) atomikosProperties19);
        boolean boolean28 = properties9.containsKey((java.lang.Object) properties16);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties9.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.util.Properties properties38 = new java.util.Properties(properties30);
        java.util.Set<java.lang.Object> objSet39 = properties30.keySet();
        java.lang.Object obj40 = properties0.put((java.lang.Object) properties9, (java.lang.Object) objSet39);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream41, "tmlog", "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setDefaultJtaTimeout((long) 'a');
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((-1L));
        java.lang.Class<?> wildcardClass11 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        boolean boolean34 = properties0.remove((java.lang.Object) str32, (java.lang.Object) 1.0d);
        java.util.Properties properties35 = new java.util.Properties(properties0);
        java.io.PrintWriter printWriter36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties0.entrySet();
        java.lang.Object obj21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = properties0.containsValue(obj21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEntrySet20);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.lang.String str23 = properties0.toString();
        java.io.Writer writer24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer24, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        properties0.clear();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream8, "", "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection62 = properties0.values();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties63.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties63.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties84 = atomikosProperties77.asProperties();
        int int85 = atomikosProperties77.getMaxActives();
        java.util.Properties properties86 = new java.util.Properties();
        java.lang.Object obj88 = properties86.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties86.elements();
        boolean boolean90 = properties86.isEmpty();
        java.util.Set<java.lang.Object> objSet91 = properties86.keySet();
        boolean boolean93 = properties86.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj94 = properties71.put((java.lang.Object) atomikosProperties77, (java.lang.Object) properties86);
        java.lang.String str95 = properties71.toString();
        boolean boolean97 = properties63.remove((java.lang.Object) str95, (java.lang.Object) 1.0d);
        java.util.Properties properties98 = new java.util.Properties(properties63);
        java.lang.Object obj99 = properties0.remove((java.lang.Object) properties98);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 50 + "'", int85 == 50);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(objSet91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = properties12.remove((java.lang.Object) properties20, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        int int32 = properties31.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties34.getService();
        boolean boolean39 = atomikosProperties34.isEnableLogging();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean41 = properties31.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setEnableLogging(false);
        boolean boolean44 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties0.keys();
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream47, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet13 = properties10.stringPropertyNames();
        boolean boolean14 = properties9.containsValue((java.lang.Object) properties10);
        java.util.Collection<java.lang.Object> objCollection15 = properties9.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        java.lang.Object obj23 = properties9.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet22);
        java.util.Set<java.lang.Object> objSet24 = properties9.keySet();
        java.util.Set<java.lang.Object> objSet25 = properties9.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj31 = properties4.putIfAbsent((java.lang.Object) objSet25, (java.lang.Object) atomikosProperties26);
        java.io.Reader reader32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(reader32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties16.containsKey((java.lang.Object) objSet26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties16.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean38 = properties16.remove((java.lang.Object) properties29, (java.lang.Object) 1.0f);
        java.lang.Object obj39 = properties29.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties29.values();
        java.util.Properties properties41 = new java.util.Properties(properties29);
        boolean boolean42 = properties0.containsKey((java.lang.Object) properties29);
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream43, "tmlog", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        boolean boolean36 = properties33.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties33.elements();
        java.lang.Object obj40 = properties33.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.lang.String str42 = properties33.getProperty("hi!");
        java.lang.String str44 = properties33.getProperty("{=hi!}");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = properties14.remove((java.lang.Object) (short) 10, (java.lang.Object) str44);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties12.containsKey((java.lang.Object) objSet22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties12.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        boolean boolean34 = properties12.remove((java.lang.Object) properties25, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration35 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.util.Set<java.lang.String> strSet44 = properties43.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet45 = properties43.keySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.Object obj67 = properties25.put((java.lang.Object) objSet45, (java.lang.Object) false);
        java.lang.Object obj68 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties25);
        java.io.Reader reader69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration35);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        int int17 = atomikosProperties9.getMaxActives();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet25 = properties18.stringPropertyNames();
        java.lang.Object obj26 = properties7.putIfAbsent((java.lang.Object) atomikosProperties9, (java.lang.Object) strSet25);
        boolean boolean28 = properties7.containsKey((java.lang.Object) 35);
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.save(outputStream29, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream30, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        boolean boolean23 = properties3.isEmpty();
        java.io.PrintStream printStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.list(printStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        int int12 = atomikosProperties4.getMaxActives();
        atomikosProperties4.setService("hi!");
        java.lang.Object obj15 = properties0.get((java.lang.Object) atomikosProperties4);
        java.lang.Class<?> wildcardClass16 = properties0.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties46.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) properties39, (java.lang.Object) boolean62);
        java.lang.Object obj64 = properties0.remove((java.lang.Object) properties39);
        java.lang.String str66 = properties0.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties0.elements();
        java.lang.String str69 = properties0.toString();
        java.io.InputStream inputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.lang.String str64 = properties43.toString();
        java.io.OutputStream outputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties43.save(outputStream65, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{hi!=[]}" + "'", str64, "{hi!=[]}");
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer9, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setForceShutdownOnVmExit(true);
        java.lang.String str22 = atomikosProperties12.getService();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        boolean boolean28 = properties23.containsValue((java.lang.Object) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Enumeration<?> wildcardEnumeration30 = properties23.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties23.entrySet();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties32.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setMaxTimeout((long) '#');
        boolean boolean46 = atomikosProperties39.isForceShutdownOnVmExit();
        java.lang.Object obj47 = properties32.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties39);
        atomikosProperties39.setForceShutdownOnVmExit(true);
        java.util.Properties properties50 = atomikosProperties39.asProperties();
        boolean boolean51 = properties23.containsValue((java.lang.Object) atomikosProperties39);
        java.lang.String str52 = atomikosProperties39.getLogBaseName();
        atomikosProperties39.setLogBaseName("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = properties11.putIfAbsent((java.lang.Object) str22, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration28 = properties25.propertyNames();
        java.lang.Class<?> wildcardClass29 = properties25.getClass();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean36 = properties30.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        boolean boolean41 = properties38.isEmpty();
        java.lang.Object obj44 = properties38.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = properties30.remove((java.lang.Object) properties38, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties49 = new java.util.Properties(properties38);
        int int50 = properties49.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.lang.String str56 = atomikosProperties52.getService();
        boolean boolean57 = atomikosProperties52.isEnableLogging();
        java.lang.String str58 = atomikosProperties52.getTransactionManagerUniqueName();
        boolean boolean59 = properties49.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj62 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) true);
        java.io.OutputStream outputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream63, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream41, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer6, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        properties0.clear();
        properties0.clear();
        java.io.Reader reader46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        int int17 = atomikosProperties9.getMaxActives();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet25 = properties18.stringPropertyNames();
        java.lang.Object obj26 = properties7.putIfAbsent((java.lang.Object) atomikosProperties9, (java.lang.Object) strSet25);
        boolean boolean28 = properties7.containsKey((java.lang.Object) 35);
        java.io.InputStream inputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(inputStream29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean21 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setTransactionManagerUniqueName("{{}={}}");
        atomikosProperties15.setDefaultJtaTimeout(10000L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str20 = properties0.getProperty("tmlog");
        java.lang.String str23 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval(10000L);
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        long long10 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection15 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        boolean boolean22 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean25 = properties0.remove((java.lang.Object) objCollection15, (java.lang.Object) atomikosProperties16);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet39);
        java.util.Set<java.lang.Object> objSet41 = properties26.keySet();
        java.util.Set<java.lang.Object> objSet42 = properties26.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties26.entrySet();
        boolean boolean44 = properties0.contains((java.lang.Object) properties26);
        java.io.Writer writer45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.store(writer45, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties61);
        int int70 = properties36.size();
        properties36.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        java.io.Reader reader9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties0.keys();
        properties0.clear();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream29, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.io.PrintWriter printWriter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.lang.String str29 = atomikosProperties16.getTransactionManagerUniqueName();
        atomikosProperties16.setMaxTimeout((long) (short) 0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties0.elements();
        java.io.InputStream inputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.lang.String str65 = properties43.getProperty("");
        properties43.clear();
        java.io.Writer writer67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties43.store(writer67, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties12.containsKey((java.lang.Object) objSet22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties12.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        boolean boolean34 = properties12.remove((java.lang.Object) properties25, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration35 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.util.Set<java.lang.String> strSet44 = properties43.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet45 = properties43.keySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.Object obj67 = properties25.put((java.lang.Object) objSet45, (java.lang.Object) false);
        java.lang.Object obj68 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties25);
        int int69 = properties25.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration35);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        boolean boolean45 = properties39.isEmpty();
        java.lang.Object obj46 = properties34.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean45);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean50 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties47.keys();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet60 = properties57.stringPropertyNames();
        boolean boolean61 = properties56.containsValue((java.lang.Object) properties57);
        java.util.Collection<java.lang.Object> objCollection62 = properties56.values();
        java.util.Enumeration<?> wildcardEnumeration63 = properties56.propertyNames();
        java.lang.Object obj65 = properties52.put((java.lang.Object) wildcardEnumeration63, (java.lang.Object) 10.0d);
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        boolean boolean71 = properties66.containsValue((java.lang.Object) properties67);
        java.util.Collection<java.lang.Object> objCollection72 = properties66.values();
        java.lang.Object obj73 = properties66.clone();
        boolean boolean74 = properties34.replace((java.lang.Object) properties47, (java.lang.Object) 10.0d, obj73);
        java.util.Collection<java.lang.Object> objCollection75 = properties47.values();
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties47);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = properties47.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + obj46 + "' != '" + true + "'", obj46, true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEntrySet77);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet24 = properties0.keySet();
        java.io.Writer writer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer25, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet24);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseDir("{=hi!}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long20 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.lang.String str6 = properties0.toString();
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream7, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{{}={}}" + "'", str6, "{{}={}}");
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        boolean boolean49 = properties44.containsValue((java.lang.Object) properties45);
        java.util.Collection<java.lang.Object> objCollection50 = properties44.values();
        java.lang.Object obj51 = properties27.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) objCollection50);
        boolean boolean53 = properties18.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection50, (java.lang.Object) 10.0d);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        int int58 = properties54.size();
        java.util.Properties properties59 = new java.util.Properties(properties54);
        java.util.Set<java.lang.String> strSet60 = properties54.stringPropertyNames();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties61.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isForceShutdownOnVmExit();
        java.lang.Object obj76 = properties61.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties68);
        boolean boolean77 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.Object obj78 = properties18.replace((java.lang.Object) properties54, (java.lang.Object) boolean77);
        java.lang.Object obj79 = properties15.remove((java.lang.Object) properties54);
        java.lang.String str81 = properties15.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties15.entrySet();
        boolean boolean83 = properties3.containsValue((java.lang.Object) objEntrySet82);
        java.io.PrintStream printStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.list(printStream84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.io.InputStream inputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.loadFromXML(inputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.lang.Object obj6 = properties0.clone();
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream7, "{tmlog=}", "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Enumeration<?> wildcardEnumeration18 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties0.entrySet();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.io.InputStream inputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(inputStream34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.lang.String str34 = properties10.getProperty("{=hi!}");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.lang.Object obj49 = properties35.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet48);
        java.util.Set<java.lang.Object> objSet50 = properties35.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setEnableLogging(true);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties63.elements();
        java.lang.Object obj69 = properties35.replace((java.lang.Object) true, (java.lang.Object) properties63);
        boolean boolean70 = properties10.equals((java.lang.Object) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties10.elements();
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream72, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objEnumeration71);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.lang.String str18 = properties0.getProperty("{}");
        java.lang.Object obj21 = properties0.setProperty("{{}={}}", "hi!");
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        boolean boolean34 = properties28.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties28.entrySet();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.lang.Object obj42 = properties36.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = properties28.remove((java.lang.Object) properties36, (java.lang.Object) atomikosProperties43);
        boolean boolean47 = properties22.equals((java.lang.Object) atomikosProperties43);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.lang.Object obj62 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = properties48.remove((java.lang.Object) properties56, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties67 = new java.util.Properties(properties56);
        java.lang.Object obj68 = properties56.clone();
        java.lang.Object obj69 = properties22.get(obj68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties22.keys();
        boolean boolean71 = properties0.contains((java.lang.Object) objEnumeration70);
        java.io.PrintWriter printWriter72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{=hi!}");
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer7, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEnumeration6);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties9.getService();
        boolean boolean14 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties9.asProperties();
        atomikosProperties9.setForceShutdownOnVmExit(true);
        atomikosProperties9.setMaxActives((int) (short) -1);
        boolean boolean20 = properties0.containsKey((java.lang.Object) (short) -1);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream21, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.io.PrintStream printStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties10.keys();
        java.lang.String str18 = properties10.getProperty("hi!");
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        int int24 = properties20.size();
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties20.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        boolean boolean32 = properties27.containsValue((java.lang.Object) properties28);
        java.util.Collection<java.lang.Object> objCollection33 = properties27.values();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.lang.Object obj41 = properties27.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet40);
        boolean boolean42 = properties10.replace((java.lang.Object) "hi!", (java.lang.Object) properties20, (java.lang.Object) "hi!");
        java.lang.String str44 = properties20.getProperty("{=hi!}");
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.lang.Object obj59 = properties45.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet58);
        java.util.Set<java.lang.Object> objSet60 = properties45.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        boolean boolean68 = atomikosProperties61.isEnableLogging();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setEnableLogging(true);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties73.elements();
        java.lang.Object obj79 = properties45.replace((java.lang.Object) true, (java.lang.Object) properties73);
        boolean boolean80 = properties20.equals((java.lang.Object) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties20.elements();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.io.PrintStream printStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printStream83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEnumeration81);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setMaxActives((int) (byte) 100);
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties0.entrySet();
        java.lang.Class<?> wildcardClass38 = objEntrySet37.getClass();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.Object obj59 = properties50.put((java.lang.Object) strSet57, (java.lang.Object) 0.0d);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        java.lang.Object obj77 = properties50.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) (short) 10);
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        boolean boolean81 = properties78.isEmpty();
        java.util.Set<java.lang.String> strSet82 = properties78.stringPropertyNames();
        java.lang.String str84 = properties78.getProperty("hi!");
        java.lang.Object obj85 = properties0.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties78);
        boolean boolean86 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj21 = properties0.clone();
        java.io.PrintWriter printWriter22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{=100.0}");
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        java.lang.Object obj32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj33 = properties6.get(obj32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.lang.Object obj7 = properties0.clone();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        int int12 = properties8.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        boolean boolean19 = properties8.containsKey((java.lang.Object) objSet18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        boolean boolean30 = properties8.remove((java.lang.Object) properties21, (java.lang.Object) 1.0f);
        java.lang.Object obj31 = properties21.clone();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.lang.Object obj39 = properties32.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.setTransactionManagerUniqueName("hi!");
        atomikosProperties40.setForceShutdownOnVmExit(false);
        atomikosProperties40.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str50 = atomikosProperties40.getTransactionManagerUniqueName();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        boolean boolean56 = properties51.containsValue((java.lang.Object) properties52);
        java.util.Collection<java.lang.Object> objCollection57 = properties51.values();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.lang.Object obj65 = properties51.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet64);
        java.util.Set<java.lang.Object> objSet66 = properties51.keySet();
        java.util.Set<java.lang.Object> objSet67 = properties51.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties51.entrySet();
        java.util.Set<java.lang.Object> objSet69 = properties51.keySet();
        java.lang.Object obj70 = properties32.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) properties51);
        boolean boolean71 = properties21.containsKey((java.lang.Object) properties51);
        int int72 = properties21.size();
        java.lang.Object obj73 = properties0.remove((java.lang.Object) int72);
        int int74 = properties0.size();
        java.io.PrintWriter printWriter75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.Object obj13 = properties7.put((java.lang.Object) 10, (java.lang.Object) false);
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printWriter14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration18 = properties9.propertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties19.entrySet();
        java.util.Set<java.lang.String> strSet26 = properties19.stringPropertyNames();
        boolean boolean27 = properties19.isEmpty();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        boolean boolean29 = properties7.containsKey((java.lang.Object) properties9);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean41 = properties35.isEmpty();
        java.lang.Object obj42 = properties30.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean41);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        boolean boolean46 = properties43.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties43.keys();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Enumeration<?> wildcardEnumeration59 = properties52.propertyNames();
        java.lang.Object obj61 = properties48.put((java.lang.Object) wildcardEnumeration59, (java.lang.Object) 10.0d);
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet66 = properties63.stringPropertyNames();
        boolean boolean67 = properties62.containsValue((java.lang.Object) properties63);
        java.util.Collection<java.lang.Object> objCollection68 = properties62.values();
        java.lang.Object obj69 = properties62.clone();
        boolean boolean70 = properties30.replace((java.lang.Object) properties43, (java.lang.Object) 10.0d, obj69);
        boolean boolean71 = properties7.containsValue((java.lang.Object) 10.0d);
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream72, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + obj42 + "' != '" + true + "'", obj42, true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(wildcardEnumeration59);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.lang.Object obj20 = properties13.setProperty("tmlog", "");
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties24.keys();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties27.entrySet();
        java.lang.Object obj35 = properties21.put((java.lang.Object) properties24, (java.lang.Object) properties27);
        java.lang.String str37 = properties24.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        java.lang.Object obj42 = properties13.put((java.lang.Object) properties24, (java.lang.Object) boolean41);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setSerialJtaTransactions(false);
        java.lang.String str51 = atomikosProperties44.getService();
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.util.Properties properties53 = atomikosProperties44.asProperties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj55 = properties12.getOrDefault((java.lang.Object) properties24, (java.lang.Object) properties53);
        java.lang.String str56 = properties53.toString();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str56, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Set<java.lang.Object> objSet40 = properties23.keySet();
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.save(outputStream41, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream10, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties29.elements();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.lang.Object obj51 = properties37.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.util.Properties properties56 = atomikosProperties52.asProperties();
        java.lang.Object obj59 = properties56.setProperty("hi!", "");
        java.util.Properties properties60 = new java.util.Properties(properties56);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection65 = properties64.values();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties64.keys();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties67.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties67.entrySet();
        java.lang.Object obj75 = properties61.put((java.lang.Object) properties64, (java.lang.Object) properties67);
        java.lang.Object obj76 = properties37.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setSerialJtaTransactions(false);
        java.lang.String str84 = atomikosProperties77.getService();
        java.util.Properties properties85 = atomikosProperties77.asProperties();
        java.lang.Object obj86 = properties29.replace((java.lang.Object) properties37, (java.lang.Object) atomikosProperties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        atomikosProperties87.setMaxTimeout((long) '#');
        boolean boolean94 = atomikosProperties87.isEnableLogging();
        atomikosProperties87.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj97 = properties0.replace((java.lang.Object) atomikosProperties77, (java.lang.Object) atomikosProperties87);
        atomikosProperties87.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        boolean boolean19 = properties0.isEmpty();
        java.io.Writer writer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer20, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.util.Set<java.lang.String> strSet28 = properties24.stringPropertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        java.lang.String str33 = properties29.toString();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.lang.Object obj41 = properties34.setProperty("tmlog", "");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj43 = properties15.replace((java.lang.Object) strSet28, (java.lang.Object) properties29);
        java.io.PrintStream printStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.list(printStream44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        boolean boolean8 = properties4.isEmpty();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.lang.String str12 = properties4.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration13 = properties4.propertyNames();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        boolean boolean22 = properties14.isEmpty();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        int int26 = properties24.size();
        java.util.Properties properties27 = new java.util.Properties(properties24);
        java.lang.Object obj28 = properties0.put((java.lang.Object) properties4, (java.lang.Object) properties27);
        java.io.InputStream inputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(inputStream29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties9.getService();
        boolean boolean14 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties9.asProperties();
        atomikosProperties9.setForceShutdownOnVmExit(true);
        atomikosProperties9.setMaxActives((int) (short) -1);
        boolean boolean20 = properties0.containsKey((java.lang.Object) (short) -1);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream21, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        boolean boolean67 = atomikosProperties55.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties14.elements();
        java.lang.Object obj69 = properties14.setProperty("{hi!=[]}", "");
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties14.keys();
        java.io.PrintStream printStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printStream71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream39, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.lang.String str20 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        boolean boolean28 = atomikosProperties21.isEnableLogging();
        atomikosProperties21.setMaxActives((int) '#');
        atomikosProperties21.setSerialJtaTransactions(true);
        boolean boolean33 = atomikosProperties21.isThreadedTwoPhaseCommit();
        atomikosProperties21.setCheckpointInterval(300000L);
        long long36 = atomikosProperties21.getCheckpointInterval();
        java.lang.Object obj37 = properties0.get((java.lang.Object) long36);
        boolean boolean38 = properties0.isEmpty();
        java.io.InputStream inputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.io.PrintWriter printWriter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objSet5);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.lang.String str9 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.Class<?> wildcardClass13 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        java.lang.String str28 = atomikosProperties22.getLogBaseName();
        java.lang.String str29 = atomikosProperties22.getLogBaseName();
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        long long31 = atomikosProperties22.getMaxTimeout();
        java.lang.String str32 = atomikosProperties22.getLogBaseName();
        int int33 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        int int37 = properties0.size();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties38.keys();
        properties38.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setTransactionManagerUniqueName("hi!");
        java.lang.String str48 = atomikosProperties42.getLogBaseName();
        java.lang.String str49 = atomikosProperties42.getLogBaseName();
        java.lang.Object obj50 = properties38.get((java.lang.Object) str49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        int int59 = atomikosProperties51.getMaxActives();
        boolean boolean60 = atomikosProperties51.isThreadedTwoPhaseCommit();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = properties0.remove(obj50, (java.lang.Object) boolean60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str19 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setMaxActives(50);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.lang.String str23 = atomikosProperties15.getService();
        atomikosProperties15.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Properties properties41 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties13.keys();
        java.lang.Object obj43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = properties13.containsKey(obj43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isEnableLogging();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setCheckpointInterval(0L);
        java.lang.String str62 = atomikosProperties50.getService();
        atomikosProperties50.setForceShutdownOnVmExit(false);
        atomikosProperties50.setService("{hi!=[]}");
        boolean boolean67 = properties35.containsKey((java.lang.Object) "{hi!=[]}");
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.storeToXML(outputStream68, "{tmlog=}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseDir("{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.lang.Object obj10 = properties0.remove((java.lang.Object) properties7);
        int int11 = properties0.size();
        java.lang.Object obj12 = properties0.clone();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream13, "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties12.containsKey((java.lang.Object) objSet22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties12.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        boolean boolean34 = properties12.remove((java.lang.Object) properties25, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration35 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        java.util.Set<java.lang.String> strSet44 = properties43.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet45 = properties43.keySet();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.Object obj67 = properties25.put((java.lang.Object) objSet45, (java.lang.Object) false);
        java.lang.Object obj68 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties25);
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.storeToXML(outputStream69, "{{}={}}", "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration35);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.lang.Object obj26 = properties12.put((java.lang.Object) properties15, (java.lang.Object) properties18);
        java.lang.Object obj27 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setCheckpointInterval((long) 100);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean40 = properties15.equals((java.lang.Object) atomikosProperties28);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.elements();
        boolean boolean47 = properties15.containsKey((java.lang.Object) properties41);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.lang.Object obj62 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = properties48.remove((java.lang.Object) properties56, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties67 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.Object obj69 = properties67.clone();
        java.lang.Object obj70 = properties11.getOrDefault((java.lang.Object) properties41, (java.lang.Object) properties67);
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        boolean boolean75 = properties71.containsValue((java.lang.Object) "hi!");
        java.lang.String str77 = properties71.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration78 = properties71.propertyNames();
        java.lang.String str80 = properties71.getProperty("{{}={}}");
        java.lang.String str81 = properties71.toString();
        boolean boolean82 = properties67.containsKey((java.lang.Object) str81);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(wildcardEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{}" + "'", str81, "{}");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        java.lang.String str28 = atomikosProperties22.getLogBaseName();
        java.lang.String str29 = atomikosProperties22.getLogBaseName();
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        long long31 = atomikosProperties22.getMaxTimeout();
        java.lang.String str32 = atomikosProperties22.getLogBaseName();
        int int33 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.lang.Object obj37 = properties0.clone();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{{}=tmlog}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{{}=tmlog}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{{}=tmlog}");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.util.Enumeration<?> wildcardEnumeration36 = properties29.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties29.entrySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties38.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setMaxTimeout((long) '#');
        boolean boolean52 = atomikosProperties45.isForceShutdownOnVmExit();
        java.lang.Object obj53 = properties38.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties45);
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties56 = atomikosProperties45.asProperties();
        boolean boolean57 = properties29.containsValue((java.lang.Object) atomikosProperties45);
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection59 = properties58.values();
        java.util.Collection<java.lang.Object> objCollection60 = properties58.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = atomikosProperties61.isThreadedTwoPhaseCommit();
        atomikosProperties61.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        boolean boolean70 = atomikosProperties67.isSerialJtaTransactions();
        atomikosProperties67.setTransactionManagerUniqueName("hi!");
        java.lang.String str73 = atomikosProperties67.getLogBaseName();
        java.lang.String str74 = atomikosProperties67.getLogBaseName();
        boolean boolean75 = atomikosProperties67.isForceShutdownOnVmExit();
        long long76 = atomikosProperties67.getMaxTimeout();
        java.lang.String str77 = atomikosProperties67.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        boolean boolean85 = properties58.replace((java.lang.Object) atomikosProperties61, (java.lang.Object) str77, (java.lang.Object) true);
        java.util.Properties properties86 = atomikosProperties61.asProperties();
        atomikosProperties61.setMaxTimeout(500L);
        java.lang.Object obj89 = properties0.getOrDefault((java.lang.Object) boolean57, (java.lang.Object) atomikosProperties61);
        java.io.PrintStream printStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertNotNull(obj89);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        int int32 = atomikosProperties28.getMaxActives();
        atomikosProperties28.setEnableLogging(false);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean41 = properties35.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        boolean boolean46 = properties43.isEmpty();
        java.lang.Object obj49 = properties43.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = properties35.remove((java.lang.Object) properties43, (java.lang.Object) atomikosProperties50);
        java.lang.String str55 = properties35.getProperty("tmlog");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = properties27.remove((java.lang.Object) false, (java.lang.Object) str55);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        int int11 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.Object obj18 = properties0.clone();
        java.lang.String str20 = properties0.getProperty("{=hi!}");
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream21, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.io.PrintStream printStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.list(printStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setMaxActives((int) (byte) 100);
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        java.io.InputStream inputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        boolean boolean29 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) long28);
        properties0.clear();
        java.io.PrintStream printStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        int int7 = properties0.size();
        java.io.PrintWriter printWriter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.io.Reader reader8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(reader8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties34.entrySet();
        java.lang.Object obj41 = properties0.put((java.lang.Object) atomikosProperties30, (java.lang.Object) properties34);
        java.lang.String str44 = properties0.getProperty("", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties28.keys();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties31.entrySet();
        java.lang.Object obj39 = properties25.put((java.lang.Object) properties28, (java.lang.Object) properties31);
        java.lang.Object obj40 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isEnableLogging();
        atomikosProperties41.setCheckpointInterval((long) 100);
        atomikosProperties41.setSerialJtaTransactions(true);
        boolean boolean53 = properties28.equals((java.lang.Object) atomikosProperties41);
        java.lang.String str54 = atomikosProperties41.getTransactionManagerUniqueName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = properties0.contains((java.lang.Object) str54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties46.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) properties39, (java.lang.Object) boolean62);
        java.lang.Object obj64 = properties0.remove((java.lang.Object) properties39);
        java.lang.String str66 = properties0.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties0.elements();
        java.lang.String str69 = properties0.toString();
        java.io.Writer writer70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer70, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{}" + "'", str69, "{}");
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{=hi!}");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setCheckpointInterval(300000L);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration23 = properties13.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        java.util.Set<java.lang.String> strSet32 = properties31.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet33 = properties31.keySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean40 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        java.lang.Object obj48 = properties42.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = properties34.remove((java.lang.Object) properties42, (java.lang.Object) atomikosProperties49);
        atomikosProperties49.setSerialJtaTransactions(false);
        java.lang.Object obj55 = properties13.put((java.lang.Object) objSet33, (java.lang.Object) false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration56 = properties13.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$SynchronizedSet cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties61);
        boolean boolean70 = atomikosProperties61.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.lang.String str41 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj49 = properties19.get((java.lang.Object) atomikosProperties42);
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.store(outputStream50, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        int int28 = atomikosProperties20.getMaxActives();
        atomikosProperties20.setService("hi!");
        java.lang.Object obj31 = properties16.get((java.lang.Object) atomikosProperties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        java.util.Properties properties51 = new java.util.Properties(properties40);
        int int52 = properties51.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str58 = atomikosProperties54.getService();
        boolean boolean59 = atomikosProperties54.isEnableLogging();
        java.lang.String str60 = atomikosProperties54.getTransactionManagerUniqueName();
        boolean boolean61 = properties51.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties62.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties62.entrySet();
        java.lang.Object obj69 = properties51.remove((java.lang.Object) objEntrySet68);
        boolean boolean70 = properties51.isEmpty();
        java.lang.String str71 = properties51.toString();
        properties51.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties51.elements();
        java.lang.Object obj74 = properties0.replace((java.lang.Object) properties16, (java.lang.Object) properties51);
        java.io.Writer writer75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.store(writer75, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        boolean boolean6 = properties2.containsValue((java.lang.Object) "hi!");
        java.lang.String str8 = properties2.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties2.propertyNames();
        java.lang.String str11 = properties2.getProperty("{{}={}}");
        java.lang.String str12 = properties2.toString();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isForceShutdownOnVmExit();
        int int27 = atomikosProperties19.getMaxActives();
        java.lang.Object obj28 = properties13.remove((java.lang.Object) int27);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties13.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Enumeration<?> wildcardEnumeration41 = properties34.propertyNames();
        java.lang.Object obj43 = properties30.put((java.lang.Object) wildcardEnumeration41, (java.lang.Object) 10.0d);
        java.lang.Object obj44 = properties2.put((java.lang.Object) objEntrySet29, (java.lang.Object) properties30);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        properties45.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties45.keys();
        boolean boolean50 = properties30.containsValue((java.lang.Object) objEnumeration49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.util.Properties properties55 = atomikosProperties51.asProperties();
        java.lang.Object obj58 = properties55.setProperty("hi!", "");
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties55.elements();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        java.util.Set<java.lang.Object> objSet76 = properties60.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj82 = properties55.putIfAbsent((java.lang.Object) objSet76, (java.lang.Object) atomikosProperties77);
        java.lang.Object obj83 = properties1.put((java.lang.Object) properties30, (java.lang.Object) objSet76);
        java.io.OutputStream outputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.storeToXML(outputStream84, "{=hi!}", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.io.PrintWriter printWriter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printWriter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream8, "{=hi!}", "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties5.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties5.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties13.getService();
        boolean boolean18 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setCheckpointInterval((long) (byte) 100);
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        boolean boolean22 = properties5.contains((java.lang.Object) atomikosProperties13);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream24, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        long long29 = atomikosProperties3.getCheckpointInterval();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        atomikosProperties42.setService("{}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.lang.Object obj36 = properties0.put((java.lang.Object) false, (java.lang.Object) boolean35);
        java.lang.Object obj37 = properties0.clone();
        java.lang.Object obj38 = properties0.clone();
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = properties0.contains(obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{hi!=, false=true}");
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties0.entrySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.lang.Object obj30 = properties16.put((java.lang.Object) properties19, (java.lang.Object) properties22);
        java.lang.String str32 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        long long40 = atomikosProperties33.getMaxTimeout();
        boolean boolean41 = properties19.containsValue((java.lang.Object) atomikosProperties33);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Set<java.lang.String> strSet43 = properties19.stringPropertyNames();
        boolean boolean44 = properties10.contains((java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties19.elements();
        boolean boolean46 = properties0.equals((java.lang.Object) properties19);
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.save(outputStream47, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        java.util.Enumeration<?> wildcardEnumeration56 = properties33.propertyNames();
        java.io.InputStream inputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.load(inputStream57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        int int36 = properties32.size();
        java.util.Properties properties37 = new java.util.Properties(properties32);
        boolean boolean38 = properties37.isEmpty();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean50 = properties39.containsKey((java.lang.Object) objSet49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties39.keys();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties52.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties52.entrySet();
        boolean boolean61 = properties39.remove((java.lang.Object) properties52, (java.lang.Object) 1.0f);
        boolean boolean62 = properties37.contains((java.lang.Object) properties52);
        java.util.Properties properties63 = new java.util.Properties(properties52);
        boolean boolean64 = properties6.equals((java.lang.Object) properties63);
        java.io.InputStream inputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties63.loadFromXML(inputStream65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.io.PrintStream printStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.list(printStream40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.lang.Object obj20 = properties13.setProperty("tmlog", "");
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties24.keys();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties27.entrySet();
        java.lang.Object obj35 = properties21.put((java.lang.Object) properties24, (java.lang.Object) properties27);
        java.lang.String str37 = properties24.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        java.lang.Object obj42 = properties13.put((java.lang.Object) properties24, (java.lang.Object) boolean41);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setSerialJtaTransactions(false);
        java.lang.String str51 = atomikosProperties44.getService();
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.util.Properties properties53 = atomikosProperties44.asProperties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj55 = properties12.getOrDefault((java.lang.Object) properties24, (java.lang.Object) properties53);
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.load(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.lang.Object obj10 = properties4.clone();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream11, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.io.InputStream inputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        boolean boolean56 = properties50.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties50.entrySet();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = properties50.remove((java.lang.Object) properties58, (java.lang.Object) atomikosProperties65);
        java.util.Properties properties69 = new java.util.Properties(properties58);
        java.lang.Object obj70 = properties58.clone();
        java.lang.Object obj71 = properties0.remove(obj70);
        java.io.InputStream inputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{=hi!}");
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.util.Set<java.lang.String> strSet28 = properties24.stringPropertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        java.lang.String str33 = properties29.toString();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.lang.Object obj41 = properties34.setProperty("tmlog", "");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj43 = properties15.replace((java.lang.Object) strSet28, (java.lang.Object) properties29);
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.storeToXML(outputStream44, "{}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream26, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties10.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Set<java.lang.String> strSet17 = properties10.stringPropertyNames();
        boolean boolean18 = properties10.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.io.Reader reader20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(reader20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setTransactionManagerUniqueName("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        java.lang.String str62 = properties36.getProperty("{{}={}}");
        java.io.InputStream inputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.loadFromXML(inputStream63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        long long5 = atomikosProperties0.getMaxTimeout();
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.io.InputStream inputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties0.getService();
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseDir("");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.lang.String str12 = properties0.getProperty("", "{}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setTransactionManagerUniqueName("hi!");
        java.lang.String str28 = atomikosProperties22.getLogBaseName();
        java.lang.String str29 = atomikosProperties22.getLogBaseName();
        boolean boolean30 = atomikosProperties22.isSerialJtaTransactions();
        long long31 = atomikosProperties22.getMaxTimeout();
        java.lang.String str32 = atomikosProperties22.getLogBaseName();
        int int33 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        boolean boolean36 = properties0.contains((java.lang.Object) false);
        int int37 = properties0.size();
        java.io.OutputStream outputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream38, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.io.Writer writer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(writer34, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties72, (java.lang.Object) 1);
        int int80 = properties72.size();
        properties72.clear();
        java.io.InputStream inputStream82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.load(inputStream82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + true + "'", obj79, true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        java.util.Set<java.lang.String> strSet81 = properties74.stringPropertyNames();
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties63, (java.lang.Object) properties74);
        java.lang.Object obj83 = properties74.clone();
        java.lang.String str86 = properties74.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{=hi!}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{=hi!}" + "'", str86, "{=hi!}");
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.io.PrintStream printStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.lang.Object obj41 = properties27.put((java.lang.Object) properties30, (java.lang.Object) properties33);
        java.lang.Object obj42 = properties30.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setCheckpointInterval((long) 100);
        atomikosProperties43.setSerialJtaTransactions(true);
        boolean boolean55 = properties30.equals((java.lang.Object) atomikosProperties43);
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Collection<java.lang.Object> objCollection58 = properties56.values();
        int int59 = properties56.size();
        java.lang.String str62 = properties56.getProperty("{tmlog=}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 9 + "'", int59 == 9);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str62, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.io.OutputStream outputStream3 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream3, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setService("{hi!=[]}");
        atomikosProperties0.setLogBaseDir("tmlog");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean12 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties9.elements();
        java.lang.Object obj16 = properties9.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties9.entrySet();
        boolean boolean18 = properties8.contains((java.lang.Object) objEntrySet17);
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream19, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.io.OutputStream outputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties43.save(outputStream64, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        int int19 = properties0.size();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties20.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties20.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        boolean boolean49 = properties44.containsValue((java.lang.Object) properties45);
        java.util.Collection<java.lang.Object> objCollection50 = properties44.values();
        java.lang.Object obj51 = properties27.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) objCollection50);
        java.lang.Object obj52 = properties0.putIfAbsent((java.lang.Object) properties20, (java.lang.Object) objCollection50);
        java.io.OutputStream outputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream53, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.lang.Object obj41 = properties27.put((java.lang.Object) properties30, (java.lang.Object) properties33);
        java.lang.Object obj42 = properties30.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setCheckpointInterval((long) 100);
        atomikosProperties43.setSerialJtaTransactions(true);
        boolean boolean55 = properties30.equals((java.lang.Object) atomikosProperties43);
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.io.PrintWriter printWriter58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties56.list(printWriter58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.io.OutputStream outputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream66, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.setThreadedTwoPhaseCommit(false);
        atomikosProperties47.setForceShutdownOnVmExit(false);
        int int55 = atomikosProperties47.getMaxActives();
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties47.setEnableLogging(true);
        boolean boolean60 = properties41.containsValue((java.lang.Object) true);
        java.io.PrintStream printStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.list(printStream61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        int int8 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        java.util.Set<java.lang.String> strSet17 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxTimeout((long) '#');
        boolean boolean25 = atomikosProperties18.isEnableLogging();
        int int26 = atomikosProperties18.getMaxActives();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.lang.Object obj33 = properties27.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet34 = properties27.stringPropertyNames();
        java.lang.Object obj35 = properties16.putIfAbsent((java.lang.Object) atomikosProperties18, (java.lang.Object) strSet34);
        boolean boolean37 = properties16.containsKey((java.lang.Object) 35);
        java.lang.Object obj38 = properties0.get((java.lang.Object) boolean37);
        java.io.Reader reader39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream9, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.lang.Object obj22 = properties8.put((java.lang.Object) properties11, (java.lang.Object) properties14);
        java.lang.String str24 = properties11.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        long long32 = atomikosProperties25.getMaxTimeout();
        boolean boolean33 = properties11.containsValue((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties11.elements();
        boolean boolean35 = properties0.contains((java.lang.Object) objEnumeration34);
        java.util.Properties properties36 = new java.util.Properties(properties0);
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        int int41 = properties37.size();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties37.containsKey((java.lang.Object) objSet47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties37.keys();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties50.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties50.entrySet();
        boolean boolean59 = properties37.remove((java.lang.Object) properties50, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration60 = properties50.propertyNames();
        java.util.Set<java.lang.Object> objSet61 = properties50.keySet();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties62.keys();
        java.lang.String str70 = properties62.getProperty("hi!");
        java.lang.String str72 = properties62.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setEnableLogging(false);
        boolean boolean80 = properties62.containsKey((java.lang.Object) atomikosProperties73);
        java.lang.Object obj83 = properties62.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setSerialJtaTransactions(false);
        boolean boolean87 = atomikosProperties84.isThreadedTwoPhaseCommit();
        atomikosProperties84.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties90 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties90.setSerialJtaTransactions(false);
        atomikosProperties90.setThreadedTwoPhaseCommit(true);
        atomikosProperties90.setMaxTimeout((long) '#');
        boolean boolean97 = atomikosProperties90.isEnableLogging();
        java.lang.Object obj98 = properties62.put((java.lang.Object) false, (java.lang.Object) boolean97);
        boolean boolean99 = properties36.remove((java.lang.Object) objSet61, (java.lang.Object) false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        java.lang.String str29 = properties27.getProperty("{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 35 + "'", int14 == 35);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str16 = properties14.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isEnableLogging();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setEnableLogging(true);
        java.lang.String str29 = atomikosProperties17.getTransactionManagerUniqueName();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.String str32 = atomikosProperties17.getService();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = properties14.containsValue((java.lang.Object) str32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Properties properties41 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties13.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setService("{=hi!}");
        atomikosProperties43.setLogBaseDir("");
        atomikosProperties43.setEnableLogging(true);
        java.lang.Object obj56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = properties13.putIfAbsent((java.lang.Object) true, obj56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int7 = atomikosProperties0.getMaxActives();
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.String str55 = properties0.getProperty("tmlog");
        java.io.OutputStream outputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream56, "tmlog", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.String str46 = properties0.getProperty("");
        java.io.PrintStream printStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        boolean boolean64 = properties13.isEmpty();
        java.io.OutputStream outputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream65, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 35L + "'", long8 == 35L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        java.lang.String str25 = atomikosProperties7.getService();
        boolean boolean26 = atomikosProperties7.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.setThreadedTwoPhaseCommit(false);
        atomikosProperties47.setForceShutdownOnVmExit(false);
        int int55 = atomikosProperties47.getMaxActives();
        atomikosProperties47.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties47.setEnableLogging(true);
        boolean boolean60 = properties41.containsValue((java.lang.Object) true);
        int int61 = properties41.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 10 + "'", int61 == 10);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.lang.Object obj42 = properties18.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) objCollection41);
        boolean boolean44 = properties9.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection41, (java.lang.Object) 10.0d);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties(properties45);
        java.util.Set<java.lang.String> strSet51 = properties45.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties52.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxTimeout((long) '#');
        boolean boolean66 = atomikosProperties59.isForceShutdownOnVmExit();
        java.lang.Object obj67 = properties52.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties59);
        boolean boolean68 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.Object obj69 = properties9.replace((java.lang.Object) properties45, (java.lang.Object) boolean68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties45.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        boolean boolean82 = properties79.isEmpty();
        java.lang.Object obj85 = properties79.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        boolean boolean89 = properties71.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties86);
        java.util.Properties properties90 = new java.util.Properties(properties79);
        java.lang.Object obj91 = properties0.replace((java.lang.Object) objEntrySet70, (java.lang.Object) properties90);
        boolean boolean92 = properties0.isEmpty();
        java.lang.String str95 = properties0.getProperty("{=hi!}", "hi!");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        boolean boolean19 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setService("{=hi!}");
        java.lang.String str22 = atomikosProperties15.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{=hi!}" + "'", str22, "{=hi!}");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet7 = properties6.stringPropertyNames();
        java.io.Writer writer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.store(writer8, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        int int11 = properties10.size();
        java.io.PrintStream printStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.list(printStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 9 + "'", int11 == 9);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Set<java.lang.String> strSet25 = properties8.stringPropertyNames();
        java.lang.String str26 = properties8.toString();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream27, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{hi!=[]}" + "'", str26, "{hi!=[]}");
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.lang.Object obj41 = properties27.put((java.lang.Object) properties30, (java.lang.Object) properties33);
        java.lang.Object obj42 = properties30.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setCheckpointInterval((long) 100);
        atomikosProperties43.setSerialJtaTransactions(true);
        boolean boolean55 = properties30.equals((java.lang.Object) atomikosProperties43);
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Collection<java.lang.Object> objCollection58 = properties56.values();
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties56.storeToXML(outputStream59, "{{}={}}", "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNotNull(objCollection58);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.lang.Object obj25 = properties15.remove((java.lang.Object) properties22);
        java.lang.Object obj26 = properties8.get((java.lang.Object) properties22);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties40 = atomikosProperties33.asProperties();
        int int41 = atomikosProperties33.getMaxActives();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean49 = properties42.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj50 = properties27.put((java.lang.Object) atomikosProperties33, (java.lang.Object) properties42);
        boolean boolean51 = properties22.containsKey((java.lang.Object) properties42);
        java.util.Set<java.lang.String> strSet52 = properties42.stringPropertyNames();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties53.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties53.entrySet();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties61.keys();
        java.lang.String str69 = properties61.getProperty("hi!");
        java.lang.String str71 = properties61.getProperty("");
        java.lang.Object obj73 = properties53.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj74 = properties7.replace((java.lang.Object) strSet52, (java.lang.Object) properties53);
        java.io.OutputStream outputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(outputStream75, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        boolean boolean38 = properties19.isEmpty();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet69 = properties66.stringPropertyNames();
        boolean boolean70 = properties65.containsValue((java.lang.Object) properties66);
        java.util.Collection<java.lang.Object> objCollection71 = properties65.values();
        java.lang.Object obj72 = properties48.replace((java.lang.Object) atomikosProperties55, (java.lang.Object) objCollection71);
        boolean boolean74 = properties39.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection71, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties39.keys();
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        boolean boolean79 = properties76.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties76.elements();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        boolean boolean84 = properties81.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties81.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties81.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        atomikosProperties87.setMaxTimeout((long) '#');
        boolean boolean94 = atomikosProperties87.isForceShutdownOnVmExit();
        int int95 = atomikosProperties87.getMaxActives();
        java.lang.Object obj96 = properties81.remove((java.lang.Object) int95);
        boolean boolean97 = properties19.replace((java.lang.Object) objEnumeration75, (java.lang.Object) objEnumeration80, (java.lang.Object) properties81);
        java.util.Enumeration<?> wildcardEnumeration98 = properties19.propertyNames();
        java.lang.Class<?> wildcardClass99 = properties19.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 50 + "'", int95 == 50);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties28.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties28.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties40.containsKey((java.lang.Object) objSet50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties40.keys();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties53.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties53.entrySet();
        boolean boolean62 = properties40.remove((java.lang.Object) properties53, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration63 = properties53.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties71 = atomikosProperties64.asProperties();
        java.util.Set<java.lang.String> strSet72 = properties71.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet73 = properties71.keySet();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        boolean boolean80 = properties74.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties74.entrySet();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        boolean boolean85 = properties82.isEmpty();
        java.lang.Object obj88 = properties82.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties89.setSerialJtaTransactions(false);
        boolean boolean92 = properties74.remove((java.lang.Object) properties82, (java.lang.Object) atomikosProperties89);
        atomikosProperties89.setSerialJtaTransactions(false);
        java.lang.Object obj95 = properties53.put((java.lang.Object) objSet73, (java.lang.Object) false);
        java.lang.Object obj96 = properties28.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties53);
        boolean boolean97 = properties0.equals((java.lang.Object) atomikosProperties36);
        java.util.Enumeration<java.lang.Object> objEnumeration98 = properties0.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(objEnumeration98);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.lang.Object obj17 = properties3.put((java.lang.Object) properties6, (java.lang.Object) properties9);
        java.lang.String str19 = properties6.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties20.getMaxTimeout();
        boolean boolean28 = properties6.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties6.elements();
        java.util.Set<java.lang.String> strSet30 = properties6.stringPropertyNames();
        java.lang.Object obj31 = properties0.get((java.lang.Object) properties6);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        int int36 = properties32.size();
        java.util.Properties properties37 = new java.util.Properties(properties32);
        boolean boolean38 = properties37.isEmpty();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean50 = properties39.containsKey((java.lang.Object) objSet49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties39.keys();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties52.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties52.entrySet();
        boolean boolean61 = properties39.remove((java.lang.Object) properties52, (java.lang.Object) 1.0f);
        boolean boolean62 = properties37.contains((java.lang.Object) properties52);
        java.util.Properties properties63 = new java.util.Properties(properties52);
        boolean boolean64 = properties6.equals((java.lang.Object) properties63);
        java.io.Reader reader65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.load(reader65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.io.Reader reader23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(reader23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties21.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        boolean boolean32 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = properties29.containsValue((java.lang.Object) atomikosProperties33);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        java.util.Set<java.lang.String> strSet42 = properties35.stringPropertyNames();
        java.lang.Object obj43 = properties21.getOrDefault((java.lang.Object) properties29, (java.lang.Object) properties35);
        boolean boolean44 = properties21.isEmpty();
        java.util.Collection<java.lang.Object> objCollection45 = properties21.values();
        java.lang.Object obj46 = properties19.get((java.lang.Object) objCollection45);
        java.io.InputStream inputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(inputStream47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setEnableLogging(false);
        boolean boolean43 = atomikosProperties36.isSerialJtaTransactions();
        int int44 = atomikosProperties36.getMaxActives();
        boolean boolean45 = atomikosProperties36.isEnableLogging();
        long long46 = atomikosProperties36.getCheckpointInterval();
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        atomikosProperties36.setForceShutdownOnVmExit(false);
        boolean boolean50 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.Object obj51 = properties9.put((java.lang.Object) (byte) -1, (java.lang.Object) boolean50);
        java.io.PrintWriter printWriter52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printWriter52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        java.lang.Object obj36 = properties15.setProperty("", "{{}={}}");
        java.lang.Object obj37 = properties0.remove((java.lang.Object) "{{}={}}");
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        java.lang.Object obj47 = properties38.put((java.lang.Object) strSet45, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        boolean boolean55 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setEnableLogging(true);
        atomikosProperties48.setLogBaseName("{}");
        long long62 = atomikosProperties48.getDefaultJtaTimeout();
        boolean boolean63 = properties38.containsKey((java.lang.Object) long62);
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties64.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setMaxTimeout((long) '#');
        boolean boolean78 = atomikosProperties71.isForceShutdownOnVmExit();
        java.lang.Object obj79 = properties64.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties71);
        boolean boolean80 = atomikosProperties71.isSerialJtaTransactions();
        java.lang.Object obj81 = properties38.get((java.lang.Object) boolean80);
        java.util.Properties properties82 = new java.util.Properties(properties38);
        java.util.Properties properties83 = new java.util.Properties();
        boolean boolean85 = properties83.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        atomikosProperties86.setThreadedTwoPhaseCommit(true);
        atomikosProperties86.setSerialJtaTransactions(false);
        java.lang.String str93 = atomikosProperties86.getService();
        boolean boolean94 = properties83.containsKey((java.lang.Object) atomikosProperties86);
        java.lang.String str95 = atomikosProperties86.getTransactionManagerUniqueName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = properties0.remove((java.lang.Object) properties38, (java.lang.Object) str95);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = properties0.containsKey(obj1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        boolean boolean29 = properties26.isEmpty();
        java.lang.Object obj32 = properties26.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = properties18.remove((java.lang.Object) properties26, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties37 = new java.util.Properties(properties26);
        int int38 = properties37.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        java.lang.String str44 = atomikosProperties40.getService();
        boolean boolean45 = atomikosProperties40.isEnableLogging();
        java.lang.String str46 = atomikosProperties40.getTransactionManagerUniqueName();
        boolean boolean47 = properties37.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        java.lang.String str55 = atomikosProperties48.getLogBaseDir();
        boolean boolean56 = atomikosProperties48.isThreadedTwoPhaseCommit();
        java.lang.Object obj57 = properties37.get((java.lang.Object) boolean56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setMaxTimeout((long) '#');
        long long65 = atomikosProperties58.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties58.getTransactionManagerUniqueName();
        java.lang.Object obj67 = properties0.getOrDefault((java.lang.Object) properties37, (java.lang.Object) str66);
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream68, "{=hi!}", "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 500L + "'", long65 == 500L);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.lang.Object obj42 = properties18.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) objCollection41);
        boolean boolean44 = properties9.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection41, (java.lang.Object) 10.0d);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties(properties45);
        java.util.Set<java.lang.String> strSet51 = properties45.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties52.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxTimeout((long) '#');
        boolean boolean66 = atomikosProperties59.isForceShutdownOnVmExit();
        java.lang.Object obj67 = properties52.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties59);
        boolean boolean68 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.Object obj69 = properties9.replace((java.lang.Object) properties45, (java.lang.Object) boolean68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties45.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        boolean boolean82 = properties79.isEmpty();
        java.lang.Object obj85 = properties79.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        boolean boolean89 = properties71.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties86);
        java.util.Properties properties90 = new java.util.Properties(properties79);
        java.lang.Object obj91 = properties0.replace((java.lang.Object) objEntrySet70, (java.lang.Object) properties90);
        boolean boolean92 = properties0.isEmpty();
        java.lang.Object obj93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj94 = properties0.get(obj93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties19.keys();
        java.lang.String str41 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj49 = properties19.get((java.lang.Object) atomikosProperties42);
        java.io.PrintStream printStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long20 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        int int19 = properties0.size();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties20.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties20.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        boolean boolean49 = properties44.containsValue((java.lang.Object) properties45);
        java.util.Collection<java.lang.Object> objCollection50 = properties44.values();
        java.lang.Object obj51 = properties27.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) objCollection50);
        java.lang.Object obj52 = properties0.putIfAbsent((java.lang.Object) properties20, (java.lang.Object) objCollection50);
        java.util.Collection<java.lang.Object> objCollection53 = properties20.values();
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.storeToXML(outputStream54, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        boolean boolean8 = properties4.isEmpty();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.lang.String str12 = properties4.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration13 = properties4.propertyNames();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        boolean boolean22 = properties14.isEmpty();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        int int26 = properties24.size();
        java.util.Properties properties27 = new java.util.Properties(properties24);
        java.lang.Object obj28 = properties0.put((java.lang.Object) properties4, (java.lang.Object) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxTimeout((long) '#');
        long long36 = atomikosProperties29.getCheckpointInterval();
        java.lang.String str37 = atomikosProperties29.getLogBaseDir();
        java.lang.String str38 = atomikosProperties29.getTransactionManagerUniqueName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = properties4.remove((java.lang.Object) str38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 500L + "'", long36 == 500L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        boolean boolean13 = properties11.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        java.lang.String str21 = atomikosProperties14.getService();
        boolean boolean22 = properties11.containsKey((java.lang.Object) atomikosProperties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 100);
        atomikosProperties23.setForceShutdownOnVmExit(false);
        boolean boolean35 = properties11.containsValue((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setService("{=hi!}");
        java.util.Properties properties38 = atomikosProperties23.asProperties();
        java.lang.Object obj39 = properties0.get((java.lang.Object) atomikosProperties23);
        int int40 = atomikosProperties23.getMaxActives();
        long long41 = atomikosProperties23.getCheckpointInterval();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 100L + "'", long41 == 100L);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties10.getService();
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setLogBaseDir("{}");
        boolean boolean19 = properties8.containsKey((java.lang.Object) atomikosProperties10);
        java.lang.String str20 = atomikosProperties10.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        java.lang.String str25 = atomikosProperties19.getTransactionManagerUniqueName();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        int int47 = properties45.size();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj49 = properties45.get((java.lang.Object) properties48);
        java.lang.Object obj50 = properties0.getOrDefault((java.lang.Object) atomikosProperties19, (java.lang.Object) properties48);
        boolean boolean51 = atomikosProperties19.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.save(outputStream40, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        properties0.clear();
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer18, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        java.lang.String str13 = atomikosProperties0.getService();
        atomikosProperties0.setTransactionManagerUniqueName("{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.io.PrintStream printStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection15 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        boolean boolean22 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean25 = properties0.remove((java.lang.Object) objCollection15, (java.lang.Object) atomikosProperties16);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet39);
        java.util.Set<java.lang.Object> objSet41 = properties26.keySet();
        java.util.Set<java.lang.Object> objSet42 = properties26.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties26.entrySet();
        boolean boolean44 = properties0.contains((java.lang.Object) properties26);
        java.lang.Object obj45 = null;
        java.lang.Object obj46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj47 = properties26.put(obj45, obj46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet16 = properties13.stringPropertyNames();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Enumeration<?> wildcardEnumeration24 = properties17.propertyNames();
        java.lang.Object obj26 = properties13.put((java.lang.Object) wildcardEnumeration24, (java.lang.Object) 10.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties27.entrySet();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        boolean boolean38 = properties35.isEmpty();
        java.lang.Object obj41 = properties35.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = properties27.remove((java.lang.Object) properties35, (java.lang.Object) atomikosProperties42);
        java.util.Properties properties46 = new java.util.Properties(properties35);
        int int47 = properties46.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = atomikosProperties49.isSerialJtaTransactions();
        java.lang.String str53 = atomikosProperties49.getService();
        boolean boolean54 = atomikosProperties49.isEnableLogging();
        java.lang.String str55 = atomikosProperties49.getTransactionManagerUniqueName();
        boolean boolean56 = properties46.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setEnableLogging(false);
        boolean boolean64 = atomikosProperties57.isSerialJtaTransactions();
        int int65 = atomikosProperties57.getMaxActives();
        boolean boolean66 = atomikosProperties57.isSerialJtaTransactions();
        boolean boolean67 = properties13.remove((java.lang.Object) properties46, (java.lang.Object) boolean66);
        boolean boolean68 = properties0.equals((java.lang.Object) boolean67);
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream69, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        boolean boolean10 = properties7.isEmpty();
        java.util.Set<java.lang.String> strSet11 = properties7.stringPropertyNames();
        boolean boolean12 = properties0.containsKey((java.lang.Object) properties7);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream13, "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str20 = properties0.getProperty("tmlog");
        java.util.Set<java.lang.Object> objSet21 = properties0.keySet();
        java.lang.String str24 = properties0.getProperty("tmlog", "tmlog");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        int int32 = properties28.size();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean39 = properties28.containsKey((java.lang.Object) objSet38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties28.keys();
        int int41 = properties28.size();
        boolean boolean42 = properties10.containsValue((java.lang.Object) int41);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Enumeration<?> wildcardEnumeration49 = properties44.propertyNames();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.util.Set<java.lang.String> strSet51 = properties50.stringPropertyNames();
        java.lang.Object obj53 = properties10.putIfAbsent((java.lang.Object) properties50, (java.lang.Object) 9);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream54, "{tmlog=}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        java.util.Properties properties48 = atomikosProperties44.asProperties();
        java.lang.Object obj51 = properties48.setProperty("hi!", "");
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        boolean boolean58 = properties53.containsValue((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection59 = properties53.values();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.lang.Object obj67 = properties53.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet66);
        java.util.Set<java.lang.Object> objSet68 = properties53.keySet();
        java.util.Collection<java.lang.Object> objCollection69 = properties53.values();
        boolean boolean70 = properties34.replace((java.lang.Object) "hi!", (java.lang.Object) (byte) 100, (java.lang.Object) properties53);
        java.io.OutputStream outputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.storeToXML(outputStream71, "{hi!=[]}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet32 = properties14.keySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration40 = properties33.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties33.entrySet();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties14.elements();
        java.lang.Object obj44 = properties14.clone();
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.storeToXML(outputStream45, "{{}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        boolean boolean29 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) long28);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.io.OutputStream outputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream55, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        java.io.InputStream inputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean23 = properties18.containsValue((java.lang.Object) atomikosProperties22);
        java.lang.String str25 = properties18.getProperty("tmlog");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        java.lang.Object obj34 = properties18.get((java.lang.Object) '#');
        properties18.clear();
        java.io.PrintWriter printWriter36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.list(printWriter36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.lang.Object obj10 = properties0.remove((java.lang.Object) properties7);
        java.io.Reader reader11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(reader11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties46.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) properties39, (java.lang.Object) boolean62);
        java.lang.Object obj64 = properties0.remove((java.lang.Object) properties39);
        java.lang.String str66 = properties0.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties0.elements();
        java.lang.Object obj69 = properties0.clone();
        java.io.OutputStream outputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream70, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties0.keys();
        java.util.Collection<java.lang.Object> objCollection56 = properties0.values();
        java.io.PrintStream printStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objCollection56);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet24 = properties0.keySet();
        java.lang.String str25 = properties0.toString();
        java.io.PrintWriter printWriter26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet24);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long12 = atomikosProperties0.getMaxTimeout();
        java.lang.String str13 = atomikosProperties0.getService();
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet9);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.lang.Object obj9 = properties0.setProperty("", "{}");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = properties10.remove((java.lang.Object) properties18, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        int int30 = properties29.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.lang.String str38 = atomikosProperties32.getTransactionManagerUniqueName();
        boolean boolean39 = properties29.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties40.entrySet();
        java.lang.Object obj47 = properties29.remove((java.lang.Object) objEntrySet46);
        boolean boolean48 = properties29.isEmpty();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.lang.String str57 = properties49.getProperty("hi!");
        java.lang.String str59 = properties49.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        boolean boolean67 = properties49.containsKey((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setTransactionManagerUniqueName("tmlog");
        boolean boolean70 = atomikosProperties60.isForceShutdownOnVmExit();
        java.lang.Object obj71 = properties0.put((java.lang.Object) boolean48, (java.lang.Object) atomikosProperties60);
        java.lang.String str72 = atomikosProperties60.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.io.Writer writer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.store(writer15, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        java.lang.Object obj20 = properties14.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = properties6.remove((java.lang.Object) properties14, (java.lang.Object) atomikosProperties21);
        boolean boolean25 = properties0.equals((java.lang.Object) atomikosProperties21);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        java.lang.Object obj46 = properties34.clone();
        java.lang.Object obj47 = properties0.get(obj46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties0.keys();
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream49, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{=hi!}");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = atomikosProperties16.asProperties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.io.PrintStream printStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.list(printStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties29);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.lang.String str33 = properties25.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration34 = properties25.propertyNames();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties35.entrySet();
        java.util.Set<java.lang.String> strSet42 = properties35.stringPropertyNames();
        boolean boolean43 = properties35.isEmpty();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Set<java.lang.String> strSet45 = properties35.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration49 = properties46.propertyNames();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        boolean boolean53 = properties50.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties50.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties50.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxTimeout((long) '#');
        boolean boolean63 = atomikosProperties56.isForceShutdownOnVmExit();
        int int64 = atomikosProperties56.getMaxActives();
        java.lang.Object obj65 = properties50.remove((java.lang.Object) int64);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties50.entrySet();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.lang.String str71 = properties67.getProperty("");
        java.lang.Object obj72 = properties46.getOrDefault((java.lang.Object) properties50, (java.lang.Object) str71);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setMaxTimeout((long) '#');
        boolean boolean80 = atomikosProperties73.isEnableLogging();
        atomikosProperties73.setCheckpointInterval((long) 100);
        atomikosProperties73.setForceShutdownOnVmExit(false);
        boolean boolean85 = properties46.equals((java.lang.Object) atomikosProperties73);
        java.lang.Object obj86 = properties8.put((java.lang.Object) strSet45, (java.lang.Object) boolean85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration87 = properties8.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$SynchronizedSet cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.lang.String str20 = properties0.getProperty("");
        java.lang.String str23 = properties0.getProperty("{}", "");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties0.entrySet();
        java.io.Reader reader10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEntrySet9);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties26.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.Object obj43 = properties0.get((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.io.PrintStream printStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.lang.String str15 = properties0.getProperty("");
        java.lang.Object obj18 = properties0.setProperty("{=hi!}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        atomikosProperties19.setForceShutdownOnVmExit(false);
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties31.entrySet();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        boolean boolean42 = properties39.isEmpty();
        java.lang.Object obj45 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean49 = properties31.remove((java.lang.Object) properties39, (java.lang.Object) atomikosProperties46);
        java.lang.String str50 = atomikosProperties46.getTransactionManagerUniqueName();
        atomikosProperties46.setMaxActives(50);
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj54 = properties0.putIfAbsent((java.lang.Object) false, (java.lang.Object) str53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection15 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        boolean boolean22 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean25 = properties0.remove((java.lang.Object) objCollection15, (java.lang.Object) atomikosProperties16);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties26.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet39);
        java.util.Set<java.lang.Object> objSet41 = properties26.keySet();
        java.util.Set<java.lang.Object> objSet42 = properties26.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties26.entrySet();
        boolean boolean44 = properties0.contains((java.lang.Object) properties26);
        java.io.PrintWriter printWriter45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.list(printWriter45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.io.InputStream inputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.load(inputStream40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet32 = properties14.keySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration40 = properties33.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties33.entrySet();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Class<?> wildcardClass43 = properties14.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet17 = properties14.stringPropertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet22 = properties19.stringPropertyNames();
        boolean boolean23 = properties18.containsValue((java.lang.Object) properties19);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties18.propertyNames();
        java.lang.Object obj27 = properties14.put((java.lang.Object) wildcardEnumeration25, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj43 = properties14.getOrDefault((java.lang.Object) boolean35, (java.lang.Object) atomikosProperties36);
        boolean boolean44 = properties0.remove((java.lang.Object) atomikosProperties8, obj43);
        java.io.Writer writer45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer45, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties29.elements();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.lang.Object obj51 = properties37.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.util.Properties properties56 = atomikosProperties52.asProperties();
        java.lang.Object obj59 = properties56.setProperty("hi!", "");
        java.util.Properties properties60 = new java.util.Properties(properties56);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection65 = properties64.values();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties64.keys();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties67.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties67.entrySet();
        java.lang.Object obj75 = properties61.put((java.lang.Object) properties64, (java.lang.Object) properties67);
        java.lang.Object obj76 = properties37.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setSerialJtaTransactions(false);
        java.lang.String str84 = atomikosProperties77.getService();
        java.util.Properties properties85 = atomikosProperties77.asProperties();
        java.lang.Object obj86 = properties29.replace((java.lang.Object) properties37, (java.lang.Object) atomikosProperties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        atomikosProperties87.setMaxTimeout((long) '#');
        boolean boolean94 = atomikosProperties87.isEnableLogging();
        atomikosProperties87.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj97 = properties0.replace((java.lang.Object) atomikosProperties77, (java.lang.Object) atomikosProperties87);
        boolean boolean98 = atomikosProperties77.isThreadedTwoPhaseCommit();
        java.util.Properties properties99 = atomikosProperties77.asProperties();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(properties99);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setService("{=hi!}");
        atomikosProperties9.setLogBaseDir("");
        boolean boolean20 = atomikosProperties9.isForceShutdownOnVmExit();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet34 = properties31.stringPropertyNames();
        boolean boolean35 = properties30.containsValue((java.lang.Object) properties31);
        java.util.Collection<java.lang.Object> objCollection36 = properties30.values();
        java.util.Enumeration<?> wildcardEnumeration37 = properties30.propertyNames();
        java.lang.Object obj39 = properties26.put((java.lang.Object) wildcardEnumeration37, (java.lang.Object) 10.0d);
        boolean boolean40 = properties24.equals((java.lang.Object) 10.0d);
        java.lang.String str42 = properties24.getProperty("{}");
        java.lang.Object obj45 = properties24.setProperty("{{}={}}", "hi!");
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        boolean boolean51 = properties46.containsValue((java.lang.Object) properties47);
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        boolean boolean58 = properties52.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties52.entrySet();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        boolean boolean63 = properties60.isEmpty();
        java.lang.Object obj66 = properties60.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        boolean boolean70 = properties52.remove((java.lang.Object) properties60, (java.lang.Object) atomikosProperties67);
        boolean boolean71 = properties46.equals((java.lang.Object) atomikosProperties67);
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties72.elements();
        boolean boolean76 = properties72.isEmpty();
        java.util.Set<java.lang.Object> objSet77 = properties72.keySet();
        boolean boolean78 = properties72.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = properties72.entrySet();
        java.util.Properties properties80 = new java.util.Properties();
        java.lang.Object obj82 = properties80.remove((java.lang.Object) 0.0d);
        boolean boolean83 = properties80.isEmpty();
        java.lang.Object obj86 = properties80.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        boolean boolean90 = properties72.remove((java.lang.Object) properties80, (java.lang.Object) atomikosProperties87);
        java.util.Properties properties91 = new java.util.Properties(properties80);
        java.lang.Object obj92 = properties80.clone();
        java.lang.Object obj93 = properties46.get(obj92);
        java.util.Enumeration<java.lang.Object> objEnumeration94 = properties46.keys();
        boolean boolean95 = properties24.contains((java.lang.Object) objEnumeration94);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = properties0.replace((java.lang.Object) boolean20, obj23, (java.lang.Object) objEnumeration94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{=hi!}");
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(objEnumeration94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties10.entrySet();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet62 = properties59.stringPropertyNames();
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet67 = properties64.stringPropertyNames();
        boolean boolean68 = properties63.containsValue((java.lang.Object) properties64);
        java.util.Collection<java.lang.Object> objCollection69 = properties63.values();
        java.util.Enumeration<?> wildcardEnumeration70 = properties63.propertyNames();
        java.lang.Object obj72 = properties59.put((java.lang.Object) wildcardEnumeration70, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties59.elements();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        boolean boolean83 = properties75.equals((java.lang.Object) "");
        java.lang.String str84 = properties75.toString();
        java.lang.Object obj85 = properties59.put((java.lang.Object) 'a', (java.lang.Object) properties75);
        boolean boolean86 = properties10.contains((java.lang.Object) properties59);
        java.io.OutputStream outputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties59.save(outputStream87, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{}" + "'", str84, "{}");
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.io.Reader reader24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.load(reader24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.String str51 = atomikosProperties47.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        atomikosProperties52.setTransactionManagerUniqueName("hi!");
        java.lang.String str58 = atomikosProperties52.getLogBaseName();
        java.lang.String str59 = atomikosProperties52.getLogBaseName();
        boolean boolean60 = atomikosProperties52.isForceShutdownOnVmExit();
        long long61 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean64 = atomikosProperties52.isThreadedTwoPhaseCommit();
        long long65 = atomikosProperties52.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setMaxTimeout((long) '#');
        boolean boolean73 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setTransactionManagerUniqueName("hi!");
        atomikosProperties66.setForceShutdownOnVmExit(false);
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties66.isSerialJtaTransactions();
        boolean boolean81 = properties0.replace((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties52, (java.lang.Object) boolean80);
        int int82 = atomikosProperties47.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10000L + "'", long65 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 50 + "'", int82 == 50);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.Object obj18 = properties0.clone();
        java.util.Set<java.lang.Object> objSet19 = properties0.keySet();
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream20, "{tmlog=}", "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNotNull(objSet19);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties10.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Set<java.lang.String> strSet17 = properties10.stringPropertyNames();
        boolean boolean18 = properties10.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Set<java.lang.String> strSet20 = properties10.stringPropertyNames();
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream21, "{}", "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        long long25 = atomikosProperties16.getDefaultJtaTimeout();
        java.lang.String str26 = atomikosProperties16.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setForceShutdownOnVmExit(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = properties8.put((java.lang.Object) str26, (java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.lang.Object obj49 = properties40.put((java.lang.Object) strSet47, (java.lang.Object) 0.0d);
        boolean boolean50 = properties0.equals((java.lang.Object) 0.0d);
        java.io.OutputStream outputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream51, "{{}={}}", "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties28.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties28.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties40.containsKey((java.lang.Object) objSet50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties40.keys();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties53.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties53.entrySet();
        boolean boolean62 = properties40.remove((java.lang.Object) properties53, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration63 = properties53.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties71 = atomikosProperties64.asProperties();
        java.util.Set<java.lang.String> strSet72 = properties71.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet73 = properties71.keySet();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        boolean boolean80 = properties74.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties74.entrySet();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        boolean boolean85 = properties82.isEmpty();
        java.lang.Object obj88 = properties82.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties89.setSerialJtaTransactions(false);
        boolean boolean92 = properties74.remove((java.lang.Object) properties82, (java.lang.Object) atomikosProperties89);
        atomikosProperties89.setSerialJtaTransactions(false);
        java.lang.Object obj95 = properties53.put((java.lang.Object) objSet73, (java.lang.Object) false);
        java.lang.Object obj96 = properties28.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties53);
        boolean boolean97 = properties0.equals((java.lang.Object) atomikosProperties36);
        boolean boolean98 = atomikosProperties36.isEnableLogging();
        boolean boolean99 = atomikosProperties36.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = properties7.isEmpty();
        int int9 = properties7.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties7.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties7.elements();
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        properties7.clear();
        java.io.PrintStream printStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        java.io.PrintWriter printWriter44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.list(printWriter44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.lang.Object obj20 = properties0.clone();
        java.io.Reader reader21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        java.lang.String str24 = atomikosProperties20.getService();
        atomikosProperties20.setEnableLogging(false);
        long long27 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.lang.Object obj35 = properties28.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        atomikosProperties36.setTransactionManagerUniqueName("hi!");
        atomikosProperties36.setForceShutdownOnVmExit(false);
        atomikosProperties36.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str46 = atomikosProperties36.getTransactionManagerUniqueName();
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        boolean boolean52 = properties47.containsValue((java.lang.Object) properties48);
        java.util.Collection<java.lang.Object> objCollection53 = properties47.values();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.lang.Object obj61 = properties47.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet60);
        java.util.Set<java.lang.Object> objSet62 = properties47.keySet();
        java.util.Set<java.lang.Object> objSet63 = properties47.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet64 = properties47.entrySet();
        java.util.Set<java.lang.Object> objSet65 = properties47.keySet();
        java.lang.Object obj66 = properties28.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties28.keys();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet71 = properties68.stringPropertyNames();
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet75 = properties72.stringPropertyNames();
        java.lang.Object obj77 = properties68.put((java.lang.Object) strSet75, (java.lang.Object) 0.0d);
        boolean boolean78 = properties28.equals((java.lang.Object) 0.0d);
        boolean boolean79 = properties19.remove((java.lang.Object) long27, (java.lang.Object) boolean78);
        java.io.PrintStream printStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNotNull(objEntrySet64);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        int int64 = properties13.size();
        java.util.Set<java.lang.Object> objSet65 = properties13.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setMaxTimeout((long) '#');
        boolean boolean73 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        atomikosProperties66.setEnableLogging(true);
        atomikosProperties66.setLogBaseName("{}");
        atomikosProperties66.setLogBaseName("tmlog");
        atomikosProperties66.setSerialJtaTransactions(true);
        boolean boolean84 = properties13.equals((java.lang.Object) atomikosProperties66);
        java.util.Set<java.lang.String> strSet85 = properties13.stringPropertyNames();
        boolean boolean86 = properties13.isEmpty();
        java.io.Reader reader87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.load(reader87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties0.elements();
        java.io.Writer writer23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer23, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objEnumeration22);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream9, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        boolean boolean34 = properties0.containsKey((java.lang.Object) boolean33);
        java.io.InputStream inputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.Object obj59 = properties50.put((java.lang.Object) strSet57, (java.lang.Object) 0.0d);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        java.lang.Object obj77 = properties50.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) (short) 10);
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        boolean boolean81 = properties78.isEmpty();
        java.util.Set<java.lang.String> strSet82 = properties78.stringPropertyNames();
        java.lang.String str84 = properties78.getProperty("hi!");
        java.lang.Object obj85 = properties0.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties78);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        atomikosProperties86.setThreadedTwoPhaseCommit(true);
        atomikosProperties86.setMaxTimeout((long) '#');
        boolean boolean93 = atomikosProperties86.isEnableLogging();
        atomikosProperties86.setForceShutdownOnVmExit(true);
        boolean boolean96 = atomikosProperties86.isThreadedTwoPhaseCommit();
        java.lang.Object obj97 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean98 = properties78.remove((java.lang.Object) atomikosProperties86, obj97);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.lang.Object obj22 = properties8.put((java.lang.Object) properties11, (java.lang.Object) properties14);
        java.lang.String str24 = properties11.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        long long32 = atomikosProperties25.getMaxTimeout();
        boolean boolean33 = properties11.containsValue((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties11.elements();
        boolean boolean35 = properties0.contains((java.lang.Object) objEnumeration34);
        java.util.Properties properties36 = new java.util.Properties(properties0);
        java.io.PrintStream printStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.io.Reader reader27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(reader27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties0.elements();
        java.lang.Object obj22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = properties0.get(obj22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{}");
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.lang.Object obj10 = properties0.remove((java.lang.Object) properties7);
        java.io.Writer writer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(writer11, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        boolean boolean18 = atomikosProperties7.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties0.elements();
        java.util.Properties properties63 = new java.util.Properties(properties0);
        java.io.PrintStream printStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval(10000L);
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        boolean boolean40 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties8.getLogBaseName();
        java.lang.String str42 = atomikosProperties8.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        boolean boolean23 = properties0.isEmpty();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objCollection24);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setLogBaseDir("tmlog");
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.util.Properties properties66 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties66.save(outputStream67, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setEnableLogging(false);
        boolean boolean26 = properties8.containsKey((java.lang.Object) atomikosProperties19);
        boolean boolean27 = properties0.containsKey((java.lang.Object) boolean26);
        java.util.Collection<java.lang.Object> objCollection28 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet9 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = properties8.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection11 = properties10.values();
        int int12 = properties10.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxTimeout((long) '#');
        boolean boolean36 = atomikosProperties29.isEnableLogging();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.lang.Object obj46 = properties22.replace((java.lang.Object) atomikosProperties29, (java.lang.Object) objCollection45);
        boolean boolean48 = properties13.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection45, (java.lang.Object) 10.0d);
        boolean boolean49 = properties10.equals((java.lang.Object) properties13);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection53 = properties50.values();
        java.util.Properties properties54 = new java.util.Properties(properties50);
        java.lang.Object obj55 = properties8.put((java.lang.Object) boolean49, (java.lang.Object) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxTimeout((long) '#');
        boolean boolean63 = atomikosProperties56.isEnableLogging();
        atomikosProperties56.setMaxActives((int) '#');
        atomikosProperties56.setSerialJtaTransactions(true);
        java.lang.String str68 = atomikosProperties56.getTransactionManagerUniqueName();
        java.lang.String str69 = atomikosProperties56.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj70 = properties8.remove((java.lang.Object) str69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9 + "'", int9 == 9);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        int int31 = atomikosProperties12.getMaxActives();
        java.lang.Class<?> wildcardClass32 = atomikosProperties12.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        boolean boolean23 = properties15.equals((java.lang.Object) "");
        boolean boolean24 = properties0.contains((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.String str29 = atomikosProperties25.getService();
        boolean boolean30 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) 100);
        atomikosProperties25.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties25.setMaxTimeout(10000L);
        boolean boolean37 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.Object obj38 = null;
        java.lang.Object obj39 = properties0.getOrDefault((java.lang.Object) atomikosProperties25, obj38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isForceShutdownOnVmExit();
        long long48 = atomikosProperties40.getDefaultJtaTimeout();
        atomikosProperties40.setService("tmlog");
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean53 = properties0.equals((java.lang.Object) atomikosProperties40);
        boolean boolean54 = atomikosProperties40.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.lang.Object obj41 = properties13.clone();
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream42, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.lang.String str6 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.keys();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream8, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{{}={}}" + "'", str6, "{{}={}}");
        org.junit.Assert.assertNotNull(objEnumeration7);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.lang.Object obj20 = properties13.setProperty("tmlog", "");
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties24.keys();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties27.entrySet();
        java.lang.Object obj35 = properties21.put((java.lang.Object) properties24, (java.lang.Object) properties27);
        java.lang.String str37 = properties24.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        java.lang.Object obj42 = properties13.put((java.lang.Object) properties24, (java.lang.Object) boolean41);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setSerialJtaTransactions(false);
        java.lang.String str51 = atomikosProperties44.getService();
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.util.Properties properties53 = atomikosProperties44.asProperties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj55 = properties12.getOrDefault((java.lang.Object) properties24, (java.lang.Object) properties53);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        int int60 = properties56.size();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean67 = properties56.containsKey((java.lang.Object) objSet66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setEnableLogging(false);
        boolean boolean75 = atomikosProperties68.isSerialJtaTransactions();
        int int76 = atomikosProperties68.getMaxActives();
        java.util.Properties properties77 = new java.util.Properties();
        java.lang.Object obj79 = properties77.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet80 = properties77.stringPropertyNames();
        java.util.Properties properties81 = new java.util.Properties();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet85 = properties82.stringPropertyNames();
        boolean boolean86 = properties81.containsValue((java.lang.Object) properties82);
        java.util.Collection<java.lang.Object> objCollection87 = properties81.values();
        java.util.Enumeration<?> wildcardEnumeration88 = properties81.propertyNames();
        java.lang.Object obj90 = properties77.put((java.lang.Object) wildcardEnumeration88, (java.lang.Object) 10.0d);
        java.lang.String str92 = properties77.getProperty("{=hi!}");
        java.lang.Object obj93 = properties56.put((java.lang.Object) atomikosProperties68, (java.lang.Object) "{=hi!}");
        atomikosProperties68.setMaxActives(100);
        atomikosProperties68.setEnableLogging(false);
        boolean boolean98 = properties12.containsValue((java.lang.Object) false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 50 + "'", int76 == 50);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertNotNull(wildcardEnumeration88);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        atomikosProperties12.setMaxActives(100);
        atomikosProperties12.setEnableLogging(false);
        java.lang.String str42 = atomikosProperties12.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream9, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties15.replace((java.lang.Object) atomikosProperties22, (java.lang.Object) objCollection38);
        java.lang.Object obj40 = properties0.get((java.lang.Object) properties15);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        boolean boolean47 = properties41.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties41.entrySet();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        boolean boolean52 = properties49.isEmpty();
        java.lang.Object obj55 = properties49.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        boolean boolean59 = properties41.remove((java.lang.Object) properties49, (java.lang.Object) atomikosProperties56);
        java.util.Properties properties60 = new java.util.Properties(properties49);
        int int61 = properties60.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = atomikosProperties63.isSerialJtaTransactions();
        java.lang.String str67 = atomikosProperties63.getService();
        boolean boolean68 = atomikosProperties63.isEnableLogging();
        java.lang.String str69 = atomikosProperties63.getTransactionManagerUniqueName();
        boolean boolean70 = properties60.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setMaxActives((int) (short) -1);
        boolean boolean73 = atomikosProperties63.isThreadedTwoPhaseCommit();
        long long74 = atomikosProperties63.getDefaultJtaTimeout();
        int int75 = atomikosProperties63.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setMaxTimeout((long) '#');
        long long83 = atomikosProperties76.getCheckpointInterval();
        java.lang.String str84 = atomikosProperties76.getTransactionManagerUniqueName();
        atomikosProperties76.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties76.setSerialJtaTransactions(false);
        java.lang.String str89 = atomikosProperties76.getService();
        java.lang.Object obj90 = properties15.getOrDefault((java.lang.Object) atomikosProperties63, (java.lang.Object) atomikosProperties76);
        boolean boolean91 = atomikosProperties76.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 10000L + "'", long74 == 10000L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        boolean boolean21 = properties19.contains((java.lang.Object) 100.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties30.isEmpty();
        java.lang.Object obj36 = properties30.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = properties22.remove((java.lang.Object) properties30, (java.lang.Object) atomikosProperties37);
        boolean boolean41 = properties19.equals((java.lang.Object) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration44 = properties19.propertyNames();
        boolean boolean45 = properties0.containsValue((java.lang.Object) wildcardEnumeration44);
        java.lang.Object obj46 = properties0.clone();
        java.lang.Object obj47 = null;
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean61 = properties56.containsValue((java.lang.Object) atomikosProperties60);
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        int int66 = properties62.size();
        java.util.Properties properties67 = new java.util.Properties(properties62);
        java.util.Set<java.lang.String> strSet68 = properties62.stringPropertyNames();
        java.util.Set<java.lang.String> strSet69 = properties62.stringPropertyNames();
        java.lang.Object obj70 = properties48.getOrDefault((java.lang.Object) properties56, (java.lang.Object) properties62);
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection72 = properties71.values();
        java.util.Collection<java.lang.Object> objCollection73 = properties71.values();
        boolean boolean74 = properties71.isEmpty();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = properties0.replace(obj47, (java.lang.Object) properties71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.lang.String str12 = properties0.getProperty("", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((long) 100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.list(printStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream20, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = atomikosProperties16.asProperties();
        java.lang.Object obj32 = properties29.setProperty("{}", "tmlog");
        java.io.InputStream inputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.loadFromXML(inputStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties0.keys();
        java.util.Collection<java.lang.Object> objCollection56 = properties0.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet61 = properties58.stringPropertyNames();
        boolean boolean62 = properties57.containsValue((java.lang.Object) properties58);
        java.util.Collection<java.lang.Object> objCollection63 = properties57.values();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        java.lang.Object obj71 = properties57.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet70);
        java.util.Set<java.lang.Object> objSet72 = properties57.keySet();
        java.util.Set<java.lang.Object> objSet73 = properties57.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties57.entrySet();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        boolean boolean78 = properties75.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties86 = atomikosProperties79.asProperties();
        int int87 = atomikosProperties79.getMaxActives();
        atomikosProperties79.setService("hi!");
        java.lang.Object obj90 = properties75.get((java.lang.Object) atomikosProperties79);
        boolean boolean91 = properties57.containsValue((java.lang.Object) atomikosProperties79);
        java.util.Properties properties92 = new java.util.Properties();
        java.lang.Object obj94 = properties92.remove((java.lang.Object) 0.0d);
        java.lang.Object obj95 = properties0.replace((java.lang.Object) boolean91, (java.lang.Object) 0.0d);
        java.io.OutputStream outputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream96, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.keys();
        java.util.Set<java.lang.String> strSet16 = properties0.stringPropertyNames();
        java.lang.Object obj17 = properties0.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{{}={}}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{{}={}}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{{}={}}");
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties28.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties28.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties40.containsKey((java.lang.Object) objSet50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties40.keys();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties53.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties53.entrySet();
        boolean boolean62 = properties40.remove((java.lang.Object) properties53, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration63 = properties53.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties71 = atomikosProperties64.asProperties();
        java.util.Set<java.lang.String> strSet72 = properties71.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet73 = properties71.keySet();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        boolean boolean80 = properties74.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties74.entrySet();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        boolean boolean85 = properties82.isEmpty();
        java.lang.Object obj88 = properties82.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties89.setSerialJtaTransactions(false);
        boolean boolean92 = properties74.remove((java.lang.Object) properties82, (java.lang.Object) atomikosProperties89);
        atomikosProperties89.setSerialJtaTransactions(false);
        java.lang.Object obj95 = properties53.put((java.lang.Object) objSet73, (java.lang.Object) false);
        java.lang.Object obj96 = properties28.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties53);
        boolean boolean97 = properties0.equals((java.lang.Object) atomikosProperties36);
        boolean boolean98 = atomikosProperties36.isEnableLogging();
        java.util.Properties properties99 = atomikosProperties36.asProperties();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(properties99);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties0.elements();
        java.util.Properties properties63 = new java.util.Properties(properties0);
        java.lang.String str66 = properties63.getProperty("{{}={}}", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        properties35.clear();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Set<java.lang.String> strSet55 = properties51.stringPropertyNames();
        java.lang.Object obj56 = properties35.get((java.lang.Object) properties51);
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties51.store(outputStream57, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        boolean boolean56 = properties50.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties50.entrySet();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = properties50.remove((java.lang.Object) properties58, (java.lang.Object) atomikosProperties65);
        java.util.Properties properties69 = new java.util.Properties(properties58);
        java.lang.Object obj70 = properties58.clone();
        java.lang.Object obj71 = properties0.remove(obj70);
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream72, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{=hi!}");
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        java.util.Set<java.lang.String> strSet81 = properties74.stringPropertyNames();
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties63, (java.lang.Object) properties74);
        java.lang.Object obj83 = properties74.clone();
        java.lang.String str86 = properties74.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{}");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        int int78 = properties74.size();
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.util.Set<java.lang.String> strSet80 = properties74.stringPropertyNames();
        java.util.Set<java.lang.String> strSet81 = properties74.stringPropertyNames();
        java.lang.Object obj82 = properties0.put((java.lang.Object) properties63, (java.lang.Object) properties74);
        java.lang.String str84 = properties0.getProperty("");
        java.util.Set<java.lang.String> strSet85 = properties0.stringPropertyNames();
        java.lang.String str86 = properties0.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strSet85);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.lang.Class<?> wildcardClass29 = properties0.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream26, "{}", "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.io.Writer writer36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer36, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        java.io.InputStream inputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.loadFromXML(inputStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEnumeration6);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        boolean boolean51 = properties31.contains((java.lang.Object) atomikosProperties47);
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties52.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties52.entrySet();
        java.util.Set<java.lang.String> strSet59 = properties52.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties60.entrySet();
        boolean boolean66 = properties52.contains((java.lang.Object) properties60);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection71 = properties70.values();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties70.keys();
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties73.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties73.entrySet();
        java.lang.Object obj81 = properties67.put((java.lang.Object) properties70, (java.lang.Object) properties73);
        java.lang.Object obj82 = properties70.clone();
        boolean boolean83 = properties52.containsKey((java.lang.Object) properties70);
        boolean boolean84 = properties31.equals((java.lang.Object) boolean83);
        java.util.Properties properties85 = new java.util.Properties();
        java.lang.Object obj87 = properties85.remove((java.lang.Object) 0.0d);
        boolean boolean88 = properties85.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties85.keys();
        java.lang.Object obj90 = properties31.get((java.lang.Object) objEnumeration89);
        java.io.InputStream inputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.loadFromXML(inputStream91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties7.entrySet();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        boolean boolean18 = properties15.isEmpty();
        java.lang.Object obj21 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = properties7.remove((java.lang.Object) properties15, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.setSerialJtaTransactions(true);
        boolean boolean31 = properties0.contains((java.lang.Object) true);
        java.io.PrintStream printStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.lang.String str17 = properties0.getProperty("{=hi!}");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration18 = properties0.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Collections$EmptyEnumeration cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Set<java.lang.String> strSet25 = properties8.stringPropertyNames();
        java.lang.String str26 = properties8.toString();
        java.lang.Object obj27 = properties8.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{hi!=[]}" + "'", str26, "{hi!=[]}");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{hi!=[]}");
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        long long5 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.lang.String str9 = properties0.getProperty("hi!");
        boolean boolean10 = properties0.isEmpty();
        java.io.PrintStream printStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.lang.Object obj16 = properties10.clone();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties17.clone();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean29 = properties25.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj32 = properties25.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        java.lang.Object obj47 = properties33.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet46);
        java.util.Set<java.lang.Object> objSet48 = properties33.keySet();
        boolean boolean49 = properties25.containsKey((java.lang.Object) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        atomikosProperties50.setCheckpointInterval((long) 10);
        atomikosProperties50.setForceShutdownOnVmExit(true);
        boolean boolean58 = properties10.replace((java.lang.Object) properties17, (java.lang.Object) properties25, (java.lang.Object) true);
        boolean boolean59 = properties0.equals((java.lang.Object) properties25);
        java.io.PrintWriter printWriter60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.lang.Object obj9 = properties0.setProperty("", "{}");
        java.lang.String str12 = properties0.getProperty("{=hi!}", "{{}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{{}={}}" + "'", str12, "{{}={}}");
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties72, (java.lang.Object) 1);
        java.io.PrintWriter printWriter80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.list(printWriter80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + true + "'", obj79, true);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties17.keys();
        java.lang.String str25 = properties17.getProperty("hi!");
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        int int31 = properties27.size();
        java.util.Properties properties32 = new java.util.Properties(properties27);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties27.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        boolean boolean49 = properties17.replace((java.lang.Object) "hi!", (java.lang.Object) properties27, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet50 = properties27.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        java.util.Set<java.lang.String> strSet57 = properties51.stringPropertyNames();
        java.util.Set<java.lang.String> strSet58 = properties51.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxTimeout((long) '#');
        boolean boolean66 = atomikosProperties59.isEnableLogging();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        atomikosProperties59.setEnableLogging(true);
        atomikosProperties59.setLogBaseName("{}");
        long long73 = atomikosProperties59.getDefaultJtaTimeout();
        java.lang.Object obj74 = properties27.putIfAbsent((java.lang.Object) properties51, (java.lang.Object) atomikosProperties59);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        int int76 = properties3.size();
        java.io.InputStream inputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.loadFromXML(inputStream77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 10000L + "'", long73 == 10000L);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        boolean boolean23 = properties0.isEmpty();
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream24, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.io.PrintStream printStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.setProperty("{}", "{}");
        java.lang.String str21 = properties15.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties15.keys();
        boolean boolean23 = properties6.equals((java.lang.Object) properties15);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream24, "{hi!=[]}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{{}={}}" + "'", str21, "{{}={}}");
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration18 = properties9.propertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties19.entrySet();
        java.util.Set<java.lang.String> strSet26 = properties19.stringPropertyNames();
        boolean boolean27 = properties19.isEmpty();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        boolean boolean29 = properties7.containsKey((java.lang.Object) properties9);
        java.lang.Object obj30 = properties7.clone();
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.save(outputStream31, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(obj30);
// flaky:         org.junit.Assert.assertEquals(obj30.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        boolean boolean9 = atomikosProperties6.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties6.getService();
        boolean boolean11 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties12 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet13 = properties12.stringPropertyNames();
        boolean boolean14 = properties12.isEmpty();
        boolean boolean15 = properties12.isEmpty();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration19 = properties16.propertyNames();
        boolean boolean20 = properties12.containsValue((java.lang.Object) wildcardEnumeration19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        atomikosProperties21.setEnableLogging(false);
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        atomikosProperties21.setCheckpointInterval((long) 1);
        java.util.Properties properties31 = atomikosProperties21.asProperties();
        java.lang.Object obj32 = properties5.putIfAbsent((java.lang.Object) properties12, (java.lang.Object) properties31);
        java.lang.String str33 = properties31.toString();
        java.lang.String str36 = properties31.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj32);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str33, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        int int64 = properties13.size();
        java.util.Set<java.lang.Object> objSet65 = properties13.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setMaxTimeout((long) '#');
        boolean boolean73 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        atomikosProperties66.setEnableLogging(true);
        atomikosProperties66.setLogBaseName("{}");
        atomikosProperties66.setLogBaseName("tmlog");
        atomikosProperties66.setSerialJtaTransactions(true);
        boolean boolean84 = properties13.equals((java.lang.Object) atomikosProperties66);
        java.util.Set<java.lang.String> strSet85 = properties13.stringPropertyNames();
        boolean boolean86 = properties13.isEmpty();
        java.lang.String str89 = properties13.getProperty("{{}={}}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str89, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean36 = properties30.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        boolean boolean41 = properties38.isEmpty();
        java.lang.Object obj44 = properties38.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = properties30.remove((java.lang.Object) properties38, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties49 = new java.util.Properties(properties38);
        int int50 = properties49.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.lang.String str56 = atomikosProperties52.getService();
        boolean boolean57 = atomikosProperties52.isEnableLogging();
        java.lang.String str58 = atomikosProperties52.getTransactionManagerUniqueName();
        boolean boolean59 = properties49.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        boolean boolean67 = atomikosProperties60.isSerialJtaTransactions();
        int int68 = atomikosProperties60.getMaxActives();
        boolean boolean69 = atomikosProperties60.isSerialJtaTransactions();
        boolean boolean70 = properties16.remove((java.lang.Object) properties49, (java.lang.Object) boolean69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setMaxTimeout((long) '#');
        boolean boolean78 = atomikosProperties71.isEnableLogging();
        atomikosProperties71.setCheckpointInterval((long) 100);
        java.lang.String str81 = atomikosProperties71.getTransactionManagerUniqueName();
        boolean boolean82 = properties49.contains((java.lang.Object) atomikosProperties71);
        java.lang.String str83 = properties49.toString();
        boolean boolean84 = properties3.containsValue((java.lang.Object) properties49);
        java.io.InputStream inputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(inputStream85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "{}" + "'", str83, "{}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setService("{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.lang.String str15 = properties0.toString();
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream16, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        java.lang.String str4 = properties0.toString();
        java.io.Reader reader5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.io.Reader reader23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(reader23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str11 = properties8.getProperty("{hi!=[]}", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}" + "'", str11, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean21 = properties18.contains((java.lang.Object) 35);
        java.io.Writer writer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.store(writer22, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        boolean boolean23 = properties15.equals((java.lang.Object) "");
        java.lang.String str24 = properties15.toString();
        boolean boolean25 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = atomikosProperties26.isSerialJtaTransactions();
        boolean boolean30 = atomikosProperties26.isEnableLogging();
        long long31 = atomikosProperties26.getMaxTimeout();
        atomikosProperties26.setLogBaseName("{=hi!}");
        java.lang.Object obj34 = properties15.get((java.lang.Object) atomikosProperties26);
        atomikosProperties26.setTransactionManagerUniqueName("{=hi!}");
        boolean boolean37 = properties6.contains((java.lang.Object) "{=hi!}");
        properties6.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream7, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        java.io.Writer writer31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer31, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.lang.Object obj21 = properties19.clone();
        java.io.Reader reader22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(reader22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties26.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.Object obj43 = properties0.get((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.io.InputStream inputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        boolean boolean9 = atomikosProperties6.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties6.getService();
        boolean boolean11 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties12 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet13 = properties12.stringPropertyNames();
        boolean boolean14 = properties12.isEmpty();
        boolean boolean15 = properties12.isEmpty();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration19 = properties16.propertyNames();
        boolean boolean20 = properties12.containsValue((java.lang.Object) wildcardEnumeration19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        atomikosProperties21.setEnableLogging(false);
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        atomikosProperties21.setCheckpointInterval((long) 1);
        java.util.Properties properties31 = atomikosProperties21.asProperties();
        java.lang.Object obj32 = properties5.putIfAbsent((java.lang.Object) properties12, (java.lang.Object) properties31);
        java.io.InputStream inputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.loadFromXML(inputStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.lang.Object obj5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = properties0.get(obj5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{=hi!}");
        atomikosProperties0.setLogBaseDir("");
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str21 = atomikosProperties15.getLogBaseName();
        java.lang.String str22 = atomikosProperties15.getLogBaseName();
        boolean boolean23 = atomikosProperties15.isForceShutdownOnVmExit();
        long long24 = atomikosProperties15.getMaxTimeout();
        java.lang.Class<?> wildcardClass25 = atomikosProperties15.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setEnableLogging(false);
        boolean boolean33 = atomikosProperties26.isSerialJtaTransactions();
        int int34 = atomikosProperties26.getMaxActives();
        boolean boolean35 = atomikosProperties26.isSerialJtaTransactions();
        atomikosProperties26.setLogBaseDir("hi!");
        java.lang.Object obj38 = properties0.putIfAbsent((java.lang.Object) wildcardClass25, (java.lang.Object) atomikosProperties26);
        boolean boolean39 = properties0.isEmpty();
        java.io.Writer writer40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer40, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        java.util.Properties properties48 = atomikosProperties44.asProperties();
        java.lang.Object obj51 = properties48.setProperty("hi!", "");
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        boolean boolean58 = properties53.containsValue((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection59 = properties53.values();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.lang.Object obj67 = properties53.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet66);
        java.util.Set<java.lang.Object> objSet68 = properties53.keySet();
        java.util.Collection<java.lang.Object> objCollection69 = properties53.values();
        boolean boolean70 = properties34.replace((java.lang.Object) "hi!", (java.lang.Object) (byte) 100, (java.lang.Object) properties53);
        java.util.Set<java.lang.String> strSet71 = properties53.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strSet71);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.lang.Object obj40 = properties26.put((java.lang.Object) properties29, (java.lang.Object) properties32);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Enumeration<?> wildcardEnumeration47 = properties42.propertyNames();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        boolean boolean56 = properties42.containsValue((java.lang.Object) objEntrySet55);
        boolean boolean57 = properties0.remove((java.lang.Object) properties29, (java.lang.Object) boolean56);
        java.lang.Object obj59 = properties0.remove((java.lang.Object) (-1L));
        java.io.InputStream inputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        int int11 = atomikosProperties0.getMaxActives();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.lang.Class<?> wildcardClass28 = atomikosProperties3.getClass();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.lang.Object obj20 = properties8.clone();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.lang.String str37 = properties29.getProperty("hi!");
        java.lang.String str39 = properties29.getProperty("");
        java.lang.Object obj41 = properties21.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties42.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties42.entrySet();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties50.keys();
        java.lang.String str58 = properties50.getProperty("hi!");
        java.lang.String str60 = properties50.getProperty("");
        java.lang.Object obj62 = properties42.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setMaxTimeout((long) '#');
        boolean boolean70 = atomikosProperties63.isEnableLogging();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setMaxActives((int) (byte) 100);
        atomikosProperties63.setForceShutdownOnVmExit(false);
        java.util.Properties properties77 = new java.util.Properties();
        java.lang.Object obj79 = properties77.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet80 = properties77.stringPropertyNames();
        java.lang.String str81 = properties77.toString();
        java.lang.String str82 = properties77.toString();
        java.util.Set<java.lang.Object> objSet83 = properties77.keySet();
        boolean boolean84 = properties42.remove((java.lang.Object) false, (java.lang.Object) objSet83);
        java.lang.Object obj85 = properties42.clone();
        java.lang.Object obj86 = properties8.put((java.lang.Object) properties21, obj85);
        java.util.Properties properties87 = new java.util.Properties(properties21);
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.save(outputStream88, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{=hi!}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{}" + "'", str81, "{}");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{}" + "'", str82, "{}");
        org.junit.Assert.assertNotNull(objSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{=100.0}");
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        java.util.Collection<java.lang.Object> objCollection7 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        boolean boolean17 = atomikosProperties14.isSerialJtaTransactions();
        atomikosProperties14.setTransactionManagerUniqueName("hi!");
        java.lang.String str20 = atomikosProperties14.getLogBaseName();
        java.lang.String str21 = atomikosProperties14.getLogBaseName();
        boolean boolean22 = atomikosProperties14.isForceShutdownOnVmExit();
        long long23 = atomikosProperties14.getMaxTimeout();
        java.lang.String str24 = atomikosProperties14.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        boolean boolean32 = properties5.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) str24, (java.lang.Object) true);
        java.util.Properties properties33 = atomikosProperties8.asProperties();
        boolean boolean34 = properties0.contains((java.lang.Object) properties33);
        java.lang.String str37 = properties0.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str37, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Properties properties25 = new java.util.Properties(properties13);
        java.lang.String str27 = properties13.getProperty("{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        boolean boolean8 = properties4.isEmpty();
        java.util.Set<java.lang.Object> objSet9 = properties4.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.keys();
        java.lang.String str12 = properties4.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration13 = properties4.propertyNames();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties14.entrySet();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        boolean boolean22 = properties14.isEmpty();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        int int26 = properties24.size();
        java.util.Properties properties27 = new java.util.Properties(properties24);
        java.lang.Object obj28 = properties0.put((java.lang.Object) properties4, (java.lang.Object) properties27);
        java.io.PrintStream printStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties27.list(printStream29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.io.Writer writer55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer55, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        int int25 = properties21.size();
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Set<java.lang.String> strSet27 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        atomikosProperties28.setCheckpointInterval((long) 10);
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        boolean boolean39 = properties36.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties36.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isForceShutdownOnVmExit();
        int int50 = atomikosProperties42.getMaxActives();
        java.lang.Object obj51 = properties36.remove((java.lang.Object) int50);
        boolean boolean52 = properties0.replace((java.lang.Object) strSet27, (java.lang.Object) true, (java.lang.Object) properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties36.elements();
        java.io.PrintWriter printWriter54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.list(printWriter54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties0.elements();
        java.lang.Object obj10 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties11.isSerialJtaTransactions();
        java.lang.String str15 = atomikosProperties11.getService();
        atomikosProperties11.setMaxActives((int) (byte) 100);
        boolean boolean18 = properties0.equals((java.lang.Object) (byte) 100);
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream19, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{-1=100}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{-1=100}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{-1=100}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        properties3.clear();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.lang.Object obj29 = properties5.replace((java.lang.Object) atomikosProperties12, (java.lang.Object) objCollection28);
        int int30 = properties5.size();
        java.util.Properties properties31 = new java.util.Properties(properties5);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        java.util.Properties properties44 = atomikosProperties40.asProperties();
        java.lang.Object obj45 = properties32.remove((java.lang.Object) properties44);
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        java.util.Properties properties65 = new java.util.Properties(properties54);
        java.lang.Object obj66 = properties54.clone();
        java.lang.Object obj67 = properties54.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties54.elements();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = properties3.replace((java.lang.Object) properties31, obj45, (java.lang.Object) objEnumeration68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{=hi!}");
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{=hi!}");
        org.junit.Assert.assertNotNull(objEnumeration68);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.io.OutputStream outputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream4, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        boolean boolean10 = properties7.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties7.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties7.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setMaxTimeout((long) '#');
        boolean boolean20 = atomikosProperties13.isForceShutdownOnVmExit();
        int int21 = atomikosProperties13.getMaxActives();
        java.lang.Object obj22 = properties7.remove((java.lang.Object) int21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties7.entrySet();
        java.util.Properties properties24 = new java.util.Properties(properties7);
        boolean boolean25 = properties0.containsValue((java.lang.Object) properties24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str52 = atomikosProperties48.getService();
        boolean boolean53 = atomikosProperties48.isEnableLogging();
        java.lang.String str54 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean55 = properties45.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties48);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean60 = properties56.containsValue((java.lang.Object) "hi!");
        java.lang.String str62 = properties56.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration63 = properties56.propertyNames();
        java.lang.String str65 = properties56.getProperty("{{}={}}");
        java.lang.String str66 = properties56.toString();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        boolean boolean70 = properties67.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties67.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties67.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setMaxTimeout((long) '#');
        boolean boolean80 = atomikosProperties73.isForceShutdownOnVmExit();
        int int81 = atomikosProperties73.getMaxActives();
        java.lang.Object obj82 = properties67.remove((java.lang.Object) int81);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet83 = properties67.entrySet();
        java.util.Properties properties84 = new java.util.Properties();
        java.lang.Object obj86 = properties84.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet87 = properties84.stringPropertyNames();
        java.util.Properties properties88 = new java.util.Properties();
        java.util.Properties properties89 = new java.util.Properties();
        java.lang.Object obj91 = properties89.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet92 = properties89.stringPropertyNames();
        boolean boolean93 = properties88.containsValue((java.lang.Object) properties89);
        java.util.Collection<java.lang.Object> objCollection94 = properties88.values();
        java.util.Enumeration<?> wildcardEnumeration95 = properties88.propertyNames();
        java.lang.Object obj97 = properties84.put((java.lang.Object) wildcardEnumeration95, (java.lang.Object) 10.0d);
        java.lang.Object obj98 = properties56.put((java.lang.Object) objEntrySet83, (java.lang.Object) properties84);
        java.lang.Object obj99 = properties0.putIfAbsent((java.lang.Object) atomikosProperties48, (java.lang.Object) properties84);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 50 + "'", int81 == 50);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objEntrySet83);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(strSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objCollection94);
        org.junit.Assert.assertNotNull(wildcardEnumeration95);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str26 = atomikosProperties16.getTransactionManagerUniqueName();
        boolean boolean27 = properties0.contains((java.lang.Object) str26);
        java.io.PrintWriter printWriter28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        boolean boolean30 = properties24.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxTimeout((long) '#');
        boolean boolean38 = atomikosProperties31.isEnableLogging();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Collection<java.lang.Object> objCollection47 = properties41.values();
        java.lang.Object obj48 = properties24.replace((java.lang.Object) atomikosProperties31, (java.lang.Object) objCollection47);
        boolean boolean50 = properties15.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection47, (java.lang.Object) 10.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        java.util.Set<java.lang.String> strSet57 = properties51.stringPropertyNames();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties58.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isForceShutdownOnVmExit();
        java.lang.Object obj73 = properties58.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties65);
        boolean boolean74 = atomikosProperties65.isSerialJtaTransactions();
        java.lang.Object obj75 = properties15.replace((java.lang.Object) properties51, (java.lang.Object) boolean74);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties51.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setMaxTimeout((long) '#');
        java.lang.String str84 = atomikosProperties77.getLogBaseDir();
        java.lang.Class<?> wildcardClass85 = atomikosProperties77.getClass();
        java.lang.Object obj86 = properties0.put((java.lang.Object) objEntrySet76, (java.lang.Object) wildcardClass85);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties72, (java.lang.Object) 1);
        java.io.Reader reader80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.load(reader80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + true + "'", obj79, true);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties7.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        java.lang.Object obj22 = properties7.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties14);
        atomikosProperties14.setForceShutdownOnVmExit(false);
        long long25 = atomikosProperties14.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.lang.String str31 = atomikosProperties27.getService();
        boolean boolean32 = atomikosProperties27.isEnableLogging();
        java.util.Properties properties33 = atomikosProperties27.asProperties();
        atomikosProperties27.setForceShutdownOnVmExit(true);
        atomikosProperties27.setMaxActives((int) (short) -1);
        atomikosProperties27.setMaxTimeout((long) ' ');
        boolean boolean40 = properties0.replace((java.lang.Object) long25, (java.lang.Object) (-1.0d), (java.lang.Object) atomikosProperties27);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.lang.Object obj47 = properties41.setProperty("", "hi!");
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection56 = properties55.values();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties55.keys();
        java.lang.Object obj58 = properties48.remove((java.lang.Object) properties55);
        java.lang.Object obj59 = properties41.get((java.lang.Object) properties55);
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties73 = atomikosProperties66.asProperties();
        int int74 = atomikosProperties66.getMaxActives();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        boolean boolean82 = properties75.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj83 = properties60.put((java.lang.Object) atomikosProperties66, (java.lang.Object) properties75);
        boolean boolean84 = properties55.containsKey((java.lang.Object) properties75);
        boolean boolean85 = properties0.containsKey((java.lang.Object) properties75);
        java.lang.String str88 = properties75.getProperty("", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str88, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        boolean boolean57 = properties56.isEmpty();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties56.contains((java.lang.Object) properties71);
        java.util.Properties properties82 = new java.util.Properties(properties71);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties83.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties83.entrySet();
        java.util.Properties properties91 = new java.util.Properties(properties83);
        java.util.Set<java.lang.Object> objSet92 = properties83.keySet();
        java.lang.Object obj93 = properties0.putIfAbsent((java.lang.Object) properties71, (java.lang.Object) properties83);
        java.io.PrintWriter printWriter94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.list(printWriter94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties17.isEmpty();
        java.lang.Object obj23 = properties17.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = properties9.remove((java.lang.Object) properties17, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        int int29 = properties28.size();
        int int30 = properties28.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj32 = properties28.get((java.lang.Object) properties31);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.lang.Object obj36 = properties31.setProperty("{{}={}}", "{=hi!}");
        java.io.InputStream inputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.loadFromXML(inputStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        long long16 = atomikosProperties0.getMaxTimeout();
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 35L + "'", long16 == 35L);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        int int22 = properties0.size();
        java.lang.String str24 = properties0.getProperty("hi!");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        java.lang.String str27 = properties0.toString();
        java.util.Properties properties28 = new java.util.Properties(properties0);
        java.io.Writer writer29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.store(writer29, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties23.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj30 = properties23.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.lang.Object obj45 = properties31.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet44);
        java.util.Set<java.lang.Object> objSet46 = properties31.keySet();
        boolean boolean47 = properties23.containsKey((java.lang.Object) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties31.elements();
        java.lang.Object obj51 = properties31.setProperty("", "");
        java.lang.Object obj52 = properties31.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setLogBaseName("{=hi!}");
        java.lang.String str60 = atomikosProperties53.getTransactionManagerUniqueName();
        java.util.Properties properties61 = atomikosProperties53.asProperties();
        boolean boolean62 = atomikosProperties53.isForceShutdownOnVmExit();
        atomikosProperties53.setDefaultJtaTimeout(1L);
        atomikosProperties53.setDefaultJtaTimeout((long) 2);
        java.lang.Object obj67 = properties0.putIfAbsent(obj52, (java.lang.Object) 2);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
// flaky:         org.junit.Assert.assertEquals(obj52.toString(), "{hi!=[], =}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{hi!=[], =}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{hi!=[], =}");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.io.InputStream inputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties15.replace((java.lang.Object) atomikosProperties22, (java.lang.Object) objCollection38);
        java.lang.Object obj40 = properties0.get((java.lang.Object) properties15);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream41, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives(9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        int int13 = properties0.size();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream14, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("{}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties15.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isThreadedTwoPhaseCommit();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        java.lang.String str31 = atomikosProperties25.getLogBaseName();
        long long32 = atomikosProperties25.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        boolean boolean38 = atomikosProperties33.isSerialJtaTransactions();
        boolean boolean39 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.String str40 = atomikosProperties33.getService();
        boolean boolean41 = atomikosProperties33.isThreadedTwoPhaseCommit();
        atomikosProperties33.setForceShutdownOnVmExit(false);
        java.lang.Object obj44 = properties15.put((java.lang.Object) long32, (java.lang.Object) false);
        java.lang.Object obj45 = properties15.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{300000=false}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{300000=false}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{300000=false}");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.save(outputStream14, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties5.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties5.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties13.getService();
        boolean boolean18 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setCheckpointInterval((long) (byte) 100);
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        boolean boolean22 = properties5.contains((java.lang.Object) atomikosProperties13);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.String str26 = properties0.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        boolean boolean23 = properties0.isEmpty();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.lang.String str32 = properties24.getProperty("hi!");
        java.lang.String str34 = properties24.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setEnableLogging(false);
        boolean boolean42 = properties24.containsKey((java.lang.Object) atomikosProperties35);
        atomikosProperties35.setService("tmlog");
        boolean boolean45 = properties0.contains((java.lang.Object) atomikosProperties35);
        java.util.Set<java.lang.Object> objSet46 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objSet46);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.lang.Object obj40 = properties26.put((java.lang.Object) properties29, (java.lang.Object) properties32);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Enumeration<?> wildcardEnumeration47 = properties42.propertyNames();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        boolean boolean56 = properties42.containsValue((java.lang.Object) objEntrySet55);
        boolean boolean57 = properties0.remove((java.lang.Object) properties29, (java.lang.Object) boolean56);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        atomikosProperties70.setThreadedTwoPhaseCommit(true);
        atomikosProperties70.setEnableLogging(false);
        boolean boolean77 = atomikosProperties70.isSerialJtaTransactions();
        int int78 = atomikosProperties70.getMaxActives();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet82 = properties79.stringPropertyNames();
        java.util.Properties properties83 = new java.util.Properties();
        java.util.Properties properties84 = new java.util.Properties();
        java.lang.Object obj86 = properties84.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet87 = properties84.stringPropertyNames();
        boolean boolean88 = properties83.containsValue((java.lang.Object) properties84);
        java.util.Collection<java.lang.Object> objCollection89 = properties83.values();
        java.util.Enumeration<?> wildcardEnumeration90 = properties83.propertyNames();
        java.lang.Object obj92 = properties79.put((java.lang.Object) wildcardEnumeration90, (java.lang.Object) 10.0d);
        java.lang.String str94 = properties79.getProperty("{=hi!}");
        java.lang.Object obj95 = properties58.put((java.lang.Object) atomikosProperties70, (java.lang.Object) "{=hi!}");
        boolean boolean96 = atomikosProperties70.isForceShutdownOnVmExit();
        java.lang.Object obj97 = properties29.get((java.lang.Object) atomikosProperties70);
        atomikosProperties70.setTransactionManagerUniqueName("{{}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objCollection89);
        org.junit.Assert.assertNotNull(wildcardEnumeration90);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        java.lang.Object obj49 = properties40.put((java.lang.Object) strSet47, (java.lang.Object) 0.0d);
        boolean boolean50 = properties0.equals((java.lang.Object) 0.0d);
        int int51 = properties0.size();
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<?> wildcardEnumeration25 = properties8.propertyNames();
        java.lang.Object obj26 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setEnableLogging(true);
        atomikosProperties27.setLogBaseName("{}");
        atomikosProperties27.setLogBaseName("tmlog");
        java.lang.String str43 = atomikosProperties27.getTransactionManagerUniqueName();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        int int48 = properties44.size();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        boolean boolean55 = properties44.containsKey((java.lang.Object) objSet54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties44.keys();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties57.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet64 = properties57.entrySet();
        boolean boolean66 = properties44.remove((java.lang.Object) properties57, (java.lang.Object) 1.0f);
        java.lang.Object obj67 = properties57.clone();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = properties8.replace(obj26, (java.lang.Object) str43, (java.lang.Object) properties57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEntrySet64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        java.lang.String str12 = atomikosProperties3.getService();
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str21 = atomikosProperties15.getLogBaseName();
        java.lang.String str22 = atomikosProperties15.getLogBaseName();
        boolean boolean23 = atomikosProperties15.isForceShutdownOnVmExit();
        long long24 = atomikosProperties15.getMaxTimeout();
        java.lang.Class<?> wildcardClass25 = atomikosProperties15.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setEnableLogging(false);
        boolean boolean33 = atomikosProperties26.isSerialJtaTransactions();
        int int34 = atomikosProperties26.getMaxActives();
        boolean boolean35 = atomikosProperties26.isSerialJtaTransactions();
        atomikosProperties26.setLogBaseDir("hi!");
        java.lang.Object obj38 = properties0.putIfAbsent((java.lang.Object) wildcardClass25, (java.lang.Object) atomikosProperties26);
        boolean boolean39 = properties0.isEmpty();
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream40, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        boolean boolean57 = properties56.isEmpty();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties56.contains((java.lang.Object) properties71);
        java.util.Properties properties82 = new java.util.Properties(properties71);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties83.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties83.entrySet();
        java.util.Properties properties91 = new java.util.Properties(properties83);
        java.util.Set<java.lang.Object> objSet92 = properties83.keySet();
        java.lang.Object obj93 = properties0.putIfAbsent((java.lang.Object) properties71, (java.lang.Object) properties83);
        java.util.Set<java.lang.Object> objSet94 = properties83.keySet();
        java.io.PrintStream printStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.list(printStream95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(objSet94);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.lang.Object obj17 = properties10.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties10.entrySet();
        boolean boolean19 = properties0.contains((java.lang.Object) properties10);
        java.lang.Object obj20 = properties10.clone();
        java.lang.String str23 = properties10.getProperty("{=hi!}", "{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{hi!=[]}" + "'", str23, "{hi!=[]}");
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties64.keySet();
        boolean boolean70 = properties64.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties64.entrySet();
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        boolean boolean75 = properties72.isEmpty();
        java.lang.Object obj78 = properties72.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        boolean boolean82 = properties64.remove((java.lang.Object) properties72, (java.lang.Object) atomikosProperties79);
        java.util.Properties properties83 = new java.util.Properties(properties72);
        int int84 = properties83.size();
        java.util.Enumeration<?> wildcardEnumeration85 = properties83.propertyNames();
        java.lang.Object obj86 = properties83.clone();
        java.util.Properties properties87 = new java.util.Properties();
        java.lang.Object obj89 = properties87.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties87.elements();
        boolean boolean91 = properties87.isEmpty();
        java.util.Set<java.lang.Object> objSet92 = properties87.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration93 = properties87.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet94 = properties87.entrySet();
        java.util.Properties properties95 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection96 = properties95.values();
        boolean boolean97 = properties13.replace(obj86, (java.lang.Object) properties87, (java.lang.Object) properties95);
        java.util.Enumeration<java.lang.Object> objEnumeration98 = properties87.keys();
        properties87.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNotNull(objEnumeration93);
        org.junit.Assert.assertNotNull(objEntrySet94);
        org.junit.Assert.assertNotNull(objCollection96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(objEnumeration98);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.store(outputStream50, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet9 = properties0.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet13 = properties10.stringPropertyNames();
        java.lang.String str14 = properties10.toString();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.io.Writer writer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer16, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.lang.Object obj63 = properties49.put((java.lang.Object) properties52, (java.lang.Object) properties55);
        java.lang.String str65 = properties52.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        long long73 = atomikosProperties66.getMaxTimeout();
        boolean boolean74 = properties52.containsValue((java.lang.Object) atomikosProperties66);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties52.elements();
        java.util.Set<java.lang.String> strSet76 = properties52.stringPropertyNames();
        boolean boolean77 = properties43.contains((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setEnableLogging(false);
        boolean boolean86 = atomikosProperties79.isSerialJtaTransactions();
        int int87 = atomikosProperties79.getMaxActives();
        boolean boolean88 = atomikosProperties79.isEnableLogging();
        long long89 = atomikosProperties79.getCheckpointInterval();
        java.util.Properties properties90 = atomikosProperties79.asProperties();
        atomikosProperties79.setForceShutdownOnVmExit(false);
        boolean boolean93 = atomikosProperties79.isSerialJtaTransactions();
        java.lang.Object obj94 = properties52.put((java.lang.Object) (byte) -1, (java.lang.Object) boolean93);
        java.lang.Object obj95 = properties0.get((java.lang.Object) boolean93);
        properties0.clear();
        properties0.clear();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 500L + "'", long89 == 500L);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        long long35 = atomikosProperties28.getCheckpointInterval();
        java.lang.String str36 = atomikosProperties28.getTransactionManagerUniqueName();
        atomikosProperties28.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties28.setSerialJtaTransactions(false);
        java.util.Properties properties41 = atomikosProperties28.asProperties();
        atomikosProperties28.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setMaxTimeout((long) '#');
        boolean boolean51 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setMaxActives((int) '#');
        atomikosProperties44.setSerialJtaTransactions(true);
        boolean boolean56 = atomikosProperties44.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass57 = atomikosProperties44.getClass();
        java.lang.Object obj58 = properties27.getOrDefault((java.lang.Object) atomikosProperties28, (java.lang.Object) atomikosProperties44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties27.entrySet();
        java.io.InputStream inputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties27.loadFromXML(inputStream60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNotNull(objEntrySet59);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.lang.Object obj30 = properties24.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = properties16.remove((java.lang.Object) properties24, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        int int36 = properties35.size();
        int int37 = properties35.size();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj39 = properties35.get((java.lang.Object) properties38);
        boolean boolean40 = properties0.containsValue((java.lang.Object) properties38);
        boolean boolean41 = properties38.isEmpty();
        java.util.Collection<java.lang.Object> objCollection42 = properties38.values();
        java.io.InputStream inputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.loadFromXML(inputStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objCollection42);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties34.clone();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties41.keys();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties48.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        java.lang.Object obj63 = properties48.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setForceShutdownOnVmExit(false);
        long long66 = atomikosProperties55.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.String str72 = atomikosProperties68.getService();
        boolean boolean73 = atomikosProperties68.isEnableLogging();
        java.util.Properties properties74 = atomikosProperties68.asProperties();
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setMaxActives((int) (short) -1);
        atomikosProperties68.setMaxTimeout((long) ' ');
        boolean boolean81 = properties41.replace((java.lang.Object) long66, (java.lang.Object) (-1.0d), (java.lang.Object) atomikosProperties68);
        boolean boolean82 = properties8.remove((java.lang.Object) properties34, (java.lang.Object) long66);
        java.lang.Object obj83 = properties8.clone();
        java.lang.String str86 = properties8.getProperty("hi!", "{{}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{hi!=[]}");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{{}={}}" + "'", str86, "{{}={}}");
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        boolean boolean13 = properties11.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        java.lang.String str21 = atomikosProperties14.getService();
        boolean boolean22 = properties11.containsKey((java.lang.Object) atomikosProperties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isEnableLogging();
        atomikosProperties23.setCheckpointInterval((long) 100);
        atomikosProperties23.setForceShutdownOnVmExit(false);
        boolean boolean35 = properties11.containsValue((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setService("{=hi!}");
        java.util.Properties properties38 = atomikosProperties23.asProperties();
        java.lang.Object obj39 = properties0.get((java.lang.Object) atomikosProperties23);
        java.util.Set<java.lang.Object> objSet40 = properties0.keySet();
        java.lang.Object obj41 = properties0.clone();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties55 = atomikosProperties48.asProperties();
        int int56 = atomikosProperties48.getMaxActives();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        boolean boolean64 = properties57.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj65 = properties42.put((java.lang.Object) atomikosProperties48, (java.lang.Object) properties57);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties57.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        boolean boolean70 = atomikosProperties67.isThreadedTwoPhaseCommit();
        atomikosProperties67.setTransactionManagerUniqueName("hi!");
        java.lang.String str73 = atomikosProperties67.getLogBaseName();
        long long74 = atomikosProperties67.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setSerialJtaTransactions(false);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        boolean boolean80 = atomikosProperties75.isSerialJtaTransactions();
        boolean boolean81 = atomikosProperties75.isForceShutdownOnVmExit();
        java.lang.String str82 = atomikosProperties75.getService();
        boolean boolean83 = atomikosProperties75.isThreadedTwoPhaseCommit();
        atomikosProperties75.setForceShutdownOnVmExit(false);
        java.lang.Object obj86 = properties57.put((java.lang.Object) long74, (java.lang.Object) false);
        java.util.Properties properties87 = new java.util.Properties();
        java.util.Properties properties88 = new java.util.Properties();
        java.lang.Object obj90 = properties88.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet91 = properties88.stringPropertyNames();
        boolean boolean92 = properties87.containsValue((java.lang.Object) properties88);
        java.util.Enumeration<?> wildcardEnumeration93 = properties87.propertyNames();
        java.lang.String str94 = properties87.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties87.elements();
        java.lang.Object obj96 = properties0.put((java.lang.Object) long74, (java.lang.Object) objEnumeration95);
        java.util.Set<java.lang.String> strSet97 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "{}" + "'", str94, "{}");
        org.junit.Assert.assertNotNull(objEnumeration95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNotNull(strSet97);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.lang.String str63 = properties55.getProperty("hi!");
        java.lang.String str65 = properties55.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setEnableLogging(false);
        boolean boolean73 = properties55.containsKey((java.lang.Object) atomikosProperties66);
        java.lang.Object obj76 = properties55.setProperty("hi!", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.lang.Class<?> wildcardClass78 = properties55.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet32 = properties14.keySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration40 = properties33.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties33.entrySet();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Enumeration<?> wildcardEnumeration56 = properties49.propertyNames();
        java.lang.Object obj58 = properties45.put((java.lang.Object) wildcardEnumeration56, (java.lang.Object) 10.0d);
        boolean boolean59 = properties43.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<?> wildcardEnumeration60 = properties43.propertyNames();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties14.elements();
        java.io.OutputStream outputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.store(outputStream63, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration62);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties27.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isForceShutdownOnVmExit();
        java.lang.Object obj42 = properties27.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties34);
        int int43 = atomikosProperties34.getMaxActives();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties44.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj51 = properties44.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet65);
        java.util.Set<java.lang.Object> objSet67 = properties52.keySet();
        boolean boolean68 = properties44.containsKey((java.lang.Object) properties52);
        java.util.Set<java.lang.String> strSet69 = properties52.stringPropertyNames();
        java.lang.String str70 = properties52.toString();
        boolean boolean71 = properties0.remove((java.lang.Object) atomikosProperties34, (java.lang.Object) properties52);
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties72.elements();
        boolean boolean76 = properties72.isEmpty();
        java.util.Set<java.lang.Object> objSet77 = properties72.keySet();
        boolean boolean79 = properties72.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection80 = properties72.values();
        java.lang.Object obj81 = properties72.clone();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        boolean boolean85 = properties82.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties82.elements();
        java.lang.Object obj89 = properties82.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties82.entrySet();
        boolean boolean91 = properties72.contains((java.lang.Object) properties82);
        boolean boolean92 = properties0.containsValue((java.lang.Object) boolean91);
        java.lang.Object obj93 = properties0.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{hi!=[]}" + "'", str70, "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "{}");
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "{}");
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties61);
        int int70 = properties36.size();
        int int71 = properties36.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties0.entrySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.lang.Object obj30 = properties16.put((java.lang.Object) properties19, (java.lang.Object) properties22);
        java.lang.String str32 = properties19.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        long long40 = atomikosProperties33.getMaxTimeout();
        boolean boolean41 = properties19.containsValue((java.lang.Object) atomikosProperties33);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Set<java.lang.String> strSet43 = properties19.stringPropertyNames();
        boolean boolean44 = properties10.contains((java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties19.elements();
        boolean boolean46 = properties0.equals((java.lang.Object) properties19);
        java.io.InputStream inputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.loadFromXML(inputStream47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        java.io.Writer writer26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer26, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.lang.Object obj28 = properties8.setProperty("", "");
        java.lang.String str31 = properties8.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "tmlog");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties10.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Set<java.lang.String> strSet17 = properties10.stringPropertyNames();
        boolean boolean18 = properties10.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Set<java.lang.String> strSet20 = properties10.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties10.elements();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        int int36 = atomikosProperties28.getMaxActives();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        boolean boolean44 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj45 = properties22.put((java.lang.Object) atomikosProperties28, (java.lang.Object) properties37);
        java.lang.String str46 = properties22.toString();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties47.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties47.elements();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties55.keys();
        java.lang.String str63 = properties55.getProperty("hi!");
        java.lang.String str65 = properties55.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setEnableLogging(false);
        boolean boolean73 = properties55.containsKey((java.lang.Object) atomikosProperties66);
        boolean boolean74 = properties47.containsKey((java.lang.Object) boolean73);
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        boolean boolean78 = properties75.isEmpty();
        java.lang.Object obj81 = properties75.setProperty("", "hi!");
        int int82 = properties75.size();
        java.lang.Object obj83 = properties22.replace((java.lang.Object) properties47, (java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties75.keys();
        boolean boolean85 = properties10.containsKey((java.lang.Object) properties75);
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties75.save(outputStream86, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Collection<java.lang.Object> objCollection54 = properties0.values();
        java.util.Set<java.lang.Object> objSet55 = properties0.keySet();
        java.io.PrintStream printStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(objSet55);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.save(outputStream20, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objCollection19);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        int int10 = properties0.size();
        boolean boolean11 = properties0.isEmpty();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream12, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Properties properties25 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = atomikosProperties26.isSerialJtaTransactions();
        atomikosProperties26.setTransactionManagerUniqueName("hi!");
        atomikosProperties26.setForceShutdownOnVmExit(false);
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str36 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setForceShutdownOnVmExit(true);
        boolean boolean39 = properties25.contains((java.lang.Object) atomikosProperties26);
        java.lang.Object obj40 = properties25.clone();
        java.lang.Class<?> wildcardClass41 = properties25.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        boolean boolean29 = atomikosProperties3.isSerialJtaTransactions();
        atomikosProperties3.setMaxTimeout(300000L);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties6.entrySet();
        java.util.Set<java.lang.String> strSet13 = properties6.stringPropertyNames();
        java.lang.Class<?> wildcardClass14 = properties6.getClass();
        java.lang.Object obj15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = properties0.replace((java.lang.Object) properties6, obj15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        atomikosProperties10.setLogBaseName("tmlog");
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties36.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        boolean boolean58 = properties26.replace((java.lang.Object) "hi!", (java.lang.Object) properties36, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet59 = properties36.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.util.Set<java.lang.String> strSet66 = properties60.stringPropertyNames();
        java.util.Set<java.lang.String> strSet67 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setEnableLogging(true);
        atomikosProperties68.setLogBaseName("{}");
        long long82 = atomikosProperties68.getDefaultJtaTimeout();
        java.lang.Object obj83 = properties36.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) atomikosProperties68);
        java.lang.Object obj84 = properties0.getOrDefault((java.lang.Object) "tmlog", obj83);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet85 = properties0.entrySet();
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream86, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 10000L + "'", long82 == 10000L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEntrySet85);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.lang.Object obj42 = properties18.replace((java.lang.Object) atomikosProperties25, (java.lang.Object) objCollection41);
        boolean boolean44 = properties9.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection41, (java.lang.Object) 10.0d);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        int int49 = properties45.size();
        java.util.Properties properties50 = new java.util.Properties(properties45);
        java.util.Set<java.lang.String> strSet51 = properties45.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties52.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setMaxTimeout((long) '#');
        boolean boolean66 = atomikosProperties59.isForceShutdownOnVmExit();
        java.lang.Object obj67 = properties52.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties59);
        boolean boolean68 = atomikosProperties59.isSerialJtaTransactions();
        java.lang.Object obj69 = properties9.replace((java.lang.Object) properties45, (java.lang.Object) boolean68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties45.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        boolean boolean82 = properties79.isEmpty();
        java.lang.Object obj85 = properties79.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        boolean boolean89 = properties71.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties86);
        java.util.Properties properties90 = new java.util.Properties(properties79);
        java.lang.Object obj91 = properties0.replace((java.lang.Object) objEntrySet70, (java.lang.Object) properties90);
        java.io.Writer writer92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties90.store(writer92, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        boolean boolean23 = properties15.equals((java.lang.Object) "");
        boolean boolean24 = properties0.contains((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.String str29 = atomikosProperties25.getService();
        boolean boolean30 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) 100);
        atomikosProperties25.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties25.setMaxTimeout(10000L);
        boolean boolean37 = atomikosProperties25.isForceShutdownOnVmExit();
        java.lang.Object obj38 = null;
        java.lang.Object obj39 = properties0.getOrDefault((java.lang.Object) atomikosProperties25, obj38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isForceShutdownOnVmExit();
        long long48 = atomikosProperties40.getDefaultJtaTimeout();
        atomikosProperties40.setService("tmlog");
        atomikosProperties40.setTransactionManagerUniqueName("");
        boolean boolean53 = properties0.equals((java.lang.Object) atomikosProperties40);
        java.lang.Class<?> wildcardClass54 = properties0.getClass();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        int int10 = properties0.size();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet15 = properties12.stringPropertyNames();
        boolean boolean16 = properties11.containsValue((java.lang.Object) properties12);
        java.util.Enumeration<?> wildcardEnumeration17 = properties12.propertyNames();
        java.util.Properties properties18 = new java.util.Properties(properties12);
        java.util.Set<java.lang.String> strSet19 = properties12.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setEnableLogging(false);
        boolean boolean27 = atomikosProperties20.isSerialJtaTransactions();
        int int28 = atomikosProperties20.getMaxActives();
        boolean boolean29 = atomikosProperties20.isEnableLogging();
        long long30 = atomikosProperties20.getCheckpointInterval();
        java.util.Properties properties31 = atomikosProperties20.asProperties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet40 = properties37.stringPropertyNames();
        boolean boolean41 = properties36.containsValue((java.lang.Object) properties37);
        java.util.Collection<java.lang.Object> objCollection42 = properties36.values();
        java.util.Enumeration<?> wildcardEnumeration43 = properties36.propertyNames();
        java.lang.Object obj45 = properties32.put((java.lang.Object) wildcardEnumeration43, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setMaxTimeout((long) '#');
        boolean boolean53 = atomikosProperties46.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj61 = properties32.getOrDefault((java.lang.Object) boolean53, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties62.keys();
        java.lang.String str70 = properties62.getProperty("hi!");
        java.lang.String str72 = properties62.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setEnableLogging(false);
        boolean boolean80 = properties62.containsKey((java.lang.Object) atomikosProperties73);
        boolean boolean81 = properties32.containsValue((java.lang.Object) properties62);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.lang.Object obj85 = properties31.setProperty("hi!", "{}");
        boolean boolean86 = properties0.remove((java.lang.Object) strSet19, (java.lang.Object) "hi!");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 500L + "'", long30 == 500L);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(wildcardEnumeration43);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        boolean boolean38 = properties19.isEmpty();
        java.io.Writer writer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.store(writer39, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties9.elements();
        java.io.InputStream inputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Set<java.lang.String> strSet27 = properties0.stringPropertyNames();
        java.io.InputStream inputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.lang.Object obj40 = properties26.put((java.lang.Object) properties29, (java.lang.Object) properties32);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Enumeration<?> wildcardEnumeration47 = properties42.propertyNames();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        boolean boolean56 = properties42.containsValue((java.lang.Object) objEntrySet55);
        boolean boolean57 = properties0.remove((java.lang.Object) properties29, (java.lang.Object) boolean56);
        java.lang.Object obj59 = properties0.remove((java.lang.Object) (-1L));
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties0.elements();
        java.io.InputStream inputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        java.lang.String str25 = atomikosProperties19.getTransactionManagerUniqueName();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        int int47 = properties45.size();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj49 = properties45.get((java.lang.Object) properties48);
        java.lang.Object obj50 = properties0.getOrDefault((java.lang.Object) atomikosProperties19, (java.lang.Object) properties48);
        java.lang.Object obj51 = null;
        boolean boolean52 = properties48.equals(obj51);
        java.io.PrintStream printStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties48.list(printStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((-1));
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        java.io.PrintWriter printWriter25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setMaxTimeout((long) 'a');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean29 = properties23.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties23.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.lang.String str36 = properties32.toString();
        java.lang.String str37 = properties32.toString();
        java.lang.String str39 = properties32.getProperty("{{}={}}");
        java.lang.Object obj40 = properties0.replace((java.lang.Object) objEnumeration31, (java.lang.Object) "{{}={}}");
        java.lang.String str42 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean43 = properties0.isEmpty();
        java.lang.Class<?> wildcardClass44 = properties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.lang.String str18 = properties0.getProperty("{}");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.util.Properties properties38 = atomikosProperties34.asProperties();
        java.lang.Object obj41 = properties38.setProperty("hi!", "");
        java.util.Properties properties42 = new java.util.Properties(properties38);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties49.entrySet();
        java.lang.Object obj57 = properties43.put((java.lang.Object) properties46, (java.lang.Object) properties49);
        java.lang.Object obj58 = properties19.putIfAbsent((java.lang.Object) properties42, (java.lang.Object) properties49);
        properties49.clear();
        java.lang.Object obj60 = properties0.get((java.lang.Object) properties49);
        java.io.OutputStream outputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.storeToXML(outputStream61, "tmlog", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.Object obj6 = null;
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.lang.Object obj12 = properties7.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet13 = properties7.stringPropertyNames();
        java.util.Properties properties14 = new java.util.Properties();
        boolean boolean16 = properties14.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setSerialJtaTransactions(false);
        java.lang.String str24 = atomikosProperties17.getService();
        boolean boolean25 = properties14.containsKey((java.lang.Object) atomikosProperties17);
        boolean boolean26 = properties7.containsKey((java.lang.Object) properties14);
        java.lang.String str28 = properties7.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties7.entrySet();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = properties0.remove(obj6, (java.lang.Object) objEntrySet29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(objEntrySet29);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setSerialJtaTransactions(false);
        java.lang.String str33 = atomikosProperties26.getService();
        atomikosProperties26.setMaxTimeout(1L);
        java.lang.String str36 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Enumeration<?> wildcardEnumeration46 = properties39.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties39.entrySet();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) objEntrySet47);
        java.lang.String str51 = properties0.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{hi!=[]}" + "'", str51, "{hi!=[]}");
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        java.lang.String str26 = atomikosProperties20.getLogBaseName();
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.Object obj44 = properties29.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties47);
        java.util.Properties properties49 = atomikosProperties20.asProperties();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties49);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.util.Set<java.lang.String> strSet28 = properties24.stringPropertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        java.lang.String str33 = properties29.toString();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.lang.Object obj41 = properties34.setProperty("tmlog", "");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.lang.Object obj43 = properties15.replace((java.lang.Object) strSet28, (java.lang.Object) properties29);
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.save(outputStream44, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        int int11 = atomikosProperties0.getMaxActives();
        int int12 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout(10000L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        boolean boolean34 = properties0.remove((java.lang.Object) str32, (java.lang.Object) 1.0d);
        java.io.InputStream inputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.String str29 = atomikosProperties12.getLogBaseName();
        boolean boolean30 = atomikosProperties12.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream8, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.keys();
        java.io.PrintStream printStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        java.lang.String str37 = atomikosProperties30.getLogBaseDir();
        boolean boolean38 = atomikosProperties30.isThreadedTwoPhaseCommit();
        java.lang.Object obj39 = properties19.get((java.lang.Object) boolean38);
        java.io.Writer writer40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.store(writer40, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.Object obj45 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setLogBaseName("{=hi!}");
        java.lang.String str53 = atomikosProperties46.getTransactionManagerUniqueName();
        java.util.Properties properties54 = atomikosProperties46.asProperties();
        boolean boolean55 = atomikosProperties46.isForceShutdownOnVmExit();
        atomikosProperties46.setDefaultJtaTimeout(1L);
        java.lang.String str58 = atomikosProperties46.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = properties44.put(obj45, (java.lang.Object) str58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.lang.String str16 = properties8.getProperty("hi!");
        java.lang.String str18 = properties8.getProperty("");
        java.lang.Object obj20 = properties0.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.String str23 = properties0.getProperty("{hi!=[], {}={}}", "{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{hi!=[]}" + "'", str23, "{hi!=[]}");
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.io.PrintWriter printWriter14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.list(printWriter14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<?> wildcardEnumeration17 = properties0.propertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        int int22 = properties18.size();
        java.util.Properties properties23 = new java.util.Properties(properties18);
        boolean boolean24 = properties23.isEmpty();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        int int29 = properties25.size();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean36 = properties25.containsKey((java.lang.Object) objSet35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties25.keys();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties38.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        boolean boolean47 = properties25.remove((java.lang.Object) properties38, (java.lang.Object) 1.0f);
        boolean boolean48 = properties23.contains((java.lang.Object) properties38);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties38);
        java.io.OutputStream outputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream50, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties29 = atomikosProperties23.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = atomikosProperties30.isSerialJtaTransactions();
        atomikosProperties30.setTransactionManagerUniqueName("hi!");
        boolean boolean36 = atomikosProperties30.isEnableLogging();
        java.lang.String str37 = atomikosProperties30.getTransactionManagerUniqueName();
        atomikosProperties30.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        int int48 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setService("hi!");
        long long51 = atomikosProperties40.getMaxTimeout();
        atomikosProperties40.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties54 = atomikosProperties40.asProperties();
        java.lang.Object obj55 = properties29.getOrDefault((java.lang.Object) atomikosProperties30, (java.lang.Object) properties54);
        java.util.Properties properties56 = atomikosProperties30.asProperties();
        boolean boolean57 = properties0.containsValue((java.lang.Object) atomikosProperties30);
        boolean boolean58 = atomikosProperties30.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        java.util.Properties properties4 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.save(outputStream5, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection3);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.lang.String str8 = properties0.getProperty("{=hi!}", "{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{hi!=[]}" + "'", str8, "{hi!=[]}");
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        boolean boolean12 = properties7.containsValue((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.lang.Object obj21 = properties7.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet20);
        java.util.Set<java.lang.Object> objSet22 = properties7.keySet();
        boolean boolean24 = properties0.remove((java.lang.Object) properties7, (java.lang.Object) 10);
        java.io.Reader reader25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(reader25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        boolean boolean21 = properties19.contains((java.lang.Object) 100.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties30.isEmpty();
        java.lang.Object obj36 = properties30.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = properties22.remove((java.lang.Object) properties30, (java.lang.Object) atomikosProperties37);
        boolean boolean41 = properties19.equals((java.lang.Object) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration44 = properties19.propertyNames();
        boolean boolean45 = properties0.containsValue((java.lang.Object) wildcardEnumeration44);
        java.lang.Object obj46 = properties0.clone();
        java.io.Reader reader47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.io.InputStream inputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        boolean boolean9 = atomikosProperties6.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties6.getService();
        boolean boolean11 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties12 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet13 = properties12.stringPropertyNames();
        boolean boolean14 = properties12.isEmpty();
        boolean boolean15 = properties12.isEmpty();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration19 = properties16.propertyNames();
        boolean boolean20 = properties12.containsValue((java.lang.Object) wildcardEnumeration19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        atomikosProperties21.setEnableLogging(false);
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        atomikosProperties21.setCheckpointInterval((long) 1);
        java.util.Properties properties31 = atomikosProperties21.asProperties();
        java.lang.Object obj32 = properties5.putIfAbsent((java.lang.Object) properties12, (java.lang.Object) properties31);
        java.lang.String str35 = properties12.getProperty("{{}={}}", "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{hi!=[]}" + "'", str35, "{hi!=[]}");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties0.keySet();
        java.lang.String str20 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        boolean boolean28 = atomikosProperties21.isEnableLogging();
        atomikosProperties21.setMaxActives((int) '#');
        atomikosProperties21.setSerialJtaTransactions(true);
        boolean boolean33 = atomikosProperties21.isThreadedTwoPhaseCommit();
        atomikosProperties21.setCheckpointInterval(300000L);
        long long36 = atomikosProperties21.getCheckpointInterval();
        java.lang.Object obj37 = properties0.get((java.lang.Object) long36);
        java.io.PrintStream printStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isForceShutdownOnVmExit();
        boolean boolean33 = atomikosProperties22.isEnableLogging();
        java.lang.String str34 = atomikosProperties22.getService();
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str15 = properties12.getProperty("{{}=tmlog}", "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = properties8.size();
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 9 + "'", int9 == 9);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        boolean boolean9 = atomikosProperties6.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties6.getService();
        boolean boolean11 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties12 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet13 = properties12.stringPropertyNames();
        boolean boolean14 = properties12.isEmpty();
        boolean boolean15 = properties12.isEmpty();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration19 = properties16.propertyNames();
        boolean boolean20 = properties12.containsValue((java.lang.Object) wildcardEnumeration19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        atomikosProperties21.setEnableLogging(false);
        java.util.Properties properties28 = atomikosProperties21.asProperties();
        atomikosProperties21.setCheckpointInterval((long) 1);
        java.util.Properties properties31 = atomikosProperties21.asProperties();
        java.lang.Object obj32 = properties5.putIfAbsent((java.lang.Object) properties12, (java.lang.Object) properties31);
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.save(outputStream33, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(wildcardEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("");
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) (-1));
        boolean boolean17 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval(32L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        properties30.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isEnableLogging();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setEnableLogging(true);
        atomikosProperties41.setLogBaseDir("");
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        boolean boolean58 = properties55.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties55.elements();
        java.lang.Object obj62 = properties55.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties55.entrySet();
        java.lang.Object obj64 = properties30.getOrDefault((java.lang.Object) "", (java.lang.Object) properties55);
        java.io.Writer writer65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.store(writer65, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        boolean boolean38 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties19.keySet();
        java.lang.Object obj40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = properties19.contains(obj40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.store(writer7, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties10.keys();
        java.lang.String str18 = properties10.getProperty("hi!");
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        int int24 = properties20.size();
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties20.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        boolean boolean32 = properties27.containsValue((java.lang.Object) properties28);
        java.util.Collection<java.lang.Object> objCollection33 = properties27.values();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.lang.Object obj41 = properties27.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet40);
        boolean boolean42 = properties10.replace((java.lang.Object) "hi!", (java.lang.Object) properties20, (java.lang.Object) "hi!");
        java.lang.String str44 = properties20.getProperty("{=hi!}");
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.lang.Object obj59 = properties45.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet58);
        java.util.Set<java.lang.Object> objSet60 = properties45.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        boolean boolean68 = atomikosProperties61.isEnableLogging();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setEnableLogging(true);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties73.elements();
        java.lang.Object obj79 = properties45.replace((java.lang.Object) true, (java.lang.Object) properties73);
        boolean boolean80 = properties20.equals((java.lang.Object) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties20.elements();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.io.Reader reader83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.load(reader83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEnumeration81);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        java.util.Collection<java.lang.Object> objCollection54 = properties14.values();
        java.lang.String str57 = properties14.getProperty("{{}=tmlog}", "{{}=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{{}=tmlog}" + "'", str57, "{{}=tmlog}");
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        java.lang.String str29 = atomikosProperties21.getLogBaseDir();
        java.lang.String str30 = atomikosProperties21.getService();
        long long31 = atomikosProperties21.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str39 = atomikosProperties35.getService();
        boolean boolean40 = atomikosProperties35.isEnableLogging();
        atomikosProperties35.setCheckpointInterval((long) (byte) 100);
        atomikosProperties35.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Enumeration<?> wildcardEnumeration52 = properties45.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties45.entrySet();
        java.lang.Object obj54 = properties0.replace((java.lang.Object) "{=hi!}", (java.lang.Object) properties45);
        java.io.Reader reader55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.load(reader55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        properties0.clear();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.lang.Object obj59 = properties45.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        boolean boolean63 = atomikosProperties60.isSerialJtaTransactions();
        java.util.Properties properties64 = atomikosProperties60.asProperties();
        java.lang.Object obj67 = properties64.setProperty("hi!", "");
        java.util.Properties properties68 = new java.util.Properties(properties64);
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.lang.Object> objSet80 = properties75.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties75.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties75.entrySet();
        java.lang.Object obj83 = properties69.put((java.lang.Object) properties72, (java.lang.Object) properties75);
        java.lang.Object obj84 = properties45.putIfAbsent((java.lang.Object) properties68, (java.lang.Object) properties75);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream86, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties(properties8);
        java.io.PrintWriter printWriter16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printWriter16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        java.util.Properties properties67 = atomikosProperties55.asProperties();
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties67.store(outputStream68, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(properties67);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties29.isSerialJtaTransactions();
        java.util.Properties properties33 = atomikosProperties29.asProperties();
        java.lang.Object obj36 = properties33.setProperty("hi!", "");
        java.util.Properties properties37 = new java.util.Properties(properties33);
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties44.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties44.entrySet();
        java.lang.Object obj52 = properties38.put((java.lang.Object) properties41, (java.lang.Object) properties44);
        java.lang.Object obj53 = properties14.putIfAbsent((java.lang.Object) properties37, (java.lang.Object) properties44);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection58 = properties57.values();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties57.keys();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties60.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties60.entrySet();
        java.lang.Object obj68 = properties54.put((java.lang.Object) properties57, (java.lang.Object) properties60);
        java.lang.String str70 = properties57.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        long long78 = atomikosProperties71.getMaxTimeout();
        boolean boolean79 = properties57.containsValue((java.lang.Object) atomikosProperties71);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties57.elements();
        java.util.Set<java.lang.String> strSet81 = properties57.stringPropertyNames();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties82.elements();
        boolean boolean86 = properties82.isEmpty();
        java.util.Set<java.lang.Object> objSet87 = properties82.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties82.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties82.elements();
        java.lang.Object obj90 = properties14.putIfAbsent((java.lang.Object) properties57, (java.lang.Object) objEnumeration89);
        boolean boolean91 = properties0.containsValue((java.lang.Object) properties57);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet92 = properties57.entrySet();
        java.io.OutputStream outputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties57.save(outputStream93, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(objSet87);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objEntrySet92);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Enumeration<?> wildcardEnumeration21 = properties16.propertyNames();
        java.util.Properties properties22 = new java.util.Properties(properties16);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj24 = properties5.clone();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{tmlog=}");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        java.lang.String str10 = atomikosProperties4.getLogBaseName();
        java.lang.String str11 = atomikosProperties4.getLogBaseName();
        java.lang.Object obj12 = properties0.get((java.lang.Object) str11);
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        properties0.clear();
        java.lang.String str31 = properties0.toString();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties32.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setMaxTimeout((long) '#');
        boolean boolean46 = atomikosProperties39.isForceShutdownOnVmExit();
        java.lang.Object obj47 = properties32.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties39);
        atomikosProperties39.setForceShutdownOnVmExit(false);
        long long50 = atomikosProperties39.getDefaultJtaTimeout();
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setLogBaseName("{}");
        atomikosProperties39.setMaxTimeout((long) (short) -1);
        atomikosProperties39.setCheckpointInterval((long) (byte) 1);
        java.lang.String str59 = atomikosProperties39.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        boolean boolean65 = atomikosProperties60.isForceShutdownOnVmExit();
        java.lang.String str66 = atomikosProperties60.getTransactionManagerUniqueName();
        atomikosProperties60.setLogBaseName("{}");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = properties0.put((java.lang.Object) str59, (java.lang.Object) atomikosProperties60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10000L + "'", long50 == 10000L);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str19 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setMaxTimeout((long) 35);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseDir("{{}={}}");
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.Object obj17 = properties14.setProperty("{{}={}}", "{{}=tmlog}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet15 = properties0.stringPropertyNames();
        boolean boolean16 = properties0.isEmpty();
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream17, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties21.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.lang.Object obj29 = properties15.put((java.lang.Object) properties18, (java.lang.Object) properties21);
        java.lang.Object obj30 = properties18.clone();
        boolean boolean31 = properties0.containsKey((java.lang.Object) properties18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties18.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties18.elements();
        java.io.OutputStream outputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream34, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.lang.String str64 = properties43.toString();
        java.io.OutputStream outputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties43.storeToXML(outputStream65, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{hi!=[]}" + "'", str64, "{hi!=[]}");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str14 = atomikosProperties0.getService();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        java.io.Writer writer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer6, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet5);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.lang.String str6 = properties0.toString();
        java.lang.Object obj9 = properties0.replace((java.lang.Object) 10000L, (java.lang.Object) 50);
        java.io.PrintWriter printWriter10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{{}={}}" + "'", str6, "{{}={}}");
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setService("{}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setSerialJtaTransactions(false);
        java.lang.String str33 = atomikosProperties26.getService();
        atomikosProperties26.setMaxTimeout(1L);
        java.lang.String str36 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Enumeration<?> wildcardEnumeration46 = properties39.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties39.entrySet();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) objEntrySet47);
        java.io.Writer writer49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer49, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream27, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.lang.Object obj41 = properties27.put((java.lang.Object) properties30, (java.lang.Object) properties33);
        java.lang.Object obj42 = properties30.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setCheckpointInterval((long) 100);
        atomikosProperties43.setSerialJtaTransactions(true);
        boolean boolean55 = properties30.equals((java.lang.Object) atomikosProperties43);
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Collection<java.lang.Object> objCollection58 = properties56.values();
        java.lang.String str61 = properties56.getProperty("tmlog", "{tmlog=}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{tmlog=}" + "'", str61, "{tmlog=}");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection5 = properties0.values();
        java.io.PrintStream printStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection5);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Set<java.lang.Object> objSet33 = properties28.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties28.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties28.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties40.containsKey((java.lang.Object) objSet50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties40.keys();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties53.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties53.entrySet();
        boolean boolean62 = properties40.remove((java.lang.Object) properties53, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration63 = properties53.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties71 = atomikosProperties64.asProperties();
        java.util.Set<java.lang.String> strSet72 = properties71.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet73 = properties71.keySet();
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties74.elements();
        boolean boolean78 = properties74.isEmpty();
        java.util.Set<java.lang.Object> objSet79 = properties74.keySet();
        boolean boolean80 = properties74.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties74.entrySet();
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.remove((java.lang.Object) 0.0d);
        boolean boolean85 = properties82.isEmpty();
        java.lang.Object obj88 = properties82.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties89.setSerialJtaTransactions(false);
        boolean boolean92 = properties74.remove((java.lang.Object) properties82, (java.lang.Object) atomikosProperties89);
        atomikosProperties89.setSerialJtaTransactions(false);
        java.lang.Object obj95 = properties53.put((java.lang.Object) objSet73, (java.lang.Object) false);
        java.lang.Object obj96 = properties28.replace((java.lang.Object) atomikosProperties36, (java.lang.Object) properties53);
        boolean boolean97 = properties0.equals((java.lang.Object) atomikosProperties36);
        java.io.PrintWriter printWriter98 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration63);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        properties35.clear();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Set<java.lang.String> strSet55 = properties51.stringPropertyNames();
        java.lang.Object obj56 = properties35.get((java.lang.Object) properties51);
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.storeToXML(outputStream57, "{hi!=[]}", "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.load(inputStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setMaxTimeout((long) '#');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        int int38 = properties0.size();
        java.io.Writer writer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer39, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties10.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Set<java.lang.String> strSet17 = properties10.stringPropertyNames();
        boolean boolean18 = properties10.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.io.InputStream inputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        properties0.clear();
        java.lang.Object obj8 = null;
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties9.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj16 = properties9.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        boolean boolean33 = properties9.containsKey((java.lang.Object) properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties17.elements();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        boolean boolean46 = properties35.containsKey((java.lang.Object) objSet45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setEnableLogging(false);
        boolean boolean54 = atomikosProperties47.isSerialJtaTransactions();
        int int55 = atomikosProperties47.getMaxActives();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet59 = properties56.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Enumeration<?> wildcardEnumeration67 = properties60.propertyNames();
        java.lang.Object obj69 = properties56.put((java.lang.Object) wildcardEnumeration67, (java.lang.Object) 10.0d);
        java.lang.String str71 = properties56.getProperty("{=hi!}");
        java.lang.Object obj72 = properties35.put((java.lang.Object) atomikosProperties47, (java.lang.Object) "{=hi!}");
        atomikosProperties47.setForceShutdownOnVmExit(false);
        atomikosProperties47.setService("{{}={}}");
        atomikosProperties47.setEnableLogging(true);
        boolean boolean79 = properties17.equals((java.lang.Object) true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj80 = properties0.replace(obj8, (java.lang.Object) boolean79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNotNull(wildcardEnumeration67);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        int int25 = properties0.size();
        java.io.PrintStream printStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        boolean boolean9 = properties0.isEmpty();
        int int10 = properties0.size();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        boolean boolean17 = properties11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties19.isEmpty();
        java.lang.Object obj25 = properties19.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = properties11.remove((java.lang.Object) properties19, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        int int31 = properties30.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        java.lang.String str39 = atomikosProperties33.getTransactionManagerUniqueName();
        boolean boolean40 = properties30.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setMaxActives((int) (short) -1);
        boolean boolean43 = atomikosProperties33.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        java.lang.String str48 = atomikosProperties44.getService();
        boolean boolean49 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setCheckpointInterval((long) (byte) 100);
        atomikosProperties44.setLogBaseDir("tmlog");
        java.lang.Object obj54 = properties0.replace((java.lang.Object) atomikosProperties33, (java.lang.Object) "tmlog");
        java.io.Writer writer55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer55, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.io.Reader reader66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.load(reader66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        java.io.PrintWriter printWriter20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printWriter20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Object obj12 = properties9.setProperty("{}", "{}");
        java.io.PrintWriter printWriter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printWriter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(outputStream27, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        int int22 = properties0.size();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        java.lang.Object obj38 = properties23.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties30);
        boolean boolean39 = atomikosProperties30.isSerialJtaTransactions();
        boolean boolean40 = properties0.containsValue((java.lang.Object) boolean39);
        java.util.Set<java.lang.Object> objSet41 = properties0.keySet();
        java.io.PrintWriter printWriter42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.lang.Object obj24 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) objCollection23);
        java.lang.String str25 = atomikosProperties7.getService();
        long long26 = atomikosProperties7.getCheckpointInterval();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.io.PrintStream printStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("tmlog");
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxActives((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str21 = atomikosProperties15.getLogBaseName();
        java.lang.String str22 = atomikosProperties15.getLogBaseName();
        boolean boolean23 = atomikosProperties15.isForceShutdownOnVmExit();
        long long24 = atomikosProperties15.getMaxTimeout();
        java.lang.Class<?> wildcardClass25 = atomikosProperties15.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setEnableLogging(false);
        boolean boolean33 = atomikosProperties26.isSerialJtaTransactions();
        int int34 = atomikosProperties26.getMaxActives();
        boolean boolean35 = atomikosProperties26.isSerialJtaTransactions();
        atomikosProperties26.setLogBaseDir("hi!");
        java.lang.Object obj38 = properties0.putIfAbsent((java.lang.Object) wildcardClass25, (java.lang.Object) atomikosProperties26);
        boolean boolean39 = properties0.isEmpty();
        java.lang.Object obj40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = properties0.containsValue(obj40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.lang.String str34 = properties10.getProperty("{=hi!}");
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.store(outputStream35, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str4 = properties0.getProperty("");
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj12 = null;
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        int int17 = properties13.size();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties13.containsKey((java.lang.Object) objSet23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setEnableLogging(false);
        boolean boolean32 = atomikosProperties25.isSerialJtaTransactions();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        boolean boolean43 = properties38.containsValue((java.lang.Object) properties39);
        java.util.Collection<java.lang.Object> objCollection44 = properties38.values();
        java.util.Enumeration<?> wildcardEnumeration45 = properties38.propertyNames();
        java.lang.Object obj47 = properties34.put((java.lang.Object) wildcardEnumeration45, (java.lang.Object) 10.0d);
        java.lang.String str49 = properties34.getProperty("{=hi!}");
        java.lang.Object obj50 = properties13.put((java.lang.Object) atomikosProperties25, (java.lang.Object) "{=hi!}");
        atomikosProperties25.setForceShutdownOnVmExit(false);
        atomikosProperties25.setService("{{}={}}");
        atomikosProperties25.setEnableLogging(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = properties0.getOrDefault(obj12, (java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(wildcardEnumeration45);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        boolean boolean26 = properties23.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties0.entrySet();
        java.lang.String str30 = properties0.getProperty("");
        java.io.PrintWriter printWriter31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Set<java.lang.String> strSet8 = properties1.stringPropertyNames();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.lang.Object obj26 = properties12.put((java.lang.Object) properties15, (java.lang.Object) properties18);
        java.lang.String str28 = properties15.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        long long36 = atomikosProperties29.getMaxTimeout();
        boolean boolean37 = properties15.containsValue((java.lang.Object) atomikosProperties29);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties15.elements();
        java.util.Set<java.lang.String> strSet39 = properties15.stringPropertyNames();
        java.lang.Object obj40 = properties9.get((java.lang.Object) properties15);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        int int45 = properties41.size();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties41.containsKey((java.lang.Object) objSet51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties41.keys();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties54.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties54.entrySet();
        boolean boolean63 = properties41.remove((java.lang.Object) properties54, (java.lang.Object) 1.0f);
        java.lang.Object obj64 = properties54.clone();
        java.util.Collection<java.lang.Object> objCollection65 = properties54.values();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = properties1.replace(obj40, (java.lang.Object) properties54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertNotNull(objCollection65);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.lang.Object obj36 = properties0.put((java.lang.Object) false, (java.lang.Object) boolean35);
        java.lang.Object obj37 = properties0.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties0.entrySet();
        java.io.PrintStream printStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(objEntrySet38);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.io.Writer writer62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.store(writer62, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        java.io.OutputStream outputStream36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream36, "{{}=tmlog}", "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxTimeout((long) 100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream12, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long7 = atomikosProperties0.getMaxTimeout();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        long long9 = atomikosProperties0.getMaxTimeout();
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties13.values();
        java.util.Set<java.lang.Object> objSet26 = properties13.keySet();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream27, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objSet26);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        java.io.PrintWriter printWriter50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.list(printWriter50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Enumeration<?> wildcardEnumeration31 = properties26.propertyNames();
        java.util.Properties properties32 = new java.util.Properties(properties26);
        java.util.Set<java.lang.String> strSet33 = properties32.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection42 = properties34.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties34.entrySet();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection54 = properties53.values();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties53.keys();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties56.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties56.entrySet();
        java.lang.Object obj64 = properties50.put((java.lang.Object) properties53, (java.lang.Object) properties56);
        java.lang.String str66 = properties53.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        long long74 = atomikosProperties67.getMaxTimeout();
        boolean boolean75 = properties53.containsValue((java.lang.Object) atomikosProperties67);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties53.elements();
        java.util.Set<java.lang.String> strSet77 = properties53.stringPropertyNames();
        boolean boolean78 = properties44.contains((java.lang.Object) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties53.elements();
        boolean boolean80 = properties34.equals((java.lang.Object) properties53);
        java.lang.Object obj81 = properties0.replace((java.lang.Object) properties32, (java.lang.Object) properties34);
        java.io.OutputStream outputStream82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream82, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        java.lang.String str26 = atomikosProperties20.getLogBaseName();
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.Object obj44 = properties29.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties47);
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties47.storeToXML(outputStream49, "{{}={}}", "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }
}
