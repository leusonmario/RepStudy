import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test4001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4001");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.lang.String str32 = properties24.getProperty("hi!");
        java.lang.String str34 = properties24.getProperty("");
        java.lang.Object obj36 = properties16.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj39 = properties16.setProperty("tmlog", "{true=true}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        boolean boolean50 = atomikosProperties40.isSerialJtaTransactions();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties51.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties59.keys();
        java.lang.String str67 = properties59.getProperty("hi!");
        java.lang.String str69 = properties59.getProperty("");
        java.lang.Object obj71 = properties51.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.lang.Object obj72 = properties51.clone();
        boolean boolean73 = properties16.remove((java.lang.Object) atomikosProperties40, (java.lang.Object) properties51);
        boolean boolean74 = properties15.containsKey((java.lang.Object) boolean73);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{=100.0}");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test4002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4002");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getService();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("{=hi!}");
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("{true=true}");
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test4003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4003");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties1.keys();
        java.util.Set<java.lang.Object> objSet9 = properties1.keySet();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objSet9);
    }

    @Test
    public void test4004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4004");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(1L);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test4005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4005");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        int int28 = atomikosProperties20.getMaxActives();
        atomikosProperties20.setService("hi!");
        java.lang.Object obj31 = properties16.get((java.lang.Object) atomikosProperties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        java.util.Properties properties51 = new java.util.Properties(properties40);
        int int52 = properties51.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str58 = atomikosProperties54.getService();
        boolean boolean59 = atomikosProperties54.isEnableLogging();
        java.lang.String str60 = atomikosProperties54.getTransactionManagerUniqueName();
        boolean boolean61 = properties51.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties62.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties62.entrySet();
        java.lang.Object obj69 = properties51.remove((java.lang.Object) objEntrySet68);
        boolean boolean70 = properties51.isEmpty();
        java.lang.String str71 = properties51.toString();
        properties51.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties51.elements();
        java.lang.Object obj74 = properties0.replace((java.lang.Object) properties16, (java.lang.Object) properties51);
        boolean boolean75 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean79 = atomikosProperties76.isSerialJtaTransactions();
        atomikosProperties76.setTransactionManagerUniqueName("hi!");
        java.lang.String str82 = atomikosProperties76.getLogBaseName();
        java.lang.String str83 = atomikosProperties76.getLogBaseName();
        boolean boolean84 = atomikosProperties76.isSerialJtaTransactions();
        long long85 = atomikosProperties76.getMaxTimeout();
        java.lang.String str86 = atomikosProperties76.getLogBaseName();
        java.lang.Object obj87 = properties16.get((java.lang.Object) atomikosProperties76);
        java.util.Properties properties88 = atomikosProperties76.asProperties();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tmlog" + "'", str82, "tmlog");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tmlog" + "'", str83, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 300000L + "'", long85 == 300000L);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "tmlog" + "'", str86, "tmlog");
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(properties88);
    }

    @Test
    public void test4006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4006");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str19 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setMaxActives(50);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.lang.String str23 = atomikosProperties15.getService();
        atomikosProperties15.setSerialJtaTransactions(true);
        int int26 = atomikosProperties15.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
    }

    @Test
    public void test4007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4007");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test4008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4008");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties11.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        int int25 = atomikosProperties17.getMaxActives();
        java.lang.Object obj26 = properties11.remove((java.lang.Object) int25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties11.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.Object obj41 = properties28.put((java.lang.Object) wildcardEnumeration39, (java.lang.Object) 10.0d);
        java.lang.Object obj42 = properties0.put((java.lang.Object) objEntrySet27, (java.lang.Object) properties28);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        boolean boolean49 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties43.entrySet();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.lang.Object obj57 = properties51.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        boolean boolean61 = properties43.remove((java.lang.Object) properties51, (java.lang.Object) atomikosProperties58);
        java.util.Properties properties62 = new java.util.Properties(properties51);
        int int63 = properties62.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = atomikosProperties65.isSerialJtaTransactions();
        java.lang.String str69 = atomikosProperties65.getService();
        boolean boolean70 = atomikosProperties65.isEnableLogging();
        java.lang.String str71 = atomikosProperties65.getTransactionManagerUniqueName();
        boolean boolean72 = properties62.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setMaxActives((int) (short) -1);
        boolean boolean75 = atomikosProperties65.isForceShutdownOnVmExit();
        boolean boolean76 = atomikosProperties65.isEnableLogging();
        long long77 = atomikosProperties65.getDefaultJtaTimeout();
        java.lang.Object obj78 = properties0.remove((java.lang.Object) long77);
        java.lang.String str79 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setSerialJtaTransactions(false);
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        atomikosProperties80.setEnableLogging(false);
        atomikosProperties80.setForceShutdownOnVmExit(true);
        boolean boolean89 = atomikosProperties80.isSerialJtaTransactions();
        java.util.Properties properties90 = atomikosProperties80.asProperties();
        atomikosProperties80.setThreadedTwoPhaseCommit(false);
        atomikosProperties80.setLogBaseName("{{}=tmlog}");
        java.lang.Object obj95 = properties0.get((java.lang.Object) "{{}=tmlog}");
        java.io.PrintWriter printWriter96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10000L + "'", long77 == 10000L);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test4009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4009");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test4010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4010");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long13 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str15 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test4011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4011");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.lang.Object obj30 = properties24.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = properties16.remove((java.lang.Object) properties24, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        int int36 = properties35.size();
        int int37 = properties35.size();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj39 = properties35.get((java.lang.Object) properties38);
        boolean boolean40 = properties0.containsValue((java.lang.Object) properties38);
        boolean boolean41 = properties38.isEmpty();
        java.util.Collection<java.lang.Object> objCollection42 = properties38.values();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.io.PrintWriter printWriter44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.list(printWriter44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objSet43);
    }

    @Test
    public void test4012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4012");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        int int70 = atomikosProperties62.getMaxActives();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean78 = properties71.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj79 = properties56.put((java.lang.Object) atomikosProperties62, (java.lang.Object) properties71);
        properties56.clear();
        java.lang.Object obj81 = properties33.remove((java.lang.Object) properties56);
        java.lang.Object obj84 = properties33.setProperty("{[]=0.0}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.OutputStream outputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.storeToXML(outputStream85, "{{}=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test4013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4013");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str19 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setMaxActives(50);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.lang.String str23 = atomikosProperties15.getService();
        atomikosProperties15.setSerialJtaTransactions(true);
        atomikosProperties15.setDefaultJtaTimeout((long) ' ');
        java.util.Properties properties28 = atomikosProperties15.asProperties();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(properties28);
    }

    @Test
    public void test4014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4014");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        java.util.Set<java.lang.String> strSet50 = properties35.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties(properties35);
        java.util.Properties properties52 = new java.util.Properties();
        boolean boolean54 = properties52.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setSerialJtaTransactions(false);
        java.lang.String str62 = atomikosProperties55.getService();
        boolean boolean63 = properties52.containsKey((java.lang.Object) atomikosProperties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setSerialJtaTransactions(false);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        atomikosProperties64.setMaxTimeout((long) '#');
        boolean boolean71 = atomikosProperties64.isEnableLogging();
        atomikosProperties64.setCheckpointInterval((long) 100);
        atomikosProperties64.setForceShutdownOnVmExit(false);
        boolean boolean76 = properties52.containsValue((java.lang.Object) atomikosProperties64);
        atomikosProperties64.setService("{=hi!}");
        java.util.Properties properties79 = atomikosProperties64.asProperties();
        java.util.Properties properties80 = new java.util.Properties();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet84 = properties81.stringPropertyNames();
        boolean boolean85 = properties80.containsValue((java.lang.Object) properties81);
        java.util.Collection<java.lang.Object> objCollection86 = properties80.values();
        boolean boolean87 = properties80.isEmpty();
        boolean boolean88 = properties79.equals((java.lang.Object) properties80);
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        java.io.InputStream inputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.load(inputStream90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test4015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4015");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.elements();
        java.io.Reader reader22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(reader22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objEnumeration21);
    }

    @Test
    public void test4016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4016");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int7 = atomikosProperties0.getMaxActives();
        long long8 = atomikosProperties0.getMaxTimeout();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval(0L);
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test4017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4017");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str19 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test4018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4018");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean21 = properties18.contains((java.lang.Object) 35);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties18.elements();
        java.lang.String str24 = properties18.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setMaxActives((int) '#');
        atomikosProperties25.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties25.getTransactionManagerUniqueName();
        long long38 = atomikosProperties25.getDefaultJtaTimeout();
        int int39 = atomikosProperties25.getMaxActives();
        java.lang.Object obj40 = properties18.remove((java.lang.Object) atomikosProperties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = atomikosProperties41.isSerialJtaTransactions();
        int int49 = atomikosProperties41.getMaxActives();
        atomikosProperties41.setMaxActives((int) (byte) 0);
        boolean boolean52 = properties18.contains((java.lang.Object) (byte) 0);
        java.lang.Object obj53 = properties18.clone();
        java.lang.String str55 = properties18.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.loadFromXML(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 35 + "'", int39 == 35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals(obj53.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test4019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4019");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        long long6 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
    }

    @Test
    public void test4020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4020");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setTransactionManagerUniqueName("hi!");
        java.lang.String str29 = atomikosProperties23.getLogBaseName();
        java.lang.String str30 = atomikosProperties23.getLogBaseName();
        boolean boolean31 = atomikosProperties23.isForceShutdownOnVmExit();
        long long32 = atomikosProperties23.getCheckpointInterval();
        boolean boolean33 = atomikosProperties23.isThreadedTwoPhaseCommit();
        boolean boolean34 = atomikosProperties23.isThreadedTwoPhaseCommit();
        boolean boolean35 = atomikosProperties23.isForceShutdownOnVmExit();
        java.lang.Object obj36 = properties22.remove((java.lang.Object) atomikosProperties23);
        java.io.InputStream inputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.loadFromXML(inputStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 500L + "'", long32 == 500L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test4021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4021");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.Object obj13 = properties7.put((java.lang.Object) 10, (java.lang.Object) false);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        java.lang.String str30 = properties22.getProperty("hi!");
        java.lang.String str32 = properties22.getProperty("");
        java.lang.Object obj34 = properties14.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setCheckpointInterval((long) 10);
        atomikosProperties42.setSerialJtaTransactions(true);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        boolean boolean53 = properties50.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties50.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties50.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxTimeout((long) '#');
        boolean boolean63 = atomikosProperties56.isForceShutdownOnVmExit();
        int int64 = atomikosProperties56.getMaxActives();
        java.lang.Object obj65 = properties50.remove((java.lang.Object) int64);
        boolean boolean66 = properties14.replace((java.lang.Object) strSet41, (java.lang.Object) true, (java.lang.Object) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties50.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setEnableLogging(false);
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setMaxTimeout(0L);
        long long79 = atomikosProperties68.getDefaultJtaTimeout();
        long long80 = atomikosProperties68.getMaxTimeout();
        int int81 = atomikosProperties68.getMaxActives();
        java.lang.Object obj82 = properties7.replace((java.lang.Object) properties50, (java.lang.Object) atomikosProperties68);
        java.util.Collection<java.lang.Object> objCollection83 = properties7.values();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 10000L + "'", long79 == 10000L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 50 + "'", int81 == 50);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objCollection83);
    }

    @Test
    public void test4022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4022");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.Object> objSet19 = properties18.keySet();
        java.util.Set<java.lang.Object> objSet20 = properties18.keySet();
        java.lang.Object obj23 = properties18.setProperty("", "");
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.storeToXML(outputStream24, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test4023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4023");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        boolean boolean46 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        java.util.Properties properties51 = atomikosProperties47.asProperties();
        java.lang.Object obj54 = properties51.setProperty("hi!", "");
        java.util.Properties properties55 = new java.util.Properties(properties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties51.entrySet();
        java.lang.Object obj57 = properties51.clone();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        boolean boolean64 = properties58.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isEnableLogging();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet79 = properties76.stringPropertyNames();
        boolean boolean80 = properties75.containsValue((java.lang.Object) properties76);
        java.util.Collection<java.lang.Object> objCollection81 = properties75.values();
        java.lang.Object obj82 = properties58.replace((java.lang.Object) atomikosProperties65, (java.lang.Object) objCollection81);
        int int83 = properties58.size();
        java.util.Properties properties84 = new java.util.Properties(properties58);
        boolean boolean85 = properties36.remove(obj57, (java.lang.Object) properties84);
        java.util.Set<java.lang.Object> objSet86 = properties36.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(obj57);
// flaky:         org.junit.Assert.assertEquals(obj57.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objCollection81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objSet86);
    }

    @Test
    public void test4024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4024");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setForceShutdownOnVmExit(true);
        java.util.Properties properties27 = atomikosProperties16.asProperties();
        boolean boolean28 = properties0.containsValue((java.lang.Object) atomikosProperties16);
        java.lang.String str29 = atomikosProperties16.getLogBaseName();
        atomikosProperties16.setMaxActives((int) (short) 0);
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setDefaultJtaTimeout(500L);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
    }

    @Test
    public void test4025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4025");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        boolean boolean51 = properties31.contains((java.lang.Object) atomikosProperties47);
        boolean boolean52 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.setMaxActives((int) (byte) 10);
        atomikosProperties47.setMaxTimeout((long) 2);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test4026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4026");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test4027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4027");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.lang.String str9 = properties0.getProperty("hi!");
        boolean boolean10 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties0.keys();
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test4028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4028");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setEnableLogging(true);
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test4029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4029");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test4030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4030");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test4031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4031");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("{=hi!}");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test4032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4032");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str12 = atomikosProperties0.getService();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test4033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4033");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.keys();
        properties1.clear();
        java.lang.String str5 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isEnableLogging();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setCheckpointInterval(0L);
        java.lang.String str18 = atomikosProperties6.getService();
        boolean boolean19 = atomikosProperties6.isForceShutdownOnVmExit();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        int int34 = atomikosProperties26.getMaxActives();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean42 = properties35.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties20.put((java.lang.Object) atomikosProperties26, (java.lang.Object) properties35);
        boolean boolean44 = properties1.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties45 = new java.util.Properties();
        boolean boolean47 = properties45.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setSerialJtaTransactions(false);
        java.lang.String str55 = atomikosProperties48.getService();
        boolean boolean56 = properties45.containsKey((java.lang.Object) atomikosProperties48);
        java.lang.String str57 = atomikosProperties48.getService();
        java.lang.Object obj58 = properties0.getOrDefault((java.lang.Object) properties1, (java.lang.Object) str57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        atomikosProperties59.setLogBaseName("hi!");
        long long69 = atomikosProperties59.getDefaultJtaTimeout();
        boolean boolean70 = atomikosProperties59.isThreadedTwoPhaseCommit();
        java.lang.Object obj71 = properties1.remove((java.lang.Object) atomikosProperties59);
        properties1.clear();
        java.util.Set<java.lang.Object> objSet73 = properties1.keySet();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10000L + "'", long69 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objSet73);
    }

    @Test
    public void test4034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4034");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties19.isSerialJtaTransactions();
        atomikosProperties19.setTransactionManagerUniqueName("hi!");
        java.lang.String str25 = atomikosProperties19.getTransactionManagerUniqueName();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        int int47 = properties45.size();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj49 = properties45.get((java.lang.Object) properties48);
        java.lang.Object obj50 = properties0.getOrDefault((java.lang.Object) atomikosProperties19, (java.lang.Object) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        int int59 = atomikosProperties51.getMaxActives();
        atomikosProperties51.setService("hi!");
        long long62 = atomikosProperties51.getMaxTimeout();
        atomikosProperties51.setTransactionManagerUniqueName("hi!");
        atomikosProperties51.setEnableLogging(false);
        atomikosProperties51.setDefaultJtaTimeout(10L);
        java.lang.String str69 = atomikosProperties51.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = atomikosProperties70.isSerialJtaTransactions();
        java.lang.String str74 = atomikosProperties70.getService();
        boolean boolean75 = atomikosProperties70.isEnableLogging();
        atomikosProperties70.setCheckpointInterval((long) (byte) 100);
        java.lang.String str78 = atomikosProperties70.getLogBaseName();
        atomikosProperties70.setTransactionManagerUniqueName("tmlog");
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean83 = atomikosProperties70.isForceShutdownOnVmExit();
        atomikosProperties70.setMaxActives(100);
        java.util.Properties properties86 = atomikosProperties70.asProperties();
        java.lang.Object obj87 = properties0.replace((java.lang.Object) str69, (java.lang.Object) atomikosProperties70);
        java.lang.String str88 = properties0.toString();
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream89, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tmlog" + "'", str78, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "{}" + "'", str88, "{}");
    }

    @Test
    public void test4035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4035");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        java.util.Properties properties67 = atomikosProperties55.asProperties();
        atomikosProperties55.setTransactionManagerUniqueName("tmlog");
        atomikosProperties55.setMaxActives((int) (short) 1);
        long long72 = atomikosProperties55.getDefaultJtaTimeout();
        long long73 = atomikosProperties55.getMaxTimeout();
        atomikosProperties55.setDefaultJtaTimeout(0L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 10000L + "'", long72 == 10000L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 35L + "'", long73 == 35L);
    }

    @Test
    public void test4036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4036");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        boolean boolean29 = atomikosProperties21.isEnableLogging();
        java.lang.String str30 = atomikosProperties21.getLogBaseDir();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test4037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4037");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        boolean boolean38 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.lang.Object obj46 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = properties32.remove((java.lang.Object) properties40, (java.lang.Object) atomikosProperties47);
        boolean boolean51 = properties31.contains((java.lang.Object) atomikosProperties47);
        java.lang.String str52 = atomikosProperties47.getService();
        boolean boolean53 = atomikosProperties47.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test4038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4038");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.lang.String str34 = properties8.toString();
        properties8.clear();
        java.util.Enumeration<?> wildcardEnumeration36 = properties8.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{hi!=[]}" + "'", str34, "{hi!=[]}");
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
    }

    @Test
    public void test4039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4039");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = atomikosProperties23.isSerialJtaTransactions();
        java.util.Properties properties27 = atomikosProperties23.asProperties();
        java.lang.Object obj30 = properties27.setProperty("hi!", "");
        java.util.Properties properties31 = new java.util.Properties(properties27);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection36 = properties35.values();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties38.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties38.entrySet();
        java.lang.Object obj46 = properties32.put((java.lang.Object) properties35, (java.lang.Object) properties38);
        java.lang.Object obj47 = properties8.putIfAbsent((java.lang.Object) properties31, (java.lang.Object) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setSerialJtaTransactions(false);
        java.lang.String str55 = atomikosProperties48.getService();
        java.util.Properties properties56 = atomikosProperties48.asProperties();
        java.lang.Object obj57 = properties0.replace((java.lang.Object) properties8, (java.lang.Object) atomikosProperties48);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties85 = atomikosProperties78.asProperties();
        int int86 = atomikosProperties78.getMaxActives();
        atomikosProperties78.setService("hi!");
        long long89 = atomikosProperties78.getMaxTimeout();
        atomikosProperties78.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties92 = atomikosProperties78.asProperties();
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties92);
        java.lang.Object obj94 = properties0.get((java.lang.Object) properties72);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet95 = properties0.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 300000L + "'", long89 == 300000L);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(objEntrySet95);
    }

    @Test
    public void test4040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4040");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        properties35.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties35.keys();
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.store(outputStream52, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration51);
    }

    @Test
    public void test4041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4041");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<?> wildcardEnumeration23 = properties3.propertyNames();
        java.lang.String str25 = properties3.getProperty("{=hi!}");
        java.lang.String str26 = properties3.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        atomikosProperties27.setTransactionManagerUniqueName("hi!");
        java.lang.String str33 = atomikosProperties27.getLogBaseName();
        java.lang.String str34 = atomikosProperties27.getLogBaseName();
        boolean boolean35 = atomikosProperties27.isSerialJtaTransactions();
        atomikosProperties27.setLogBaseDir("tmlog");
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties38.keys();
        java.lang.Object obj41 = properties3.replace((java.lang.Object) "tmlog", (java.lang.Object) properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties38.elements();
        java.io.PrintStream printStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.list(printStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test4042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4042");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isForceShutdownOnVmExit();
        atomikosProperties9.setCheckpointInterval((long) '4');
        java.util.Properties properties19 = atomikosProperties9.asProperties();
        java.util.Properties properties20 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        long long28 = atomikosProperties21.getCheckpointInterval();
        java.lang.String str29 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties32 = atomikosProperties21.asProperties();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        java.lang.Object obj47 = properties33.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet46);
        java.util.Set<java.lang.Object> objSet48 = properties33.keySet();
        java.util.Set<java.lang.Object> objSet49 = properties33.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties33.entrySet();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean56 = properties51.containsValue((java.lang.Object) atomikosProperties55);
        java.lang.String str58 = properties51.getProperty("tmlog");
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        boolean boolean60 = properties32.contains((java.lang.Object) properties33);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.lang.Object obj67 = properties61.clone();
        java.lang.Class<?> wildcardClass68 = properties61.getClass();
        boolean boolean69 = properties0.replace((java.lang.Object) properties20, (java.lang.Object) properties32, (java.lang.Object) properties61);
        java.util.Set<java.lang.Object> objSet70 = properties20.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objSet70);
    }

    @Test
    public void test4043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4043");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.io.PrintStream printStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test4044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4044");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        int int16 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test4045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4045");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.lang.String str25 = properties0.getProperty("{tmlog=}");
        java.lang.Object obj26 = properties0.clone();
        java.util.Properties properties27 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties27.storeToXML(outputStream28, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{[]=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
    }

    @Test
    public void test4046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4046");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setDefaultJtaTimeout(10000L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test4047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4047");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        int int22 = properties0.size();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        java.lang.Object obj38 = properties23.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties30);
        boolean boolean39 = atomikosProperties30.isSerialJtaTransactions();
        boolean boolean40 = properties0.containsValue((java.lang.Object) boolean39);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream41, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test4048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4048");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        int int21 = atomikosProperties13.getMaxActives();
        atomikosProperties13.setService("hi!");
        long long24 = atomikosProperties13.getMaxTimeout();
        atomikosProperties13.setTransactionManagerUniqueName("hi!");
        atomikosProperties13.setForceShutdownOnVmExit(false);
        java.lang.String str29 = atomikosProperties13.getService();
        int int30 = atomikosProperties13.getMaxActives();
        java.lang.String str31 = atomikosProperties13.getLogBaseDir();
        boolean boolean32 = properties0.equals((java.lang.Object) atomikosProperties13);
        java.util.Set<java.lang.Object> objSet33 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objSet33);
    }

    @Test
    public void test4049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4049");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{=hi!}");
        java.util.Properties properties10 = new java.util.Properties(properties0);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        boolean boolean17 = properties11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties19.isEmpty();
        java.lang.Object obj25 = properties19.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        boolean boolean29 = properties11.remove((java.lang.Object) properties19, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        int int31 = properties30.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        java.lang.String str39 = atomikosProperties33.getTransactionManagerUniqueName();
        boolean boolean40 = properties30.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        boolean boolean43 = properties0.equals((java.lang.Object) atomikosProperties33);
        java.lang.String str44 = atomikosProperties33.getLogBaseDir();
        atomikosProperties33.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties33.setLogBaseName("");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test4050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4050");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        boolean boolean38 = atomikosProperties33.isSerialJtaTransactions();
        boolean boolean39 = atomikosProperties33.isForceShutdownOnVmExit();
        atomikosProperties33.setSerialJtaTransactions(true);
        atomikosProperties33.setCheckpointInterval((long) '#');
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        boolean boolean49 = properties44.containsValue((java.lang.Object) properties45);
        java.util.Collection<java.lang.Object> objCollection50 = properties44.values();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        java.lang.Object obj58 = properties44.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet57);
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties59.keys();
        boolean boolean67 = properties59.equals((java.lang.Object) "");
        boolean boolean68 = properties44.contains((java.lang.Object) properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = atomikosProperties69.isSerialJtaTransactions();
        java.lang.String str73 = atomikosProperties69.getService();
        boolean boolean74 = atomikosProperties69.isEnableLogging();
        atomikosProperties69.setCheckpointInterval((long) (byte) 100);
        atomikosProperties69.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties69.setMaxTimeout(10000L);
        boolean boolean81 = atomikosProperties69.isForceShutdownOnVmExit();
        java.lang.Object obj82 = null;
        java.lang.Object obj83 = properties44.getOrDefault((java.lang.Object) atomikosProperties69, obj82);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setSerialJtaTransactions(false);
        atomikosProperties84.setThreadedTwoPhaseCommit(true);
        atomikosProperties84.setMaxTimeout((long) '#');
        boolean boolean91 = atomikosProperties84.isForceShutdownOnVmExit();
        long long92 = atomikosProperties84.getDefaultJtaTimeout();
        atomikosProperties84.setService("tmlog");
        atomikosProperties84.setTransactionManagerUniqueName("");
        boolean boolean97 = properties44.equals((java.lang.Object) atomikosProperties84);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet98 = properties44.entrySet();
        java.lang.Object obj99 = properties31.replace((java.lang.Object) atomikosProperties33, (java.lang.Object) properties44);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 10000L + "'", long92 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(objEntrySet98);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test4051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4051");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties13.values();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties(properties26);
        java.lang.Object obj35 = properties13.get((java.lang.Object) properties26);
        java.util.Set<java.lang.String> strSet36 = properties13.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test4052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4052");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setMaxActives((int) (byte) 100);
        atomikosProperties9.setForceShutdownOnVmExit(false);
        boolean boolean23 = atomikosProperties9.isThreadedTwoPhaseCommit();
        boolean boolean24 = atomikosProperties9.isForceShutdownOnVmExit();
        boolean boolean25 = atomikosProperties9.isSerialJtaTransactions();
        boolean boolean26 = properties7.equals((java.lang.Object) boolean25);
        java.util.Properties properties27 = new java.util.Properties(properties7);
        java.lang.String str29 = properties27.getProperty("{{{}={}}={}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test4053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4053");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass13 = properties12.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test4054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4054");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties13.values();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties(properties26);
        java.lang.Object obj35 = properties13.get((java.lang.Object) properties26);
        java.util.Properties properties36 = new java.util.Properties(properties26);
        java.io.Writer writer37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.store(writer37, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test4055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4055");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.lang.Object obj26 = properties12.put((java.lang.Object) properties15, (java.lang.Object) properties18);
        java.lang.Object obj27 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        atomikosProperties28.setCheckpointInterval((long) 100);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean40 = properties15.equals((java.lang.Object) atomikosProperties28);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.elements();
        boolean boolean47 = properties15.containsKey((java.lang.Object) properties41);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        boolean boolean54 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.lang.Object obj62 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        boolean boolean66 = properties48.remove((java.lang.Object) properties56, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties67 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.Object obj69 = properties67.clone();
        java.lang.Object obj70 = properties11.getOrDefault((java.lang.Object) properties41, (java.lang.Object) properties67);
        java.util.Set<java.lang.String> strSet71 = properties41.stringPropertyNames();
        java.util.Properties properties72 = new java.util.Properties(properties41);
        boolean boolean73 = properties72.isEmpty();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test4056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4056");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str39 = atomikosProperties35.getService();
        boolean boolean40 = atomikosProperties35.isEnableLogging();
        java.util.Properties properties41 = atomikosProperties35.asProperties();
        java.util.Enumeration<?> wildcardEnumeration42 = properties41.propertyNames();
        java.lang.Object obj43 = properties0.remove((java.lang.Object) wildcardEnumeration42);
        java.util.Set<java.lang.Object> objSet44 = properties0.keySet();
        java.lang.String str45 = properties0.toString();
        java.lang.String str47 = properties0.getProperty("{true=true}");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{hi!=[]}" + "'", str45, "{hi!=[]}");
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test4057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4057");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.lang.String str10 = properties0.getProperty("");
        java.util.Properties properties11 = new java.util.Properties(properties0);
        boolean boolean12 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test4058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4058");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties5.containsKey((java.lang.Object) objSet15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties5.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        boolean boolean27 = properties5.remove((java.lang.Object) properties18, (java.lang.Object) 1.0f);
        boolean boolean28 = properties18.isEmpty();
        boolean boolean30 = properties0.remove((java.lang.Object) properties18, (java.lang.Object) 100);
        int int31 = properties0.size();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet40 = properties37.stringPropertyNames();
        boolean boolean41 = properties36.containsValue((java.lang.Object) properties37);
        java.util.Collection<java.lang.Object> objCollection42 = properties36.values();
        java.util.Enumeration<?> wildcardEnumeration43 = properties36.propertyNames();
        java.lang.Object obj45 = properties32.put((java.lang.Object) wildcardEnumeration43, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setMaxTimeout((long) '#');
        boolean boolean53 = atomikosProperties46.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj61 = properties32.getOrDefault((java.lang.Object) boolean53, (java.lang.Object) atomikosProperties54);
        long long62 = atomikosProperties54.getMaxTimeout();
        java.util.Properties properties63 = atomikosProperties54.asProperties();
        boolean boolean64 = properties0.containsValue((java.lang.Object) properties63);
        java.io.InputStream inputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(wildcardEnumeration43);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test4059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4059");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        boolean boolean8 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str9 = atomikosProperties5.getService();
        atomikosProperties5.setEnableLogging(false);
        java.util.Properties properties12 = atomikosProperties5.asProperties();
        atomikosProperties5.setCheckpointInterval((long) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        atomikosProperties15.setCheckpointInterval((long) (byte) 100);
        java.lang.Class<?> wildcardClass23 = atomikosProperties15.getClass();
        java.lang.Object obj24 = properties0.getOrDefault((java.lang.Object) atomikosProperties5, (java.lang.Object) wildcardClass23);
        java.io.PrintStream printStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "class org.springframework.boot.jta.atomikos.AtomikosProperties");
    }

    @Test
    public void test4060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4060");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setMaxActives((int) '#');
        atomikosProperties5.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties5.getTransactionManagerUniqueName();
        boolean boolean18 = atomikosProperties5.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setEnableLogging(false);
        boolean boolean26 = atomikosProperties19.isSerialJtaTransactions();
        int int27 = atomikosProperties19.getMaxActives();
        boolean boolean28 = atomikosProperties19.isSerialJtaTransactions();
        java.lang.String str29 = atomikosProperties19.getService();
        atomikosProperties19.setLogBaseDir("{}");
        java.lang.String str32 = atomikosProperties19.getLogBaseName();
        java.lang.Object obj33 = properties0.getOrDefault((java.lang.Object) boolean18, (java.lang.Object) str32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.lang.Object obj41 = properties34.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        boolean boolean45 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setTransactionManagerUniqueName("hi!");
        atomikosProperties42.setForceShutdownOnVmExit(false);
        atomikosProperties42.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str52 = atomikosProperties42.getTransactionManagerUniqueName();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        boolean boolean58 = properties53.containsValue((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection59 = properties53.values();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.lang.Object obj67 = properties53.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet66);
        java.util.Set<java.lang.Object> objSet68 = properties53.keySet();
        java.util.Set<java.lang.Object> objSet69 = properties53.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties53.entrySet();
        java.util.Set<java.lang.Object> objSet71 = properties53.keySet();
        java.lang.Object obj72 = properties34.replace((java.lang.Object) atomikosProperties42, (java.lang.Object) properties53);
        java.util.Properties properties73 = atomikosProperties42.asProperties();
        boolean boolean74 = atomikosProperties42.isSerialJtaTransactions();
        boolean boolean75 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setTransactionManagerUniqueName("{}");
        java.lang.Object obj78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj79 = properties0.putIfAbsent((java.lang.Object) "{}", obj78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + "tmlog" + "'", obj33, "tmlog");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test4061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4061");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str20 = properties0.getProperty("tmlog");
        java.util.Set<java.lang.Object> objSet21 = properties0.keySet();
        java.io.Writer writer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objSet21);
    }

    @Test
    public void test4062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4062");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        atomikosProperties0.setMaxActives(10);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long19 = atomikosProperties0.getMaxTimeout();
        java.lang.String str20 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 35L + "'", long19 == 35L);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test4063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4063");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Collection<java.lang.Object> objCollection25 = properties8.values();
        java.util.Set<java.lang.Object> objSet26 = properties8.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Enumeration<?> wildcardEnumeration38 = properties31.propertyNames();
        java.lang.Object obj40 = properties27.put((java.lang.Object) wildcardEnumeration38, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet41 = properties27.stringPropertyNames();
        java.util.Set<java.lang.String> strSet42 = properties27.stringPropertyNames();
        boolean boolean43 = properties27.isEmpty();
        boolean boolean44 = properties27.isEmpty();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection49 = properties48.values();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties48.keys();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties51.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.lang.Object obj59 = properties45.put((java.lang.Object) properties48, (java.lang.Object) properties51);
        java.lang.Object obj60 = properties48.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        boolean boolean68 = atomikosProperties61.isEnableLogging();
        atomikosProperties61.setCheckpointInterval((long) 100);
        atomikosProperties61.setSerialJtaTransactions(true);
        boolean boolean73 = properties48.equals((java.lang.Object) atomikosProperties61);
        java.util.Enumeration<?> wildcardEnumeration74 = properties48.propertyNames();
        java.lang.Object obj75 = properties48.clone();
        java.lang.Object obj76 = properties27.get((java.lang.Object) properties48);
        java.lang.Object obj77 = properties8.remove((java.lang.Object) properties27);
        java.lang.String str78 = properties8.toString();
        java.lang.Object obj79 = null;
        java.util.Properties properties80 = new java.util.Properties();
        java.lang.Object obj82 = properties80.remove((java.lang.Object) 0.0d);
        boolean boolean83 = properties80.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties80.elements();
        properties80.clear();
        int int86 = properties80.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = properties8.remove(obj79, (java.lang.Object) int86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "{}");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{hi!=[]}" + "'", str78, "{hi!=[]}");
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test4064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4064");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties5.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties5.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties13.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties13.getService();
        boolean boolean18 = atomikosProperties13.isEnableLogging();
        atomikosProperties13.setCheckpointInterval((long) (byte) 100);
        java.lang.String str21 = atomikosProperties13.getLogBaseName();
        boolean boolean22 = properties5.contains((java.lang.Object) atomikosProperties13);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj26 = properties0.setProperty("{=hi!}", "");
        java.util.Collection<java.lang.Object> objCollection27 = properties0.values();
        properties0.clear();
        java.util.Set<java.lang.String> strSet29 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test4065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4065");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties0.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties23.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj30 = properties23.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        boolean boolean36 = properties31.containsValue((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.lang.Object obj45 = properties31.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet44);
        java.util.Set<java.lang.Object> objSet46 = properties31.keySet();
        boolean boolean47 = properties23.containsKey((java.lang.Object) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties31.elements();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        boolean boolean55 = properties49.isEmpty();
        boolean boolean56 = properties31.contains((java.lang.Object) boolean55);
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        boolean boolean64 = properties57.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection65 = properties57.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setLogBaseName("{=hi!}");
        java.lang.Object obj73 = properties31.put((java.lang.Object) objCollection65, (java.lang.Object) atomikosProperties66);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        properties31.clear();
        java.util.Set<java.lang.Object> objSet76 = properties31.keySet();
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.storeToXML(outputStream77, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objSet76);
    }

    @Test
    public void test4066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4066");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 50);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj9 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setCheckpointInterval(0L);
        atomikosProperties10.setTransactionManagerUniqueName("{}");
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean28 = properties8.containsKey((java.lang.Object) atomikosProperties10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=50, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test4067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4067");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Collection<java.lang.Object> objCollection28 = properties0.values();
        int int29 = properties0.size();
        java.util.Properties properties30 = new java.util.Properties();
        boolean boolean32 = properties30.contains((java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean39 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.lang.Object obj47 = properties41.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = properties33.remove((java.lang.Object) properties41, (java.lang.Object) atomikosProperties48);
        boolean boolean52 = properties30.equals((java.lang.Object) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties30.elements();
        java.util.Collection<java.lang.Object> objCollection54 = properties30.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setEnableLogging(true);
        java.lang.String str67 = atomikosProperties55.getTransactionManagerUniqueName();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        java.lang.String str70 = atomikosProperties55.getService();
        java.lang.Object obj71 = properties0.replace((java.lang.Object) properties30, (java.lang.Object) atomikosProperties55);
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream72, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test4068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4068");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) 0);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties10.containsValue((java.lang.Object) "hi!");
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration26 = properties19.propertyNames();
        java.lang.Object obj28 = properties15.put((java.lang.Object) wildcardEnumeration26, (java.lang.Object) 10.0d);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        boolean boolean35 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        boolean boolean40 = properties37.isEmpty();
        java.lang.Object obj43 = properties37.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = properties29.remove((java.lang.Object) properties37, (java.lang.Object) atomikosProperties44);
        java.util.Properties properties48 = new java.util.Properties(properties37);
        int int49 = properties48.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.String str55 = atomikosProperties51.getService();
        boolean boolean56 = atomikosProperties51.isEnableLogging();
        java.lang.String str57 = atomikosProperties51.getTransactionManagerUniqueName();
        boolean boolean58 = properties48.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        atomikosProperties59.setEnableLogging(false);
        boolean boolean66 = atomikosProperties59.isSerialJtaTransactions();
        int int67 = atomikosProperties59.getMaxActives();
        boolean boolean68 = atomikosProperties59.isSerialJtaTransactions();
        boolean boolean69 = properties15.remove((java.lang.Object) properties48, (java.lang.Object) boolean68);
        java.lang.Object obj70 = properties10.get((java.lang.Object) properties15);
        java.lang.Object obj71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = properties9.replace((java.lang.Object) properties15, obj71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test4069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4069");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        boolean boolean12 = properties9.isEmpty();
        java.lang.Object obj15 = properties9.setProperty("", "hi!");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.lang.Object obj26 = properties16.remove((java.lang.Object) properties23);
        java.lang.Object obj27 = properties9.get((java.lang.Object) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties23.keys();
        java.lang.Object obj29 = properties0.get((java.lang.Object) properties23);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet34 = properties31.stringPropertyNames();
        boolean boolean35 = properties30.containsValue((java.lang.Object) properties31);
        java.util.Enumeration<?> wildcardEnumeration36 = properties30.propertyNames();
        java.lang.Object obj37 = properties0.remove((java.lang.Object) properties30);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Collection<java.lang.Object> objCollection40 = properties38.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = atomikosProperties41.isThreadedTwoPhaseCommit();
        atomikosProperties41.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        atomikosProperties47.setTransactionManagerUniqueName("hi!");
        java.lang.String str53 = atomikosProperties47.getLogBaseName();
        java.lang.String str54 = atomikosProperties47.getLogBaseName();
        boolean boolean55 = atomikosProperties47.isForceShutdownOnVmExit();
        long long56 = atomikosProperties47.getMaxTimeout();
        java.lang.String str57 = atomikosProperties47.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        boolean boolean65 = properties38.replace((java.lang.Object) atomikosProperties41, (java.lang.Object) str57, (java.lang.Object) true);
        java.util.Properties properties66 = atomikosProperties41.asProperties();
        atomikosProperties41.setMaxTimeout(500L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        atomikosProperties69.setThreadedTwoPhaseCommit(true);
        atomikosProperties69.setMaxTimeout((long) '#');
        boolean boolean76 = atomikosProperties69.isEnableLogging();
        atomikosProperties69.setCheckpointInterval((long) 100);
        java.lang.String str79 = atomikosProperties69.getTransactionManagerUniqueName();
        boolean boolean80 = atomikosProperties69.isForceShutdownOnVmExit();
        java.lang.Object obj81 = properties0.replace((java.lang.Object) 500L, (java.lang.Object) boolean80);
        java.lang.Object obj82 = properties0.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
    }

    @Test
    public void test4070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4070");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = atomikosProperties16.asProperties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        boolean boolean34 = properties31.isEmpty();
        java.lang.Object obj37 = properties31.setProperty("", "hi!");
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        boolean boolean44 = properties38.isEmpty();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        java.lang.Object obj48 = properties38.remove((java.lang.Object) properties45);
        java.lang.Object obj49 = properties31.get((java.lang.Object) properties45);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        boolean boolean56 = properties50.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties50.entrySet();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = properties50.remove((java.lang.Object) properties58, (java.lang.Object) atomikosProperties65);
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.lang.String str71 = properties30.toString();
        java.util.Collection<java.lang.Object> objCollection72 = properties30.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNotNull(objCollection72);
    }

    @Test
    public void test4071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4071");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.String str3 = properties0.getProperty("{tmlog=}", "{{}={}}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{{}={}}" + "'", str3, "{{}={}}");
    }

    @Test
    public void test4072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4072");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties0.elements();
        java.io.Reader reader23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration22);
    }

    @Test
    public void test4073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4073");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setDefaultJtaTimeout(1L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test4074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4074");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getCheckpointInterval();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long11 = atomikosProperties0.getMaxTimeout();
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test4075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4075");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Enumeration<?> wildcardEnumeration22 = properties15.propertyNames();
        java.lang.String str24 = properties15.getProperty("{=hi!}");
        java.util.Properties properties25 = new java.util.Properties(properties15);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str52 = atomikosProperties48.getService();
        boolean boolean53 = atomikosProperties48.isEnableLogging();
        java.lang.String str54 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean55 = properties45.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties48);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        boolean boolean58 = properties15.equals((java.lang.Object) atomikosProperties48);
        boolean boolean59 = properties0.equals((java.lang.Object) boolean58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties0.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
    }

    @Test
    public void test4076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4076");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setService("tmlog");
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setDefaultJtaTimeout((long) 50);
        boolean boolean25 = atomikosProperties11.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test4077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4077");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties29.elements();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.lang.Object obj51 = properties37.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.util.Properties properties56 = atomikosProperties52.asProperties();
        java.lang.Object obj59 = properties56.setProperty("hi!", "");
        java.util.Properties properties60 = new java.util.Properties(properties56);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection65 = properties64.values();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties64.keys();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties67.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties67.entrySet();
        java.lang.Object obj75 = properties61.put((java.lang.Object) properties64, (java.lang.Object) properties67);
        java.lang.Object obj76 = properties37.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setSerialJtaTransactions(false);
        java.lang.String str84 = atomikosProperties77.getService();
        java.util.Properties properties85 = atomikosProperties77.asProperties();
        java.lang.Object obj86 = properties29.replace((java.lang.Object) properties37, (java.lang.Object) atomikosProperties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        atomikosProperties87.setMaxTimeout((long) '#');
        boolean boolean94 = atomikosProperties87.isEnableLogging();
        atomikosProperties87.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj97 = properties0.replace((java.lang.Object) atomikosProperties77, (java.lang.Object) atomikosProperties87);
        boolean boolean98 = atomikosProperties77.isThreadedTwoPhaseCommit();
        java.lang.String str99 = atomikosProperties77.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "tmlog" + "'", str99, "tmlog");
    }

    @Test
    public void test4078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4078");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration26 = properties23.propertyNames();
        java.lang.Object obj29 = properties23.setProperty("{}", "hi!");
        properties23.clear();
        boolean boolean31 = properties11.containsValue((java.lang.Object) properties23);
        java.util.Properties properties32 = new java.util.Properties(properties23);
        java.io.Reader reader33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.load(reader33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test4079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4079");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        java.lang.String str10 = properties0.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties11.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setMaxTimeout((long) '#');
        boolean boolean24 = atomikosProperties17.isForceShutdownOnVmExit();
        int int25 = atomikosProperties17.getMaxActives();
        java.lang.Object obj26 = properties11.remove((java.lang.Object) int25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties11.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Enumeration<?> wildcardEnumeration39 = properties32.propertyNames();
        java.lang.Object obj41 = properties28.put((java.lang.Object) wildcardEnumeration39, (java.lang.Object) 10.0d);
        java.lang.Object obj42 = properties0.put((java.lang.Object) objEntrySet27, (java.lang.Object) properties28);
        int int43 = properties28.size();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties28.keys();
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.store(outputStream45, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(objEnumeration44);
    }

    @Test
    public void test4080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4080");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Enumeration<?> wildcardEnumeration21 = properties16.propertyNames();
        java.util.Properties properties22 = new java.util.Properties(properties16);
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        boolean boolean35 = properties29.isEmpty();
        java.lang.Object obj36 = properties24.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        int int45 = atomikosProperties37.getMaxActives();
        atomikosProperties37.setService("hi!");
        long long48 = atomikosProperties37.getMaxTimeout();
        atomikosProperties37.setTransactionManagerUniqueName("hi!");
        atomikosProperties37.setForceShutdownOnVmExit(false);
        java.lang.String str53 = atomikosProperties37.getService();
        int int54 = atomikosProperties37.getMaxActives();
        java.lang.String str55 = atomikosProperties37.getLogBaseDir();
        boolean boolean56 = properties24.equals((java.lang.Object) atomikosProperties37);
        java.lang.Object obj57 = properties5.remove((java.lang.Object) boolean56);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        boolean boolean62 = properties58.isEmpty();
        java.util.Set<java.lang.Object> objSet63 = properties58.keySet();
        boolean boolean64 = properties58.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties58.entrySet();
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        boolean boolean69 = properties66.isEmpty();
        java.lang.Object obj72 = properties66.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = properties58.remove((java.lang.Object) properties66, (java.lang.Object) atomikosProperties73);
        java.lang.Object obj79 = properties58.setProperty("", "{{}={}}");
        boolean boolean80 = properties5.equals((java.lang.Object) "");
        java.io.OutputStream outputStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.save(outputStream81, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + true + "'", obj36, true);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test4081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4081");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.io.PrintStream printStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.list(printStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test4082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4082");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        boolean boolean8 = properties0.equals((java.lang.Object) "");
        java.lang.String str9 = properties0.toString();
        java.util.Enumeration<?> wildcardEnumeration10 = properties0.propertyNames();
        int int11 = properties0.size();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream12, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test4083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4083");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{}");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout(52L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
    }

    @Test
    public void test4084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4084");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties0.propertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.io.Reader reader8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test4085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4085");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties(properties7);
        java.util.Set<java.lang.String> strSet13 = properties7.stringPropertyNames();
        java.util.Set<java.lang.String> strSet14 = properties7.stringPropertyNames();
        java.lang.Object obj15 = properties6.remove((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        long long23 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setMaxTimeout((long) (short) -1);
        atomikosProperties16.setForceShutdownOnVmExit(false);
        java.lang.Object obj28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj29 = properties6.replace((java.lang.Object) atomikosProperties16, obj28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
    }

    @Test
    public void test4086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4086");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setMaxActives((int) (short) 100);
        atomikosProperties0.setService("{true=true}");
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test4087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4087");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test4088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4088");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.lang.String str21 = atomikosProperties15.getTransactionManagerUniqueName();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        int int26 = properties22.size();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties22.containsKey((java.lang.Object) objSet32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties22.keys();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        boolean boolean44 = properties22.remove((java.lang.Object) properties35, (java.lang.Object) 1.0f);
        boolean boolean45 = properties35.isEmpty();
        java.lang.Object obj46 = properties0.put((java.lang.Object) atomikosProperties15, (java.lang.Object) properties35);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        boolean boolean53 = properties47.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties47.entrySet();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        boolean boolean58 = properties55.isEmpty();
        java.lang.Object obj61 = properties55.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = properties47.remove((java.lang.Object) properties55, (java.lang.Object) atomikosProperties62);
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean68 = properties35.contains((java.lang.Object) atomikosProperties62);
        boolean boolean69 = atomikosProperties62.isForceShutdownOnVmExit();
        boolean boolean70 = atomikosProperties62.isEnableLogging();
        boolean boolean71 = atomikosProperties62.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test4089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4089");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        java.lang.String str17 = atomikosProperties7.getService();
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        atomikosProperties7.setCheckpointInterval(100L);
        java.lang.String str21 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test4090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4090");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.Object obj18 = properties0.clone();
        properties0.clear();
        java.lang.Object obj20 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        int int38 = atomikosProperties30.getMaxActives();
        atomikosProperties30.setDefaultJtaTimeout((long) (short) 0);
        atomikosProperties30.setLogBaseDir("{tmlog=}");
        java.lang.Object obj43 = properties0.getOrDefault((java.lang.Object) atomikosProperties21, (java.lang.Object) "{tmlog=}");
        atomikosProperties21.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + "{tmlog=}" + "'", obj43, "{tmlog=}");
    }

    @Test
    public void test4091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4091");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        java.lang.String str9 = properties5.toString();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.lang.Object obj17 = properties10.setProperty("tmlog", "");
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj19 = properties10.clone();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties20.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setMaxTimeout((long) '#');
        boolean boolean33 = atomikosProperties26.isForceShutdownOnVmExit();
        int int34 = atomikosProperties26.getMaxActives();
        java.lang.Object obj35 = properties20.remove((java.lang.Object) int34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties20.entrySet();
        boolean boolean37 = properties10.containsKey((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties0.get((java.lang.Object) objEntrySet36);
        java.util.Properties properties39 = new java.util.Properties(properties0);
        java.io.PrintStream printStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{tmlog=}");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test4092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4092");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.lang.Object obj26 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = properties12.remove((java.lang.Object) properties20, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        int int32 = properties31.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties34.getService();
        boolean boolean39 = atomikosProperties34.isEnableLogging();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        boolean boolean41 = properties31.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setEnableLogging(false);
        boolean boolean44 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj45 = properties0.get((java.lang.Object) atomikosProperties34);
        atomikosProperties34.setLogBaseName("{{}=tmlog}");
        java.lang.String str48 = atomikosProperties34.getTransactionManagerUniqueName();
        atomikosProperties34.setTransactionManagerUniqueName("{[]=0.0}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test4093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4093");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection15 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        boolean boolean22 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean25 = properties0.remove((java.lang.Object) objCollection15, (java.lang.Object) atomikosProperties16);
        java.lang.String str26 = atomikosProperties16.getLogBaseDir();
        int int27 = atomikosProperties16.getMaxActives();
        java.lang.String str28 = atomikosProperties16.getService();
        atomikosProperties16.setEnableLogging(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test4094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4094");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.lang.Object obj40 = properties26.put((java.lang.Object) properties29, (java.lang.Object) properties32);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Enumeration<?> wildcardEnumeration47 = properties42.propertyNames();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        boolean boolean56 = properties42.containsValue((java.lang.Object) objEntrySet55);
        boolean boolean57 = properties0.remove((java.lang.Object) properties29, (java.lang.Object) boolean56);
        java.lang.Object obj59 = properties0.remove((java.lang.Object) (-1L));
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties0.elements();
        java.util.Set<java.lang.Object> objSet61 = properties0.keySet();
        java.io.PrintWriter printWriter62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objSet61);
    }

    @Test
    public void test4095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4095");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        boolean boolean40 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setLogBaseName("{true=true}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test4096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4096");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties7.isSerialJtaTransactions();
        atomikosProperties7.setTransactionManagerUniqueName("hi!");
        boolean boolean13 = atomikosProperties7.isEnableLogging();
        java.lang.String str14 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        atomikosProperties17.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties31 = atomikosProperties17.asProperties();
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) atomikosProperties7, (java.lang.Object) properties31);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties6.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties6.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties6.elements();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals(obj32.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEnumeration35);
    }

    @Test
    public void test4097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4097");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.lang.String str4 = properties0.getProperty("");
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties(properties5);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        int int12 = properties5.size();
        java.lang.Class<?> wildcardClass13 = properties5.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test4098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4098");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        long long7 = atomikosProperties0.getMaxTimeout();
        long long8 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
    }

    @Test
    public void test4099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4099");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.lang.String str15 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties0.keys();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties17.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setMaxTimeout((long) '#');
        boolean boolean31 = atomikosProperties24.isForceShutdownOnVmExit();
        java.lang.Object obj32 = properties17.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties24);
        atomikosProperties24.setForceShutdownOnVmExit(false);
        long long35 = atomikosProperties24.getDefaultJtaTimeout();
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setLogBaseName("{}");
        atomikosProperties24.setMaxTimeout((long) (short) -1);
        atomikosProperties24.setCheckpointInterval((long) (byte) 1);
        boolean boolean44 = properties0.equals((java.lang.Object) atomikosProperties24);
        boolean boolean45 = atomikosProperties24.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test4100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4100");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test4101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4101");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        int int24 = atomikosProperties6.getMaxActives();
        long long25 = atomikosProperties6.getCheckpointInterval();
        atomikosProperties6.setMaxActives((int) (short) 1);
        java.lang.String str28 = atomikosProperties6.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test4102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4102");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        int int33 = atomikosProperties25.getMaxActives();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean41 = properties34.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties19.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties34);
        boolean boolean43 = properties14.containsKey((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        java.util.Properties properties48 = atomikosProperties44.asProperties();
        java.lang.Object obj51 = properties48.setProperty("hi!", "");
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        boolean boolean58 = properties53.containsValue((java.lang.Object) properties54);
        java.util.Collection<java.lang.Object> objCollection59 = properties53.values();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        java.lang.Object obj67 = properties53.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet66);
        java.util.Set<java.lang.Object> objSet68 = properties53.keySet();
        java.util.Collection<java.lang.Object> objCollection69 = properties53.values();
        boolean boolean70 = properties34.replace((java.lang.Object) "hi!", (java.lang.Object) (byte) 100, (java.lang.Object) properties53);
        java.util.Properties properties71 = new java.util.Properties(properties34);
        java.lang.String str73 = properties71.getProperty("{hi!=[]}");
        boolean boolean74 = properties71.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test4103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4103");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        java.lang.String str10 = atomikosProperties4.getLogBaseName();
        java.lang.String str11 = atomikosProperties4.getLogBaseName();
        java.lang.Object obj12 = properties0.get((java.lang.Object) str11);
        java.lang.Object obj15 = properties0.setProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "{{}=tmlog}");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties16.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        boolean boolean31 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        boolean boolean36 = properties33.isEmpty();
        java.lang.Object obj39 = properties33.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        boolean boolean43 = properties25.remove((java.lang.Object) properties33, (java.lang.Object) atomikosProperties40);
        java.util.Properties properties44 = new java.util.Properties(properties33);
        int int45 = properties44.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isSerialJtaTransactions();
        java.lang.String str51 = atomikosProperties47.getService();
        boolean boolean52 = atomikosProperties47.isEnableLogging();
        java.lang.String str53 = atomikosProperties47.getTransactionManagerUniqueName();
        boolean boolean54 = properties44.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setMaxActives((int) (short) -1);
        boolean boolean57 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.setDefaultJtaTimeout((long) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        boolean boolean63 = atomikosProperties60.isSerialJtaTransactions();
        int int64 = atomikosProperties60.getMaxActives();
        atomikosProperties60.setSerialJtaTransactions(true);
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        boolean boolean73 = properties67.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties67.entrySet();
        java.util.Set<java.lang.Object> objSet75 = properties67.keySet();
        boolean boolean76 = properties16.replace((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties60, (java.lang.Object) objSet75);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties77.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties77.getService();
        boolean boolean82 = atomikosProperties77.isEnableLogging();
        java.lang.String str83 = atomikosProperties77.getTransactionManagerUniqueName();
        java.lang.String str84 = atomikosProperties77.getLogBaseName();
        java.lang.String str85 = atomikosProperties77.getLogBaseDir();
        atomikosProperties77.setEnableLogging(true);
        java.lang.Object obj88 = properties0.replace((java.lang.Object) objSet75, (java.lang.Object) true);
        java.io.PrintWriter printWriter89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tmlog" + "'", str84, "tmlog");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test4104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4104");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setSerialJtaTransactions(true);
        boolean boolean29 = atomikosProperties12.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test4105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4105");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.String str22 = properties9.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        long long30 = atomikosProperties23.getMaxTimeout();
        boolean boolean31 = properties9.containsValue((java.lang.Object) atomikosProperties23);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties9.elements();
        java.util.Set<java.lang.String> strSet33 = properties9.stringPropertyNames();
        boolean boolean34 = properties0.contains((java.lang.Object) properties9);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        boolean boolean38 = properties35.isEmpty();
        java.lang.Object obj41 = properties35.setProperty("", "hi!");
        int int42 = properties35.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties43.getService();
        atomikosProperties43.setEnableLogging(false);
        java.util.Properties properties50 = atomikosProperties43.asProperties();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet54 = properties51.stringPropertyNames();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet59 = properties56.stringPropertyNames();
        boolean boolean60 = properties55.containsValue((java.lang.Object) properties56);
        java.util.Collection<java.lang.Object> objCollection61 = properties55.values();
        java.util.Enumeration<?> wildcardEnumeration62 = properties55.propertyNames();
        java.lang.Object obj64 = properties51.put((java.lang.Object) wildcardEnumeration62, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj80 = properties51.getOrDefault((java.lang.Object) boolean72, (java.lang.Object) atomikosProperties73);
        java.lang.Object obj81 = properties35.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties73);
        java.lang.Object obj82 = properties9.remove((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setMaxActives((int) (byte) 100);
        boolean boolean85 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.String str86 = atomikosProperties43.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test4106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4106");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setEnableLogging(false);
        boolean boolean23 = atomikosProperties16.isSerialJtaTransactions();
        int int24 = atomikosProperties16.getMaxActives();
        boolean boolean25 = atomikosProperties16.isEnableLogging();
        long long26 = atomikosProperties16.getCheckpointInterval();
        java.util.Properties properties27 = atomikosProperties16.asProperties();
        atomikosProperties16.setLogBaseName("");
        int int30 = atomikosProperties16.getMaxActives();
        atomikosProperties16.setCheckpointInterval((long) (-1));
        java.lang.String str33 = atomikosProperties16.getLogBaseName();
        boolean boolean34 = properties0.containsKey((java.lang.Object) atomikosProperties16);
        java.util.Properties properties35 = new java.util.Properties(properties0);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test4107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4107");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        java.util.Properties properties31 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setEnableLogging(false);
        boolean boolean39 = atomikosProperties32.isSerialJtaTransactions();
        int int40 = atomikosProperties32.getMaxActives();
        atomikosProperties32.setMaxActives((int) (byte) 0);
        atomikosProperties32.setLogBaseName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = atomikosProperties45.isSerialJtaTransactions();
        atomikosProperties45.setTransactionManagerUniqueName("hi!");
        atomikosProperties45.setForceShutdownOnVmExit(false);
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str55 = atomikosProperties45.getTransactionManagerUniqueName();
        long long56 = atomikosProperties45.getDefaultJtaTimeout();
        boolean boolean57 = atomikosProperties45.isThreadedTwoPhaseCommit();
        java.lang.Object obj58 = properties31.replace((java.lang.Object) "", (java.lang.Object) boolean57);
        java.lang.Object obj61 = properties31.setProperty("{}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10L + "'", long56 == 10L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test4108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4108");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection15 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        boolean boolean22 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean25 = properties0.remove((java.lang.Object) objCollection15, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test4109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4109");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        int int18 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean25 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test4110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4110");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((-1));
        long long14 = atomikosProperties0.getMaxTimeout();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test4111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4111");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.lang.Object obj20 = properties8.clone();
        java.lang.Object obj21 = properties8.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties8.elements();
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream23, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{=hi!}");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{=hi!}");
        org.junit.Assert.assertNotNull(objEnumeration22);
    }

    @Test
    public void test4112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4112");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean21 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setSerialJtaTransactions(true);
        atomikosProperties15.setCheckpointInterval(0L);
        java.lang.String str26 = atomikosProperties15.getLogBaseDir();
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test4113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4113");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection7 = properties6.values();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setEnableLogging(true);
        atomikosProperties22.setLogBaseDir("");
        boolean boolean36 = properties6.replace((java.lang.Object) 10000L, (java.lang.Object) atomikosProperties10, (java.lang.Object) "");
        properties6.clear();
        int int38 = properties6.size();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection40 = properties39.values();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        java.lang.Object obj44 = properties39.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        boolean boolean48 = properties46.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setSerialJtaTransactions(false);
        java.lang.String str56 = atomikosProperties49.getService();
        boolean boolean57 = properties46.containsKey((java.lang.Object) atomikosProperties49);
        boolean boolean58 = properties39.containsKey((java.lang.Object) properties46);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties39.entrySet();
        java.lang.Object obj60 = properties0.getOrDefault((java.lang.Object) properties6, (java.lang.Object) objEntrySet59);
        java.io.InputStream inputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.loadFromXML(inputStream61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(obj60);
// flaky:         org.junit.Assert.assertEquals(obj60.toString(), "[{}={}]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[{}={}]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[{}={}]");
    }

    @Test
    public void test4114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4114");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        boolean boolean23 = properties3.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties3.elements();
        java.util.Collection<java.lang.Object> objCollection25 = properties3.values();
        boolean boolean26 = properties3.isEmpty();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties27.elements();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.lang.Object obj39 = properties32.setProperty("tmlog", "");
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.lang.Object obj54 = properties40.put((java.lang.Object) properties43, (java.lang.Object) properties46);
        java.lang.String str56 = properties43.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        boolean boolean60 = atomikosProperties57.isSerialJtaTransactions();
        java.lang.Object obj61 = properties32.put((java.lang.Object) properties43, (java.lang.Object) boolean60);
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Set<java.lang.Object> objSet63 = properties32.keySet();
        boolean boolean64 = properties3.containsKey((java.lang.Object) objSet63);
        java.util.Set<java.lang.Object> objSet65 = properties3.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objSet65);
    }

    @Test
    public void test4115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4115");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        java.lang.String str9 = properties5.toString();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.lang.Object obj17 = properties10.setProperty("tmlog", "");
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.Object obj19 = properties10.clone();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Enumeration<?> wildcardEnumeration26 = properties21.propertyNames();
        java.util.Properties properties27 = new java.util.Properties(properties21);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.lang.Object obj29 = properties0.get((java.lang.Object) properties10);
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{tmlog=}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test4116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4116");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        long long38 = atomikosProperties31.getMaxTimeout();
        java.lang.String str39 = atomikosProperties31.getLogBaseName();
        boolean boolean40 = atomikosProperties31.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Enumeration<?> wildcardEnumeration52 = properties45.propertyNames();
        java.lang.Object obj54 = properties41.put((java.lang.Object) wildcardEnumeration52, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj70 = properties41.getOrDefault((java.lang.Object) boolean62, (java.lang.Object) atomikosProperties63);
        long long71 = atomikosProperties63.getMaxTimeout();
        java.lang.String str72 = atomikosProperties63.getTransactionManagerUniqueName();
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) atomikosProperties31, (java.lang.Object) str72);
        properties0.clear();
        java.lang.String str77 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{true=true}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{true=true}" + "'", str77, "{true=true}");
    }

    @Test
    public void test4117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4117");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean21 = properties18.contains((java.lang.Object) 35);
        java.lang.String str23 = properties18.getProperty("tmlog");
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        properties18.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties18.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objEnumeration26);
    }

    @Test
    public void test4118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4118");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection31 = properties30.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.lang.Object obj41 = properties27.put((java.lang.Object) properties30, (java.lang.Object) properties33);
        java.lang.Object obj42 = properties30.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setMaxTimeout((long) '#');
        boolean boolean50 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setCheckpointInterval((long) 100);
        atomikosProperties43.setSerialJtaTransactions(true);
        boolean boolean55 = properties30.equals((java.lang.Object) atomikosProperties43);
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties56.save(outputStream58, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
    }

    @Test
    public void test4119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4119");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long18 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test4120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4120");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties61);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties36.keys();
        java.io.OutputStream outputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.save(outputStream71, "{hi!=[], {}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
    }

    @Test
    public void test4121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4121");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        java.lang.String str55 = properties33.toString();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Set<java.lang.Object> objSet61 = properties56.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        int int70 = atomikosProperties62.getMaxActives();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean78 = properties71.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj79 = properties56.put((java.lang.Object) atomikosProperties62, (java.lang.Object) properties71);
        properties56.clear();
        java.lang.Object obj81 = properties33.remove((java.lang.Object) properties56);
        properties33.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{}" + "'", str55, "{}");
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test4122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4122");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setMaxTimeout((long) '#');
        boolean boolean30 = atomikosProperties23.isForceShutdownOnVmExit();
        long long31 = atomikosProperties23.getDefaultJtaTimeout();
        boolean boolean32 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setMaxTimeout((long) (byte) -1);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        boolean boolean38 = properties35.isEmpty();
        java.lang.Object obj41 = properties35.setProperty("", "hi!");
        int int42 = properties35.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties43.getService();
        atomikosProperties43.setEnableLogging(false);
        java.util.Properties properties50 = atomikosProperties43.asProperties();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet54 = properties51.stringPropertyNames();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet59 = properties56.stringPropertyNames();
        boolean boolean60 = properties55.containsValue((java.lang.Object) properties56);
        java.util.Collection<java.lang.Object> objCollection61 = properties55.values();
        java.util.Enumeration<?> wildcardEnumeration62 = properties55.propertyNames();
        java.lang.Object obj64 = properties51.put((java.lang.Object) wildcardEnumeration62, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout((long) '#');
        boolean boolean72 = atomikosProperties65.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj80 = properties51.getOrDefault((java.lang.Object) boolean72, (java.lang.Object) atomikosProperties73);
        java.lang.Object obj81 = properties35.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties73);
        long long82 = atomikosProperties73.getMaxTimeout();
        java.lang.Object obj83 = properties0.replace((java.lang.Object) atomikosProperties23, (java.lang.Object) long82);
        java.util.Properties properties84 = new java.util.Properties();
        java.lang.Object obj86 = properties84.remove((java.lang.Object) 0.0d);
        boolean boolean87 = properties84.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties84.elements();
        java.lang.Object obj91 = properties84.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.lang.String str93 = properties84.getProperty("hi!");
        java.util.Properties properties94 = new java.util.Properties();
        java.lang.Object obj96 = properties94.remove((java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection97 = properties94.values();
        boolean boolean98 = properties84.contains((java.lang.Object) properties94);
        java.lang.Object obj99 = properties0.remove((java.lang.Object) properties94);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 300000L + "'", long82 == 300000L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNotNull(objCollection97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test4123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4123");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        long long5 = atomikosProperties0.getMaxTimeout();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        int int7 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test4124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4124");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isForceShutdownOnVmExit();
        boolean boolean33 = atomikosProperties22.isEnableLogging();
        java.lang.String str34 = atomikosProperties22.getTransactionManagerUniqueName();
        java.lang.String str35 = atomikosProperties22.getService();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        java.lang.String str38 = atomikosProperties22.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test4125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4125");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxActives((int) 'a');
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        boolean boolean19 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test4126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4126");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        boolean boolean9 = atomikosProperties6.isSerialJtaTransactions();
        boolean boolean10 = atomikosProperties6.isEnableLogging();
        atomikosProperties6.setSerialJtaTransactions(true);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        int int17 = properties13.size();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        boolean boolean24 = properties13.containsKey((java.lang.Object) objSet23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties13.keys();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        boolean boolean35 = properties13.remove((java.lang.Object) properties26, (java.lang.Object) 1.0f);
        java.util.Enumeration<?> wildcardEnumeration36 = properties26.propertyNames();
        java.util.Set<java.lang.Object> objSet37 = properties26.keySet();
        boolean boolean38 = properties0.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) objSet37);
        java.lang.Object obj39 = properties0.clone();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Set<java.lang.Object> objSet45 = properties40.keySet();
        boolean boolean46 = properties40.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setMaxTimeout((long) '#');
        boolean boolean54 = atomikosProperties47.isEnableLogging();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet61 = properties58.stringPropertyNames();
        boolean boolean62 = properties57.containsValue((java.lang.Object) properties58);
        java.util.Collection<java.lang.Object> objCollection63 = properties57.values();
        java.lang.Object obj64 = properties40.replace((java.lang.Object) atomikosProperties47, (java.lang.Object) objCollection63);
        java.lang.String str65 = atomikosProperties47.getService();
        java.lang.String str66 = atomikosProperties47.getLogBaseName();
        atomikosProperties47.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        atomikosProperties69.setThreadedTwoPhaseCommit(true);
        atomikosProperties69.setMaxTimeout((long) '#');
        boolean boolean76 = atomikosProperties69.isEnableLogging();
        java.util.Properties properties77 = atomikosProperties69.asProperties();
        atomikosProperties69.setSerialJtaTransactions(true);
        int int80 = atomikosProperties69.getMaxActives();
        java.lang.Object obj81 = properties0.getOrDefault((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties69);
        atomikosProperties47.setService("{{}=tmlog}");
        long long84 = atomikosProperties47.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10000L + "'", long84 == 10000L);
    }

    @Test
    public void test4127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4127");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean31 = atomikosProperties12.isThreadedTwoPhaseCommit();
        java.util.Properties properties32 = atomikosProperties12.asProperties();
        java.lang.Class<?> wildcardClass33 = atomikosProperties12.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test4128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4128");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.lang.Class<?> wildcardClass25 = objCollection24.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test4129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4129");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str15 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test4130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4130");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.lang.Object obj8 = properties5.setProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection13 = properties12.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties15.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.lang.Object obj23 = properties9.put((java.lang.Object) properties12, (java.lang.Object) properties15);
        java.lang.String str25 = properties12.getProperty("{=hi!}");
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.lang.String str34 = properties26.getProperty("hi!");
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties36.entrySet();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        boolean boolean58 = properties26.replace((java.lang.Object) "hi!", (java.lang.Object) properties36, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet59 = properties36.stringPropertyNames();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        int int64 = properties60.size();
        java.util.Properties properties65 = new java.util.Properties(properties60);
        java.util.Set<java.lang.String> strSet66 = properties60.stringPropertyNames();
        java.util.Set<java.lang.String> strSet67 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isEnableLogging();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setEnableLogging(true);
        atomikosProperties68.setLogBaseName("{}");
        long long82 = atomikosProperties68.getDefaultJtaTimeout();
        java.lang.Object obj83 = properties36.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) atomikosProperties68);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.Object obj85 = properties5.get((java.lang.Object) properties12);
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream86, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 10000L + "'", long82 == 10000L);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test4131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4131");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.io.InputStream inputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test4132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4132");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        atomikosProperties3.setDefaultJtaTimeout((long) 50);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
    }

    @Test
    public void test4133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4133");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        boolean boolean26 = properties23.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties0.entrySet();
        java.lang.String str30 = properties0.getProperty("");
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.keys();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        boolean boolean47 = properties42.containsValue((java.lang.Object) properties43);
        java.util.Collection<java.lang.Object> objCollection48 = properties42.values();
        java.util.Enumeration<?> wildcardEnumeration49 = properties42.propertyNames();
        java.lang.Object obj51 = properties38.put((java.lang.Object) wildcardEnumeration49, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet52 = properties38.stringPropertyNames();
        java.util.Set<java.lang.String> strSet53 = properties38.stringPropertyNames();
        boolean boolean54 = properties38.isEmpty();
        boolean boolean55 = properties38.isEmpty();
        boolean boolean56 = properties31.containsKey((java.lang.Object) properties38);
        java.util.Properties properties57 = new java.util.Properties();
        boolean boolean59 = properties57.contains((java.lang.Object) 100.0d);
        java.lang.Object obj60 = null;
        boolean boolean61 = properties57.equals(obj60);
        java.util.Properties properties62 = new java.util.Properties(properties57);
        java.lang.Object obj63 = properties0.replace((java.lang.Object) boolean56, (java.lang.Object) properties57);
        java.lang.String str66 = properties57.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str66, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test4134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4134");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = properties9.toString();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties11.containsKey((java.lang.Object) objSet21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties11.keys();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        boolean boolean33 = properties11.remove((java.lang.Object) properties24, (java.lang.Object) 1.0f);
        java.lang.Object obj34 = properties24.clone();
        java.util.Collection<java.lang.Object> objCollection35 = properties24.values();
        java.util.Collection<java.lang.Object> objCollection36 = properties24.values();
        java.util.Set<java.lang.String> strSet37 = properties24.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet38 = properties24.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setMaxTimeout((long) '#');
        boolean boolean46 = atomikosProperties39.isEnableLogging();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setMaxActives((int) (byte) 100);
        atomikosProperties39.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties39.setDefaultJtaTimeout((long) 'a');
        boolean boolean55 = atomikosProperties39.isEnableLogging();
        boolean boolean56 = atomikosProperties39.isEnableLogging();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet60 = properties57.stringPropertyNames();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet65 = properties62.stringPropertyNames();
        boolean boolean66 = properties61.containsValue((java.lang.Object) properties62);
        java.util.Collection<java.lang.Object> objCollection67 = properties61.values();
        java.util.Enumeration<?> wildcardEnumeration68 = properties61.propertyNames();
        java.lang.Object obj70 = properties57.put((java.lang.Object) wildcardEnumeration68, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setMaxTimeout((long) '#');
        boolean boolean78 = atomikosProperties71.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj86 = properties57.getOrDefault((java.lang.Object) boolean78, (java.lang.Object) atomikosProperties79);
        java.util.Set<java.lang.String> strSet87 = properties57.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties57.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties89.setSerialJtaTransactions(false);
        boolean boolean92 = atomikosProperties89.isSerialJtaTransactions();
        java.lang.String str93 = atomikosProperties89.getService();
        long long94 = atomikosProperties89.getMaxTimeout();
        java.lang.Object obj95 = properties57.get((java.lang.Object) atomikosProperties89);
        java.lang.String str96 = atomikosProperties89.getLogBaseDir();
        long long97 = atomikosProperties89.getMaxTimeout();
        boolean boolean98 = properties9.replace((java.lang.Object) properties24, (java.lang.Object) atomikosProperties39, (java.lang.Object) atomikosProperties89);
        boolean boolean99 = atomikosProperties89.isEnableLogging();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objCollection67);
        org.junit.Assert.assertNotNull(wildcardEnumeration68);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 300000L + "'", long94 == 300000L);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 300000L + "'", long97 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test4135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4135");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties15.getMaxTimeout();
        atomikosProperties15.setEnableLogging(false);
        boolean boolean25 = properties14.equals((java.lang.Object) atomikosProperties15);
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.save(outputStream26, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test4136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4136");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties32.storeToXML(outputStream33, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test4137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4137");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test4138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4138");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        int int11 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
    }

    @Test
    public void test4139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4139");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long8 = atomikosProperties0.getCheckpointInterval();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval((long) ' ');
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test4140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4140");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        atomikosProperties3.setMaxActives((int) '4');
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
    }

    @Test
    public void test4141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4141");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setMaxTimeout(10000L);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test4142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4142");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test4143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4143");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        boolean boolean19 = properties0.isEmpty();
        java.lang.String str20 = properties0.toString();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        int int25 = properties21.size();
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties21.entrySet();
        java.lang.Object obj30 = properties21.setProperty("", "{}");
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties31.entrySet();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        boolean boolean42 = properties39.isEmpty();
        java.lang.Object obj45 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean49 = properties31.remove((java.lang.Object) properties39, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties50 = new java.util.Properties(properties39);
        int int51 = properties50.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        boolean boolean56 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.String str57 = atomikosProperties53.getService();
        boolean boolean58 = atomikosProperties53.isEnableLogging();
        java.lang.String str59 = atomikosProperties53.getTransactionManagerUniqueName();
        boolean boolean60 = properties50.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties61.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties61.entrySet();
        java.lang.Object obj68 = properties50.remove((java.lang.Object) objEntrySet67);
        boolean boolean69 = properties50.isEmpty();
        java.util.Properties properties70 = new java.util.Properties();
        java.lang.Object obj72 = properties70.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties70.elements();
        boolean boolean74 = properties70.isEmpty();
        java.util.Set<java.lang.Object> objSet75 = properties70.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties70.keys();
        java.lang.String str78 = properties70.getProperty("hi!");
        java.lang.String str80 = properties70.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setSerialJtaTransactions(false);
        atomikosProperties81.setThreadedTwoPhaseCommit(true);
        atomikosProperties81.setEnableLogging(false);
        boolean boolean88 = properties70.containsKey((java.lang.Object) atomikosProperties81);
        atomikosProperties81.setTransactionManagerUniqueName("tmlog");
        boolean boolean91 = atomikosProperties81.isForceShutdownOnVmExit();
        java.lang.Object obj92 = properties21.put((java.lang.Object) boolean69, (java.lang.Object) atomikosProperties81);
        java.lang.String str93 = atomikosProperties81.getService();
        atomikosProperties81.setLogBaseName("tmlog");
        long long96 = atomikosProperties81.getCheckpointInterval();
        boolean boolean97 = properties0.containsValue((java.lang.Object) atomikosProperties81);
        java.io.Reader reader98 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{=hi!}" + "'", str20, "{=hi!}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 500L + "'", long96 == 500L);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test4144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4144");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long12 = atomikosProperties0.getMaxTimeout();
        java.lang.String str13 = atomikosProperties0.getService();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxTimeout((long) '#');
        boolean boolean38 = atomikosProperties31.isEnableLogging();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        atomikosProperties31.setEnableLogging(true);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties43.elements();
        java.lang.Object obj49 = properties15.replace((java.lang.Object) true, (java.lang.Object) properties43);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        int int54 = properties50.size();
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.util.Set<java.lang.String> strSet56 = properties50.stringPropertyNames();
        boolean boolean57 = properties15.contains((java.lang.Object) strSet56);
        java.util.Collection<java.lang.Object> objCollection58 = properties15.values();
        java.util.Properties properties59 = new java.util.Properties(properties15);
        java.lang.String str61 = properties15.getProperty("");
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet66 = properties63.stringPropertyNames();
        boolean boolean67 = properties62.containsValue((java.lang.Object) properties63);
        java.util.Collection<java.lang.Object> objCollection68 = properties62.values();
        java.util.Enumeration<?> wildcardEnumeration69 = properties62.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties62.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties71.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setMaxTimeout((long) '#');
        boolean boolean85 = atomikosProperties78.isForceShutdownOnVmExit();
        java.lang.Object obj86 = properties71.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties78);
        atomikosProperties78.setForceShutdownOnVmExit(true);
        java.util.Properties properties89 = atomikosProperties78.asProperties();
        boolean boolean90 = properties62.containsValue((java.lang.Object) atomikosProperties78);
        java.lang.String str91 = atomikosProperties78.getLogBaseName();
        atomikosProperties78.setMaxActives(50);
        atomikosProperties78.setTransactionManagerUniqueName("{tmlog=}");
        atomikosProperties78.setMaxTimeout((long) '#');
        boolean boolean98 = properties15.containsValue((java.lang.Object) '#');
        java.lang.Object obj99 = properties14.get((java.lang.Object) properties15);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertNotNull(wildcardEnumeration69);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(properties89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "tmlog" + "'", str91, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test4145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4145");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties(properties23);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection45 = properties44.values();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties44.keys();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties47.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties47.entrySet();
        java.lang.Object obj55 = properties41.put((java.lang.Object) properties44, (java.lang.Object) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties41.keys();
        java.util.Set<java.lang.String> strSet57 = properties41.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties41.entrySet();
        java.lang.Object obj59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj60 = properties23.put((java.lang.Object) properties41, obj59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(objEntrySet58);
    }

    @Test
    public void test4146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4146");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Properties properties33 = new java.util.Properties(properties10);
        java.io.InputStream inputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.load(inputStream34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test4147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4147");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.lang.Object obj22 = properties8.put((java.lang.Object) properties11, (java.lang.Object) properties14);
        java.lang.String str24 = properties11.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.Object obj29 = properties0.put((java.lang.Object) properties11, (java.lang.Object) boolean28);
        properties11.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties11.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration31);
    }

    @Test
    public void test4148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4148");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str9 = atomikosProperties0.getService();
        int int10 = atomikosProperties0.getMaxActives();
        java.lang.String str11 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test4149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4149");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        boolean boolean19 = properties0.isEmpty();
        java.lang.String str20 = properties0.toString();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        int int25 = properties21.size();
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties21.entrySet();
        java.lang.Object obj30 = properties21.setProperty("", "{}");
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties31.entrySet();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        boolean boolean42 = properties39.isEmpty();
        java.lang.Object obj45 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean49 = properties31.remove((java.lang.Object) properties39, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties50 = new java.util.Properties(properties39);
        int int51 = properties50.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        boolean boolean56 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.String str57 = atomikosProperties53.getService();
        boolean boolean58 = atomikosProperties53.isEnableLogging();
        java.lang.String str59 = atomikosProperties53.getTransactionManagerUniqueName();
        boolean boolean60 = properties50.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties61.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties61.entrySet();
        java.lang.Object obj68 = properties50.remove((java.lang.Object) objEntrySet67);
        boolean boolean69 = properties50.isEmpty();
        java.util.Properties properties70 = new java.util.Properties();
        java.lang.Object obj72 = properties70.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties70.elements();
        boolean boolean74 = properties70.isEmpty();
        java.util.Set<java.lang.Object> objSet75 = properties70.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties70.keys();
        java.lang.String str78 = properties70.getProperty("hi!");
        java.lang.String str80 = properties70.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setSerialJtaTransactions(false);
        atomikosProperties81.setThreadedTwoPhaseCommit(true);
        atomikosProperties81.setEnableLogging(false);
        boolean boolean88 = properties70.containsKey((java.lang.Object) atomikosProperties81);
        atomikosProperties81.setTransactionManagerUniqueName("tmlog");
        boolean boolean91 = atomikosProperties81.isForceShutdownOnVmExit();
        java.lang.Object obj92 = properties21.put((java.lang.Object) boolean69, (java.lang.Object) atomikosProperties81);
        java.lang.String str93 = atomikosProperties81.getService();
        atomikosProperties81.setLogBaseName("tmlog");
        long long96 = atomikosProperties81.getCheckpointInterval();
        boolean boolean97 = properties0.containsValue((java.lang.Object) atomikosProperties81);
        java.lang.String str98 = atomikosProperties81.getLogBaseName();
        int int99 = atomikosProperties81.getMaxActives();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{=hi!}" + "'", str20, "{=hi!}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 500L + "'", long96 == 500L);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "tmlog" + "'", str98, "tmlog");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 50 + "'", int99 == 50);
    }

    @Test
    public void test4150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4150");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties18.elements();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.lang.Object obj30 = properties23.setProperty("tmlog", "");
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties37.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties37.entrySet();
        java.lang.Object obj45 = properties31.put((java.lang.Object) properties34, (java.lang.Object) properties37);
        java.lang.String str47 = properties34.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.Object obj52 = properties23.put((java.lang.Object) properties34, (java.lang.Object) boolean51);
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties54.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        boolean boolean68 = atomikosProperties61.isForceShutdownOnVmExit();
        java.lang.Object obj69 = properties54.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties61);
        long long70 = atomikosProperties61.getDefaultJtaTimeout();
        atomikosProperties61.setMaxActives((int) (short) 1);
        java.lang.String str73 = atomikosProperties61.getService();
        atomikosProperties61.setCheckpointInterval((long) '4');
        boolean boolean76 = properties0.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties18, (java.lang.Object) atomikosProperties61);
        java.io.Writer writer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer77, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test4151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4151");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties34.keys();
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.store(outputStream59, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
    }

    @Test
    public void test4152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4152");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        boolean boolean12 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties7.getTransactionManagerUniqueName();
        java.lang.String str14 = atomikosProperties7.getService();
        atomikosProperties7.setCheckpointInterval(0L);
        atomikosProperties7.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setDefaultJtaTimeout((long) (short) -1);
        boolean boolean24 = properties0.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setMaxActives((int) (byte) 100);
        atomikosProperties25.setForceShutdownOnVmExit(false);
        boolean boolean39 = atomikosProperties25.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties40.containsKey((java.lang.Object) objSet50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties40.keys();
        int int53 = properties40.size();
        java.lang.Object obj54 = properties0.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties40);
        java.util.Properties properties55 = new java.util.Properties(properties40);
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.load(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test4153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4153");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isThreadedTwoPhaseCommit();
        boolean boolean51 = atomikosProperties47.isForceShutdownOnVmExit();
        boolean boolean52 = properties41.contains((java.lang.Object) atomikosProperties47);
        java.lang.Class<?> wildcardClass53 = atomikosProperties47.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test4154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4154");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean33 = properties26.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj34 = properties11.put((java.lang.Object) atomikosProperties17, (java.lang.Object) properties26);
        java.lang.String str35 = properties11.toString();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties36.elements();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties44.keys();
        java.lang.String str52 = properties44.getProperty("hi!");
        java.lang.String str54 = properties44.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setEnableLogging(false);
        boolean boolean62 = properties44.containsKey((java.lang.Object) atomikosProperties55);
        boolean boolean63 = properties36.containsKey((java.lang.Object) boolean62);
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        boolean boolean67 = properties64.isEmpty();
        java.lang.Object obj70 = properties64.setProperty("", "hi!");
        int int71 = properties64.size();
        java.lang.Object obj72 = properties11.replace((java.lang.Object) properties36, (java.lang.Object) properties64);
        java.util.Properties properties73 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties73.entrySet();
        boolean boolean75 = properties10.containsValue((java.lang.Object) objEntrySet74);
        java.util.Set<java.lang.String> strSet76 = properties10.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strSet76);
    }

    @Test
    public void test4155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4155");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setLogBaseDir("{}");
        java.lang.String str19 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setDefaultJtaTimeout((long) (short) -1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test4156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4156");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives(10);
        int int12 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test4157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4157");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties27.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isForceShutdownOnVmExit();
        java.lang.Object obj42 = properties27.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties34);
        int int43 = atomikosProperties34.getMaxActives();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties44.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj51 = properties44.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet65);
        java.util.Set<java.lang.Object> objSet67 = properties52.keySet();
        boolean boolean68 = properties44.containsKey((java.lang.Object) properties52);
        java.util.Set<java.lang.String> strSet69 = properties52.stringPropertyNames();
        java.lang.String str70 = properties52.toString();
        boolean boolean71 = properties0.remove((java.lang.Object) atomikosProperties34, (java.lang.Object) properties52);
        java.lang.String str72 = atomikosProperties34.getLogBaseName();
        atomikosProperties34.setLogBaseName("");
        java.lang.String str75 = atomikosProperties34.getService();
        java.util.Properties properties76 = atomikosProperties34.asProperties();
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties76.save(outputStream77, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{hi!=[]}" + "'", str70, "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(properties76);
    }

    @Test
    public void test4158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4158");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str15 = atomikosProperties0.getService();
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        java.lang.String str17 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test4159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4159");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        atomikosProperties0.setMaxActives(2);
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test4160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4160");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        int int43 = properties39.size();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.util.Set<java.lang.String> strSet45 = properties39.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties46.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setMaxTimeout((long) '#');
        boolean boolean60 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties46.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = atomikosProperties53.isSerialJtaTransactions();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) properties39, (java.lang.Object) boolean62);
        java.lang.Object obj64 = properties0.remove((java.lang.Object) properties39);
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.remove((java.lang.Object) 0.0d);
        boolean boolean69 = properties66.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        atomikosProperties70.setThreadedTwoPhaseCommit(true);
        atomikosProperties70.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties77 = atomikosProperties70.asProperties();
        int int78 = atomikosProperties70.getMaxActives();
        atomikosProperties70.setService("hi!");
        java.lang.Object obj81 = properties66.get((java.lang.Object) atomikosProperties70);
        java.lang.Object obj82 = properties39.put((java.lang.Object) "{{}={}}", (java.lang.Object) properties66);
        java.lang.String str84 = properties39.getProperty("{=hi!}");
        java.util.Collection<java.lang.Object> objCollection85 = properties39.values();
        properties39.clear();
        java.io.OutputStream outputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.storeToXML(outputStream87, "tmlog", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(objCollection85);
    }

    @Test
    public void test4161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4161");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean21 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setSerialJtaTransactions(true);
        atomikosProperties15.setCheckpointInterval(0L);
        atomikosProperties15.setEnableLogging(true);
        boolean boolean28 = atomikosProperties15.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test4162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4162");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int10 = atomikosProperties0.getMaxActives();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test4163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4163");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.lang.Class<?> wildcardClass29 = objSet28.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test4164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4164");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("{hi!=[], {}={}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test4165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4165");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
    }

    @Test
    public void test4166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4166");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str19 = atomikosProperties15.getTransactionManagerUniqueName();
        boolean boolean20 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setLogBaseName("{true=true}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test4167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4167");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties10.entrySet();
        java.lang.String str59 = properties10.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties10.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(objEnumeration60);
    }

    @Test
    public void test4168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4168");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties50.isSerialJtaTransactions();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        int int55 = atomikosProperties50.getMaxActives();
        boolean boolean57 = properties3.remove((java.lang.Object) int55, (java.lang.Object) 500L);
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties65.elements();
        boolean boolean69 = properties65.isEmpty();
        java.util.Set<java.lang.Object> objSet70 = properties65.keySet();
        boolean boolean71 = properties65.isEmpty();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties72.keys();
        java.lang.Object obj75 = properties65.remove((java.lang.Object) properties72);
        java.lang.Object obj76 = properties58.get((java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.keys();
        java.lang.Object obj79 = properties3.replace((java.lang.Object) properties72, (java.lang.Object) 1);
        int int80 = properties72.size();
        java.io.InputStream inputStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.load(inputStream81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertEquals("'" + obj79 + "' != '" + true + "'", obj79, true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test4169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4169");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        java.lang.String str4 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        long long12 = atomikosProperties5.getMaxTimeout();
        java.lang.String str13 = atomikosProperties5.getLogBaseName();
        long long14 = atomikosProperties5.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxTimeout((long) '#');
        boolean boolean38 = atomikosProperties31.isEnableLogging();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        atomikosProperties31.setEnableLogging(true);
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties43.elements();
        java.lang.Object obj49 = properties15.replace((java.lang.Object) true, (java.lang.Object) properties43);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        int int54 = properties50.size();
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.util.Set<java.lang.String> strSet56 = properties50.stringPropertyNames();
        boolean boolean57 = properties15.contains((java.lang.Object) strSet56);
        java.util.Collection<java.lang.Object> objCollection58 = properties15.values();
        java.lang.Object obj59 = properties0.putIfAbsent((java.lang.Object) long14, (java.lang.Object) properties15);
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream60, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test4170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4170");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
    }

    @Test
    public void test4171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4171");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration26 = properties23.propertyNames();
        java.lang.Object obj29 = properties23.setProperty("{}", "hi!");
        properties23.clear();
        boolean boolean31 = properties11.containsValue((java.lang.Object) properties23);
        java.util.Properties properties32 = new java.util.Properties(properties23);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties33.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties33.entrySet();
        java.util.Set<java.lang.String> strSet40 = properties33.stringPropertyNames();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties41.entrySet();
        boolean boolean47 = properties33.contains((java.lang.Object) properties41);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection52 = properties51.values();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties51.keys();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties54.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties54.entrySet();
        java.lang.Object obj62 = properties48.put((java.lang.Object) properties51, (java.lang.Object) properties54);
        java.lang.Object obj63 = properties51.clone();
        boolean boolean64 = properties33.containsKey((java.lang.Object) properties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties51.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties51.elements();
        properties51.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties51.keys();
        boolean boolean69 = properties32.containsValue((java.lang.Object) properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties51.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
    }

    @Test
    public void test4172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4172");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.lang.Object obj30 = properties24.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = properties16.remove((java.lang.Object) properties24, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        int int36 = properties35.size();
        int int37 = properties35.size();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj39 = properties35.get((java.lang.Object) properties38);
        boolean boolean40 = properties0.containsValue((java.lang.Object) properties38);
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties41.keys();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        int int50 = properties46.size();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        boolean boolean57 = properties46.containsKey((java.lang.Object) objSet56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties46.keys();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties59.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties59.entrySet();
        boolean boolean68 = properties46.remove((java.lang.Object) properties59, (java.lang.Object) 1.0f);
        boolean boolean69 = properties59.isEmpty();
        boolean boolean71 = properties41.remove((java.lang.Object) properties59, (java.lang.Object) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties59.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean76 = atomikosProperties73.isSerialJtaTransactions();
        java.lang.String str77 = atomikosProperties73.getService();
        boolean boolean78 = atomikosProperties73.isEnableLogging();
        java.util.Properties properties79 = atomikosProperties73.asProperties();
        java.util.Set<java.lang.String> strSet80 = properties79.stringPropertyNames();
        boolean boolean81 = properties79.isEmpty();
        java.lang.Object obj82 = properties59.remove((java.lang.Object) boolean81);
        int int83 = properties59.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.io.PrintWriter printWriter85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test4173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4173");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.lang.Object obj36 = properties0.put((java.lang.Object) false, (java.lang.Object) boolean35);
        java.lang.Object obj37 = properties0.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration38 = properties0.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{hi!=, false=true}");
    }

    @Test
    public void test4174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4174");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setLogBaseName("{{}={}}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long21 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str22 = atomikosProperties0.getLogBaseName();
        java.lang.String str23 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{{}={}}" + "'", str22, "{{}={}}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{{}={}}" + "'", str23, "{{}={}}");
    }

    @Test
    public void test4175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4175");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setCheckpointInterval((long) (-1));
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{=hi!}" + "'", str13, "{=hi!}");
    }

    @Test
    public void test4176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4176");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet15 = properties0.stringPropertyNames();
        boolean boolean16 = properties0.isEmpty();
        boolean boolean17 = properties0.isEmpty();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean22 = properties18.containsValue((java.lang.Object) "hi!");
        java.lang.String str24 = properties18.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration25 = properties18.propertyNames();
        java.lang.String str27 = properties18.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        java.lang.String str32 = atomikosProperties28.getService();
        boolean boolean33 = atomikosProperties28.isEnableLogging();
        java.util.Properties properties34 = atomikosProperties28.asProperties();
        atomikosProperties28.setForceShutdownOnVmExit(true);
        atomikosProperties28.setMaxActives((int) (short) -1);
        atomikosProperties28.setMaxTimeout((long) ' ');
        atomikosProperties28.setEnableLogging(false);
        atomikosProperties28.setService("{{}={}}");
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties45.isEmpty();
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        java.lang.Object obj55 = properties45.remove((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        boolean boolean59 = atomikosProperties56.isSerialJtaTransactions();
        atomikosProperties56.setTransactionManagerUniqueName("hi!");
        java.lang.String str62 = atomikosProperties56.getLogBaseName();
        java.lang.String str63 = atomikosProperties56.getLogBaseName();
        boolean boolean64 = atomikosProperties56.isForceShutdownOnVmExit();
        long long65 = atomikosProperties56.getMaxTimeout();
        java.lang.String str66 = atomikosProperties56.getTransactionManagerUniqueName();
        java.lang.String str67 = atomikosProperties56.getLogBaseName();
        boolean boolean68 = atomikosProperties56.isThreadedTwoPhaseCommit();
        atomikosProperties56.setThreadedTwoPhaseCommit(false);
        boolean boolean71 = properties18.replace((java.lang.Object) atomikosProperties28, (java.lang.Object) properties45, (java.lang.Object) atomikosProperties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setMaxTimeout((long) '#');
        java.lang.String str79 = atomikosProperties72.getLogBaseDir();
        atomikosProperties72.setMaxActives(1);
        atomikosProperties72.setService("hi!");
        atomikosProperties72.setTransactionManagerUniqueName("{tmlog=}");
        long long86 = atomikosProperties72.getDefaultJtaTimeout();
        java.lang.Object obj87 = properties0.getOrDefault((java.lang.Object) properties45, (java.lang.Object) atomikosProperties72);
        atomikosProperties72.setMaxActives(10);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tmlog" + "'", str67, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 10000L + "'", long86 == 10000L);
        org.junit.Assert.assertNotNull(obj87);
    }

    @Test
    public void test4177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4177");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        long long29 = atomikosProperties21.getDefaultJtaTimeout();
        java.util.Properties properties30 = atomikosProperties21.asProperties();
        java.lang.String str31 = atomikosProperties21.getTransactionManagerUniqueName();
        atomikosProperties21.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test4178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4178");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test4179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4179");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
    }

    @Test
    public void test4180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4180");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str7 = atomikosProperties0.getService();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        int int11 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
    }

    @Test
    public void test4181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4181");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setTransactionManagerUniqueName("tmlog");
        atomikosProperties11.setEnableLogging(true);
        long long23 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.setEnableLogging(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(false);
        atomikosProperties11.setLogBaseName("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
    }

    @Test
    public void test4182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4182");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.lang.String str29 = atomikosProperties16.getTransactionManagerUniqueName();
        boolean boolean30 = atomikosProperties16.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test4183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4183");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties5.containsKey((java.lang.Object) objSet15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties5.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        boolean boolean27 = properties5.remove((java.lang.Object) properties18, (java.lang.Object) 1.0f);
        boolean boolean28 = properties18.isEmpty();
        boolean boolean30 = properties0.remove((java.lang.Object) properties18, (java.lang.Object) 100);
        java.util.Set<java.lang.String> strSet31 = properties18.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        boolean boolean38 = atomikosProperties32.isEnableLogging();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean41 = properties18.contains((java.lang.Object) atomikosProperties32);
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.store(writer42, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test4184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4184");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<?> wildcardEnumeration23 = properties3.propertyNames();
        java.lang.String str25 = properties3.getProperty("{=hi!}");
        java.lang.Object obj26 = properties3.clone();
        java.lang.String str28 = properties3.getProperty("{{}={}}");
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.save(outputStream29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test4185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4185");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setService("{{}={}}");
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.save(outputStream11, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test4186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4186");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        java.util.Set<java.lang.Object> objSet32 = properties14.keySet();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet37 = properties34.stringPropertyNames();
        boolean boolean38 = properties33.containsValue((java.lang.Object) properties34);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Enumeration<?> wildcardEnumeration40 = properties33.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties33.entrySet();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        boolean boolean43 = properties33.isEmpty();
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection45 = properties44.values();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties44.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        boolean boolean55 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setMaxTimeout((long) '#');
        boolean boolean67 = atomikosProperties60.isEnableLogging();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setEnableLogging(true);
        atomikosProperties60.setLogBaseDir("");
        boolean boolean74 = properties44.replace((java.lang.Object) 10000L, (java.lang.Object) atomikosProperties48, (java.lang.Object) "");
        int int75 = atomikosProperties48.getMaxActives();
        atomikosProperties48.setSerialJtaTransactions(true);
        java.lang.Object obj78 = null;
        java.lang.Object obj79 = properties33.getOrDefault((java.lang.Object) atomikosProperties48, obj78);
        java.lang.Object obj80 = properties33.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 50 + "'", int75 == 50);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
    }

    @Test
    public void test4187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4187");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) ' ');
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties19);
    }

    @Test
    public void test4188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4188");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        boolean boolean39 = properties0.equals((java.lang.Object) properties3);
        boolean boolean41 = properties0.contains((java.lang.Object) 1L);
        java.io.InputStream inputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test4189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4189");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.clone();
        java.util.Set<java.lang.Object> objSet8 = properties0.keySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        boolean boolean20 = atomikosProperties17.isSerialJtaTransactions();
        java.util.Properties properties21 = atomikosProperties17.asProperties();
        java.lang.Object obj22 = properties9.remove((java.lang.Object) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        atomikosProperties23.setEnableLogging(false);
        boolean boolean30 = atomikosProperties23.isSerialJtaTransactions();
        int int31 = atomikosProperties23.getMaxActives();
        boolean boolean32 = atomikosProperties23.isEnableLogging();
        java.lang.String str33 = atomikosProperties23.getLogBaseDir();
        atomikosProperties23.setService("{=hi!}");
        boolean boolean36 = atomikosProperties23.isForceShutdownOnVmExit();
        java.lang.String str37 = atomikosProperties23.getLogBaseDir();
        long long38 = atomikosProperties23.getDefaultJtaTimeout();
        java.lang.Object obj39 = properties0.put((java.lang.Object) properties9, (java.lang.Object) long38);
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test4190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4190");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties10.entrySet();
        java.lang.String str59 = properties10.toString();
        java.io.Reader reader60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(reader60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEntrySet58);
    }

    @Test
    public void test4191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4191");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        atomikosProperties6.setLogBaseName("{{}={}}");
        atomikosProperties6.setLogBaseDir("{hi!=[]}");
        boolean boolean28 = atomikosProperties6.isSerialJtaTransactions();
        atomikosProperties6.setLogBaseDir("tmlog");
        java.util.Properties properties31 = atomikosProperties6.asProperties();
        boolean boolean32 = atomikosProperties6.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test4192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4192");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.lang.Object obj7 = properties0.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.lang.String str9 = properties0.getProperty("hi!");
        java.lang.String str11 = properties0.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean17 = atomikosProperties12.isForceShutdownOnVmExit();
        java.lang.String str18 = atomikosProperties12.getTransactionManagerUniqueName();
        atomikosProperties12.setLogBaseName("{}");
        java.lang.Object obj21 = properties0.remove((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setTransactionManagerUniqueName("{=hi!}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test4193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4193");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.setEnableLogging(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        atomikosProperties22.setLogBaseDir("{=hi!}");
        atomikosProperties22.setDefaultJtaTimeout((long) (short) 1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test4194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4194");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseDir("{hi!=[]}");
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str19 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
    }

    @Test
    public void test4195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4195");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties4.entrySet();
        java.lang.Object obj10 = properties4.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties4.keys();
        properties4.clear();
        int int13 = properties4.size();
        java.lang.String str15 = properties4.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test4196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4196");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.util.Properties properties66 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties74 = atomikosProperties67.asProperties();
        int int75 = atomikosProperties67.getMaxActives();
        atomikosProperties67.setService("hi!");
        long long78 = atomikosProperties67.getMaxTimeout();
        atomikosProperties67.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties81 = atomikosProperties67.asProperties();
        atomikosProperties67.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties84 = atomikosProperties67.asProperties();
        boolean boolean85 = properties0.containsKey((java.lang.Object) properties84);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 50 + "'", int75 == 50);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test4197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4197");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = atomikosProperties16.asProperties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        boolean boolean34 = properties31.isEmpty();
        java.lang.Object obj37 = properties31.setProperty("", "hi!");
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.elements();
        boolean boolean42 = properties38.isEmpty();
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        boolean boolean44 = properties38.isEmpty();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        java.lang.Object obj48 = properties38.remove((java.lang.Object) properties45);
        java.lang.Object obj49 = properties31.get((java.lang.Object) properties45);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        boolean boolean56 = properties50.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties50.entrySet();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = properties50.remove((java.lang.Object) properties58, (java.lang.Object) atomikosProperties65);
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.lang.String str71 = properties30.toString();
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet75 = properties72.stringPropertyNames();
        java.util.Properties properties76 = new java.util.Properties();
        java.util.Properties properties77 = new java.util.Properties();
        java.lang.Object obj79 = properties77.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet80 = properties77.stringPropertyNames();
        boolean boolean81 = properties76.containsValue((java.lang.Object) properties77);
        java.util.Collection<java.lang.Object> objCollection82 = properties76.values();
        java.util.Enumeration<?> wildcardEnumeration83 = properties76.propertyNames();
        java.lang.Object obj85 = properties72.put((java.lang.Object) wildcardEnumeration83, (java.lang.Object) 10.0d);
        java.lang.String str87 = properties72.getProperty("");
        int int88 = properties72.size();
        boolean boolean89 = properties30.equals((java.lang.Object) properties72);
        java.util.Set<java.lang.Object> objSet90 = properties72.keySet();
        java.lang.Object obj91 = properties72.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objSet90);
        org.junit.Assert.assertNotNull(obj91);
    }

    @Test
    public void test4198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4198");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.String str16 = properties3.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties17.getMaxTimeout();
        boolean boolean25 = properties3.containsValue((java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties3.elements();
        java.lang.String str28 = properties3.getProperty("{hi!=[]}");
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.save(outputStream29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test4199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4199");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test4200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4200");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.lang.String str21 = properties0.getProperty("");
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties0.elements();
        java.lang.String str24 = properties0.getProperty("{}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
    }

    @Test
    public void test4201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4201");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{{}={}}");
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout(100L);
        long long21 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 100L + "'", long21 == 100L);
    }

    @Test
    public void test4202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4202");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str15 = atomikosProperties0.getService();
        java.lang.Class<?> wildcardClass16 = atomikosProperties0.getClass();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{{}={}}" + "'", str15, "{{}={}}");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test4203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4203");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setLogBaseDir("hi!");
        java.lang.String str27 = atomikosProperties12.getLogBaseDir();
        atomikosProperties12.setDefaultJtaTimeout(500L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test4204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4204");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        int int40 = properties39.size();
        java.io.InputStream inputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.loadFromXML(inputStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test4205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4205");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        boolean boolean40 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties8.getLogBaseDir();
        java.lang.String str42 = atomikosProperties8.getService();
        boolean boolean43 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.lang.String str44 = atomikosProperties8.getLogBaseDir();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test4206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4206");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setMaxActives((int) (short) -1);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream12, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test4207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4207");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.lang.Object obj12 = properties5.setProperty("tmlog", "");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.lang.Object obj14 = properties5.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setMaxTimeout((long) '#');
        boolean boolean22 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setLogBaseDir("tmlog");
        boolean boolean25 = properties5.equals((java.lang.Object) atomikosProperties15);
        java.lang.String str27 = properties5.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.lang.String> strSet28 = properties5.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test4208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4208");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setService("{=hi!}");
        atomikosProperties51.setLogBaseDir("");
        atomikosProperties51.setEnableLogging(true);
        boolean boolean64 = properties0.containsValue((java.lang.Object) true);
        java.io.OutputStream outputStream65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream65, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test4209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4209");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties0.propertyNames();
        java.lang.Object obj7 = properties0.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.elements();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test4210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4210");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        boolean boolean18 = properties0.containsKey((java.lang.Object) 35);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties19.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.lang.String str35 = properties27.getProperty("hi!");
        java.lang.String str37 = properties27.getProperty("");
        java.lang.Object obj39 = properties19.putIfAbsent((java.lang.Object) "", (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout((long) '#');
        boolean boolean47 = atomikosProperties40.isEnableLogging();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setMaxActives((int) (byte) 100);
        atomikosProperties40.setForceShutdownOnVmExit(false);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.String str58 = properties54.toString();
        java.lang.String str59 = properties54.toString();
        java.util.Set<java.lang.Object> objSet60 = properties54.keySet();
        boolean boolean61 = properties19.remove((java.lang.Object) false, (java.lang.Object) objSet60);
        java.lang.Object obj62 = properties19.clone();
        boolean boolean63 = properties0.containsKey((java.lang.Object) properties19);
        int int64 = properties0.size();
        java.util.Enumeration<?> wildcardEnumeration65 = properties0.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setEnableLogging(false);
        boolean boolean73 = atomikosProperties66.isSerialJtaTransactions();
        int int74 = atomikosProperties66.getMaxActives();
        boolean boolean75 = atomikosProperties66.isEnableLogging();
        long long76 = atomikosProperties66.getCheckpointInterval();
        java.util.Properties properties77 = atomikosProperties66.asProperties();
        java.util.Properties properties78 = atomikosProperties66.asProperties();
        atomikosProperties66.setLogBaseDir("{tmlog=}");
        atomikosProperties66.setThreadedTwoPhaseCommit(false);
        boolean boolean83 = atomikosProperties66.isForceShutdownOnVmExit();
        boolean boolean84 = properties0.containsKey((java.lang.Object) atomikosProperties66);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{=100.0}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{=100.0}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{=100.0}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 500L + "'", long76 == 500L);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test4211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4211");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setTransactionManagerUniqueName("hi!");
        java.lang.String str10 = atomikosProperties4.getLogBaseName();
        java.lang.String str11 = atomikosProperties4.getLogBaseName();
        java.lang.Object obj12 = properties0.get((java.lang.Object) str11);
        java.lang.Object obj15 = properties0.setProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}", "{{}=tmlog}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties0.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties17.elements();
        boolean boolean21 = properties17.isEmpty();
        java.util.Set<java.lang.Object> objSet22 = properties17.keySet();
        boolean boolean23 = properties17.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties17.entrySet();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.lang.Object obj31 = properties25.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = properties17.remove((java.lang.Object) properties25, (java.lang.Object) atomikosProperties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        atomikosProperties36.setTransactionManagerUniqueName("hi!");
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        boolean boolean49 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties43.entrySet();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.lang.Object obj57 = properties51.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        boolean boolean61 = properties43.remove((java.lang.Object) properties51, (java.lang.Object) atomikosProperties58);
        java.util.Properties properties62 = new java.util.Properties(properties51);
        int int63 = properties62.size();
        int int64 = properties62.size();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj66 = properties62.get((java.lang.Object) properties65);
        java.lang.Object obj67 = properties17.getOrDefault((java.lang.Object) atomikosProperties36, (java.lang.Object) properties65);
        java.lang.Class<?> wildcardClass68 = properties17.getClass();
        boolean boolean69 = properties0.containsValue((java.lang.Object) properties17);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test4212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4212");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setDefaultJtaTimeout(10000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test4213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4213");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        boolean boolean20 = properties19.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        atomikosProperties21.setMaxTimeout((long) '#');
        boolean boolean28 = atomikosProperties21.isEnableLogging();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setCheckpointInterval(0L);
        java.lang.String str33 = atomikosProperties21.getService();
        boolean boolean34 = atomikosProperties21.isForceShutdownOnVmExit();
        java.util.Properties properties35 = atomikosProperties21.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        long long43 = atomikosProperties36.getMaxTimeout();
        java.lang.String str44 = atomikosProperties36.getLogBaseName();
        long long45 = atomikosProperties36.getMaxTimeout();
        long long46 = atomikosProperties36.getCheckpointInterval();
        boolean boolean47 = atomikosProperties36.isEnableLogging();
        java.lang.String str48 = atomikosProperties36.getTransactionManagerUniqueName();
        java.lang.Object obj49 = properties19.replace((java.lang.Object) properties35, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isEnableLogging();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setEnableLogging(true);
        atomikosProperties50.setLogBaseName("{}");
        long long64 = atomikosProperties50.getMaxTimeout();
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setEnableLogging(false);
        atomikosProperties50.setLogBaseDir("{}");
        atomikosProperties50.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long73 = atomikosProperties50.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setSerialJtaTransactions(false);
        atomikosProperties74.setThreadedTwoPhaseCommit(true);
        atomikosProperties74.setMaxTimeout((long) '#');
        boolean boolean81 = atomikosProperties74.isEnableLogging();
        atomikosProperties74.setMaxActives((int) '#');
        int int84 = atomikosProperties74.getMaxActives();
        java.lang.String str85 = atomikosProperties74.getLogBaseDir();
        java.lang.String str86 = atomikosProperties74.getLogBaseDir();
        java.lang.Object obj87 = properties35.putIfAbsent((java.lang.Object) long73, (java.lang.Object) atomikosProperties74);
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.store(outputStream88, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 35L + "'", long64 == 35L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 35L + "'", long73 == 35L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 35 + "'", int84 == 35);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test4214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4214");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test4215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4215");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        java.util.Properties properties27 = new java.util.Properties(properties0);
        java.io.PrintWriter printWriter28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test4216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4216");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet9 = properties0.keySet();
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objSet9);
    }

    @Test
    public void test4217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4217");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives(2);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer9, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test4218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4218");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.lang.String> strSet40 = properties34.stringPropertyNames();
        java.util.Set<java.lang.String> strSet41 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setEnableLogging(true);
        atomikosProperties42.setLogBaseName("{}");
        long long56 = atomikosProperties42.getDefaultJtaTimeout();
        java.lang.Object obj57 = properties10.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        boolean boolean63 = atomikosProperties58.isSerialJtaTransactions();
        boolean boolean64 = atomikosProperties58.isForceShutdownOnVmExit();
        java.lang.String str65 = atomikosProperties58.getService();
        boolean boolean66 = atomikosProperties58.isThreadedTwoPhaseCommit();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        boolean boolean73 = properties67.isEmpty();
        java.util.Properties properties74 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection75 = properties74.values();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties74.keys();
        java.lang.Object obj77 = properties67.remove((java.lang.Object) properties74);
        int int78 = properties67.size();
        java.lang.Object obj79 = properties34.putIfAbsent((java.lang.Object) atomikosProperties58, (java.lang.Object) int78);
        java.io.Writer writer80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.store(writer80, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test4219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4219");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Collection<java.lang.Object> objCollection3 = properties0.values();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties10.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.lang.Object obj18 = properties4.put((java.lang.Object) properties7, (java.lang.Object) properties10);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        boolean boolean25 = properties19.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.lang.Object obj33 = properties27.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = properties19.remove((java.lang.Object) properties27, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties38 = new java.util.Properties(properties27);
        int int39 = properties38.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = atomikosProperties41.isSerialJtaTransactions();
        java.lang.String str45 = atomikosProperties41.getService();
        boolean boolean46 = atomikosProperties41.isEnableLogging();
        java.lang.String str47 = atomikosProperties41.getTransactionManagerUniqueName();
        boolean boolean48 = properties38.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties41);
        atomikosProperties41.setMaxActives((int) (short) -1);
        boolean boolean51 = atomikosProperties41.isThreadedTwoPhaseCommit();
        long long52 = atomikosProperties41.getDefaultJtaTimeout();
        atomikosProperties41.setForceShutdownOnVmExit(true);
        atomikosProperties41.setSerialJtaTransactions(true);
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        int int61 = properties57.size();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        boolean boolean68 = properties57.containsKey((java.lang.Object) objSet67);
        java.lang.Object obj69 = properties7.putIfAbsent((java.lang.Object) true, (java.lang.Object) boolean68);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.io.OutputStream outputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream71, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objCollection3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10000L + "'", long52 == 10000L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test4220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4220");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long7 = atomikosProperties0.getMaxTimeout();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        long long9 = atomikosProperties0.getMaxTimeout();
        long long10 = atomikosProperties0.getCheckpointInterval();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test4221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4221");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        long long6 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
    }

    @Test
    public void test4222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4222");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        properties11.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test4223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4223");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setCheckpointInterval((long) 2);
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long12 = atomikosProperties0.getMaxTimeout();
        long long13 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test4224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4224");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties17.isEmpty();
        java.lang.Object obj23 = properties17.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = properties9.remove((java.lang.Object) properties17, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        int int29 = properties28.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = atomikosProperties31.isSerialJtaTransactions();
        java.lang.String str35 = atomikosProperties31.getService();
        boolean boolean36 = atomikosProperties31.isEnableLogging();
        java.lang.String str37 = atomikosProperties31.getTransactionManagerUniqueName();
        boolean boolean38 = properties28.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties31);
        atomikosProperties31.setMaxActives((int) (short) -1);
        boolean boolean41 = atomikosProperties31.isThreadedTwoPhaseCommit();
        atomikosProperties31.setDefaultJtaTimeout((long) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        int int48 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setSerialJtaTransactions(true);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        boolean boolean57 = properties51.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties51.entrySet();
        java.util.Set<java.lang.Object> objSet59 = properties51.keySet();
        boolean boolean60 = properties0.replace((java.lang.Object) atomikosProperties31, (java.lang.Object) atomikosProperties44, (java.lang.Object) objSet59);
        java.util.Collection<java.lang.Object> objCollection61 = properties0.values();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties62.elements();
        boolean boolean66 = properties62.isEmpty();
        java.util.Set<java.lang.Object> objSet67 = properties62.keySet();
        boolean boolean69 = properties62.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection70 = properties62.values();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        boolean boolean74 = properties71.isEmpty();
        java.lang.Object obj77 = properties71.setProperty("", "hi!");
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties78.elements();
        boolean boolean82 = properties78.isEmpty();
        java.util.Set<java.lang.Object> objSet83 = properties78.keySet();
        boolean boolean84 = properties78.isEmpty();
        java.util.Properties properties85 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection86 = properties85.values();
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties85.keys();
        java.lang.Object obj88 = properties78.remove((java.lang.Object) properties85);
        java.lang.Object obj89 = properties71.get((java.lang.Object) properties85);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties85.keys();
        java.lang.Object obj91 = properties62.get((java.lang.Object) properties85);
        java.lang.String str92 = properties85.toString();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties85);
        boolean boolean94 = properties0.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "{}" + "'", str92, "{}");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test4225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4225");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.io.InputStream inputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
    }

    @Test
    public void test4226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4226");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setMaxTimeout((long) 35);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setMaxActives((int) 'a');
        atomikosProperties0.setLogBaseDir("{hi!=[], {}={}}");
        boolean boolean19 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test4227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4227");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives(35);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setCheckpointInterval((long) '4');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test4228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4228");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int7 = atomikosProperties0.getMaxActives();
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setService("{hi!=[]}");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test4229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4229");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) (short) 0);
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test4230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4230");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        boolean boolean13 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.lang.Object obj17 = properties10.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties10.entrySet();
        boolean boolean19 = properties0.contains((java.lang.Object) properties10);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.lang.String str28 = properties20.getProperty("hi!");
        java.lang.String str30 = properties20.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setEnableLogging(false);
        boolean boolean38 = properties20.containsKey((java.lang.Object) atomikosProperties31);
        atomikosProperties31.setSerialJtaTransactions(true);
        java.lang.String str41 = atomikosProperties31.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) 100);
        atomikosProperties42.setSerialJtaTransactions(true);
        atomikosProperties42.setMaxActives(0);
        java.lang.Object obj56 = properties10.replace((java.lang.Object) atomikosProperties31, (java.lang.Object) 0);
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream57, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test4231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4231");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setService("{=hi!}");
        atomikosProperties51.setLogBaseDir("");
        atomikosProperties51.setEnableLogging(true);
        boolean boolean64 = properties0.containsValue((java.lang.Object) true);
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test4232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4232");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet24 = properties0.keySet();
        java.lang.String str25 = properties0.toString();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        boolean boolean37 = properties34.isEmpty();
        java.lang.Object obj40 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        boolean boolean44 = properties26.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        int int46 = properties45.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str52 = atomikosProperties48.getService();
        boolean boolean53 = atomikosProperties48.isEnableLogging();
        java.lang.String str54 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean55 = properties45.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties48);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.elements();
        boolean boolean60 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties56.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties56.entrySet();
        java.lang.Object obj63 = properties45.remove((java.lang.Object) objEntrySet62);
        java.lang.Object obj64 = properties45.clone();
        java.util.Properties properties65 = new java.util.Properties(properties45);
        java.lang.String str66 = properties65.toString();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream68, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{}" + "'", str66, "{}");
    }

    @Test
    public void test4233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4233");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean4 = atomikosProperties0.isEnableLogging();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setMaxTimeout((long) 1);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(35);
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test4234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4234");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long15 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
    }

    @Test
    public void test4235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4235");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.keys();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties23.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        java.lang.Object obj31 = properties17.put((java.lang.Object) properties20, (java.lang.Object) properties23);
        java.lang.String str33 = properties20.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        long long41 = atomikosProperties34.getMaxTimeout();
        boolean boolean42 = properties20.containsValue((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties20.elements();
        java.util.Set<java.lang.String> strSet44 = properties20.stringPropertyNames();
        boolean boolean45 = properties11.contains((java.lang.Object) properties20);
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        boolean boolean49 = properties46.isEmpty();
        java.lang.Object obj52 = properties46.setProperty("", "hi!");
        int int53 = properties46.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        boolean boolean57 = atomikosProperties54.isSerialJtaTransactions();
        java.lang.String str58 = atomikosProperties54.getService();
        atomikosProperties54.setEnableLogging(false);
        java.util.Properties properties61 = atomikosProperties54.asProperties();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet65 = properties62.stringPropertyNames();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        boolean boolean71 = properties66.containsValue((java.lang.Object) properties67);
        java.util.Collection<java.lang.Object> objCollection72 = properties66.values();
        java.util.Enumeration<?> wildcardEnumeration73 = properties66.propertyNames();
        java.lang.Object obj75 = properties62.put((java.lang.Object) wildcardEnumeration73, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setMaxTimeout((long) '#');
        boolean boolean83 = atomikosProperties76.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setSerialJtaTransactions(false);
        atomikosProperties84.setThreadedTwoPhaseCommit(true);
        atomikosProperties84.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj91 = properties62.getOrDefault((java.lang.Object) boolean83, (java.lang.Object) atomikosProperties84);
        java.lang.Object obj92 = properties46.putIfAbsent((java.lang.Object) atomikosProperties54, (java.lang.Object) atomikosProperties84);
        java.lang.Object obj93 = properties20.remove((java.lang.Object) atomikosProperties54);
        atomikosProperties54.setMaxActives((int) (byte) 100);
        java.lang.Object obj96 = properties10.get((java.lang.Object) (byte) 100);
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream97, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(wildcardEnumeration73);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test4236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4236");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.String> strSet14 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet15 = properties0.stringPropertyNames();
        boolean boolean16 = properties0.isEmpty();
        boolean boolean17 = properties0.isEmpty();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties24.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties24.entrySet();
        java.lang.Object obj32 = properties18.put((java.lang.Object) properties21, (java.lang.Object) properties24);
        java.lang.Object obj33 = properties21.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setCheckpointInterval((long) 100);
        atomikosProperties34.setSerialJtaTransactions(true);
        boolean boolean46 = properties21.equals((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<?> wildcardEnumeration47 = properties21.propertyNames();
        java.lang.Object obj48 = properties21.clone();
        java.lang.Object obj49 = properties0.get((java.lang.Object) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isEnableLogging();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setMaxActives((int) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setLogBaseName("{=hi!}");
        java.lang.String str69 = atomikosProperties62.getTransactionManagerUniqueName();
        java.util.Properties properties70 = atomikosProperties62.asProperties();
        boolean boolean71 = atomikosProperties62.isForceShutdownOnVmExit();
        atomikosProperties62.setDefaultJtaTimeout(1L);
        atomikosProperties62.setDefaultJtaTimeout((long) 2);
        boolean boolean76 = atomikosProperties62.isEnableLogging();
        java.lang.Object obj77 = properties0.getOrDefault((java.lang.Object) atomikosProperties50, (java.lang.Object) boolean76);
        java.lang.Object obj80 = properties0.setProperty("{{}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + true + "'", obj77, true);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test4237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4237");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.io.InputStream inputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test4238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4238");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int11 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
    }

    @Test
    public void test4239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4239");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        atomikosProperties12.setForceShutdownOnVmExit(false);
        atomikosProperties12.setService("{{}={}}");
        atomikosProperties12.setEnableLogging(true);
        java.lang.String str44 = atomikosProperties12.getLogBaseDir();
        boolean boolean45 = atomikosProperties12.isEnableLogging();
        long long46 = atomikosProperties12.getDefaultJtaTimeout();
        long long47 = atomikosProperties12.getCheckpointInterval();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 500L + "'", long47 == 500L);
    }

    @Test
    public void test4240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4240");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties0.elements();
        java.lang.String str17 = properties0.getProperty("{=hi!}");
        java.io.PrintStream printStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test4241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4241");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.lang.Object obj20 = properties13.setProperty("tmlog", "");
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection25 = properties24.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties24.keys();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties27.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties27.entrySet();
        java.lang.Object obj35 = properties21.put((java.lang.Object) properties24, (java.lang.Object) properties27);
        java.lang.String str37 = properties24.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        java.lang.Object obj42 = properties13.put((java.lang.Object) properties24, (java.lang.Object) boolean41);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setSerialJtaTransactions(false);
        java.lang.String str51 = atomikosProperties44.getService();
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.util.Properties properties53 = atomikosProperties44.asProperties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.lang.Object obj55 = properties12.getOrDefault((java.lang.Object) properties24, (java.lang.Object) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setMaxTimeout((long) '#');
        boolean boolean63 = atomikosProperties56.isEnableLogging();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        atomikosProperties56.setEnableLogging(true);
        atomikosProperties56.setLogBaseName("{}");
        long long70 = atomikosProperties56.getDefaultJtaTimeout();
        boolean boolean71 = atomikosProperties56.isSerialJtaTransactions();
        boolean boolean72 = properties24.equals((java.lang.Object) atomikosProperties56);
        atomikosProperties56.setMaxActives((int) (short) 10);
        long long75 = atomikosProperties56.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(obj55);
// flaky:         org.junit.Assert.assertEquals(obj55.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
    }

    @Test
    public void test4242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4242");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Enumeration<?> wildcardEnumeration21 = properties19.propertyNames();
        java.lang.Object obj22 = properties19.clone();
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.io.InputStream inputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(inputStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
    }

    @Test
    public void test4243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4243");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str9 = atomikosProperties0.getService();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test4244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4244");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test4245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4245");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long14 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseName("{tmlog=}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test4246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4246");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        boolean boolean30 = atomikosProperties27.isSerialJtaTransactions();
        java.lang.String str31 = atomikosProperties27.getService();
        atomikosProperties27.setMaxActives((int) (byte) 100);
        atomikosProperties27.setDefaultJtaTimeout((long) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj45 = properties0.replace((java.lang.Object) (-1), (java.lang.Object) false);
        java.io.Reader reader46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test4247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4247");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str14 = atomikosProperties0.getService();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.io.Writer writer16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(writer16, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test4248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4248");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        properties0.clear();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties31.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties31.entrySet();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        boolean boolean42 = properties39.isEmpty();
        java.lang.Object obj45 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean49 = properties31.remove((java.lang.Object) properties39, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties50 = new java.util.Properties(properties39);
        java.lang.Object obj51 = properties0.remove((java.lang.Object) properties39);
        int int52 = properties39.size();
        java.util.Properties properties53 = new java.util.Properties(properties39);
        java.io.PrintWriter printWriter54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.list(printWriter54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test4249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4249");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties9.getService();
        boolean boolean14 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties9.asProperties();
        atomikosProperties9.setForceShutdownOnVmExit(true);
        atomikosProperties9.setMaxActives((int) (short) -1);
        boolean boolean20 = properties0.containsKey((java.lang.Object) (short) -1);
        java.util.Set<java.lang.Object> objSet21 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties0.entrySet();
        int int23 = properties0.size();
        java.io.InputStream inputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test4250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4250");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        boolean boolean34 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties31.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties31.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties31.keys();
        java.lang.Object obj38 = properties5.remove((java.lang.Object) properties31);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test4251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4251");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("{tmlog=}");
        java.util.Set<java.lang.String> strSet15 = properties11.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test4252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4252");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
    }

    @Test
    public void test4253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4253");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.util.Set<java.lang.String> strSet33 = properties10.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean40 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        java.lang.Object obj48 = properties42.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean52 = properties34.remove((java.lang.Object) properties42, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties53 = new java.util.Properties(properties42);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties54.entrySet();
        java.lang.Class<?> wildcardClass60 = objEntrySet59.getClass();
        java.lang.Object obj61 = properties10.getOrDefault((java.lang.Object) properties42, (java.lang.Object) wildcardClass60);
        java.util.Collection<java.lang.Object> objCollection62 = properties10.values();
        java.lang.Object obj65 = properties10.setProperty("{true=true}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class java.util.Collections$SynchronizedSet");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class java.util.Collections$SynchronizedSet");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class java.util.Collections$SynchronizedSet");
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test4254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4254");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        java.lang.String str35 = atomikosProperties25.getTransactionManagerUniqueName();
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        boolean boolean40 = properties15.contains((java.lang.Object) atomikosProperties25);
        boolean boolean41 = atomikosProperties25.isForceShutdownOnVmExit();
        atomikosProperties25.setSerialJtaTransactions(true);
        java.lang.String str44 = atomikosProperties25.getService();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test4255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4255");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setCheckpointInterval((-1L));
        atomikosProperties0.setTransactionManagerUniqueName("{[]=0.0}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test4256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4256");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) (short) -1);
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str20 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test4257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4257");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration26 = properties23.propertyNames();
        java.lang.Object obj29 = properties23.setProperty("{}", "hi!");
        properties23.clear();
        boolean boolean31 = properties11.containsValue((java.lang.Object) properties23);
        java.util.Properties properties32 = new java.util.Properties(properties23);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties33.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties33.entrySet();
        java.util.Set<java.lang.String> strSet40 = properties33.stringPropertyNames();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties41.entrySet();
        boolean boolean47 = properties33.contains((java.lang.Object) properties41);
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection52 = properties51.values();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties51.keys();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties54.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties54.entrySet();
        java.lang.Object obj62 = properties48.put((java.lang.Object) properties51, (java.lang.Object) properties54);
        java.lang.Object obj63 = properties51.clone();
        boolean boolean64 = properties33.containsKey((java.lang.Object) properties51);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties51.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties51.elements();
        properties51.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties51.keys();
        boolean boolean69 = properties32.containsValue((java.lang.Object) properties51);
        java.util.Set<java.lang.String> strSet70 = properties32.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strSet70);
    }

    @Test
    public void test4258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4258");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.lang.Object obj33 = properties24.put((java.lang.Object) strSet31, (java.lang.Object) 0.0d);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.lang.Object obj51 = properties24.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) (short) 10);
        java.util.Enumeration<?> wildcardEnumeration52 = properties34.propertyNames();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.save(outputStream54, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
    }

    @Test
    public void test4259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4259");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        atomikosProperties3.setService("{=hi!}");
        atomikosProperties3.setLogBaseDir("{}");
        java.lang.String str33 = atomikosProperties3.getLogBaseName();
        int int34 = atomikosProperties3.getMaxActives();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
    }

    @Test
    public void test4260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4260");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        boolean boolean45 = properties40.containsValue((java.lang.Object) properties41);
        java.util.Collection<java.lang.Object> objCollection46 = properties40.values();
        java.util.Enumeration<?> wildcardEnumeration47 = properties40.propertyNames();
        java.lang.Object obj49 = properties36.put((java.lang.Object) wildcardEnumeration47, (java.lang.Object) 10.0d);
        boolean boolean50 = properties34.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<?> wildcardEnumeration51 = properties34.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        atomikosProperties52.setTransactionManagerUniqueName("tmlog");
        atomikosProperties52.setEnableLogging(true);
        boolean boolean60 = properties3.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties52);
        java.util.Set<java.lang.Object> objSet61 = properties34.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objSet61);
    }

    @Test
    public void test4261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4261");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration11 = properties0.propertyNames();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        boolean boolean15 = properties12.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties12.elements();
        java.lang.Object obj19 = properties12.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties12.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties12);
        java.lang.Object obj22 = properties21.clone();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.util.Enumeration<?> wildcardEnumeration36 = properties29.propertyNames();
        java.lang.Object obj38 = properties25.put((java.lang.Object) wildcardEnumeration36, (java.lang.Object) 10.0d);
        boolean boolean39 = properties23.equals((java.lang.Object) 10.0d);
        boolean boolean41 = properties23.containsKey((java.lang.Object) 35);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties23.entrySet();
        java.lang.Object obj43 = properties0.put(obj22, (java.lang.Object) properties23);
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        int int48 = properties44.size();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        boolean boolean55 = properties44.containsKey((java.lang.Object) objSet54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties44.keys();
        int int57 = properties44.size();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection59 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties58.keys();
        java.lang.Object obj63 = properties58.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet64 = properties58.stringPropertyNames();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        boolean boolean68 = properties65.isEmpty();
        java.util.Set<java.lang.String> strSet69 = properties65.stringPropertyNames();
        boolean boolean70 = properties58.containsKey((java.lang.Object) properties65);
        java.lang.Object obj71 = properties23.put((java.lang.Object) int57, (java.lang.Object) properties65);
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties72.elements();
        boolean boolean76 = properties72.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties72.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties72.entrySet();
        java.util.Set<java.lang.String> strSet79 = properties72.stringPropertyNames();
        java.lang.Object obj82 = properties72.setProperty("{}", "tmlog");
        java.util.Collection<java.lang.Object> objCollection83 = properties72.values();
        java.lang.Object obj84 = properties23.get((java.lang.Object) objCollection83);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objCollection83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test4262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4262");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 50);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        atomikosProperties9.setForceShutdownOnVmExit(false);
        atomikosProperties9.setSerialJtaTransactions(false);
        java.lang.Object obj23 = properties8.get((java.lang.Object) false);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        boolean boolean29 = properties24.containsValue((java.lang.Object) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties24.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.lang.Object obj38 = properties24.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet37);
        java.util.Set<java.lang.Object> objSet39 = properties24.keySet();
        java.util.Set<java.lang.Object> objSet40 = properties24.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties24.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = properties42.containsValue((java.lang.Object) atomikosProperties46);
        java.lang.String str49 = properties42.getProperty("tmlog");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        java.lang.Object obj58 = properties42.get((java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = atomikosProperties59.isSerialJtaTransactions();
        atomikosProperties59.setCheckpointInterval((long) 10);
        atomikosProperties59.setForceShutdownOnVmExit(true);
        java.lang.String str67 = atomikosProperties59.getTransactionManagerUniqueName();
        long long68 = atomikosProperties59.getMaxTimeout();
        boolean boolean69 = properties8.remove((java.lang.Object) '#', (java.lang.Object) long68);
        java.lang.String str72 = properties8.getProperty("tmlog", "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
    }

    @Test
    public void test4263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4263");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test4264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4264");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str19 = atomikosProperties15.getService();
        boolean boolean20 = atomikosProperties15.isEnableLogging();
        java.lang.String str21 = atomikosProperties15.getTransactionManagerUniqueName();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        int int26 = properties22.size();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties22.containsKey((java.lang.Object) objSet32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties22.keys();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties35.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties35.entrySet();
        boolean boolean44 = properties22.remove((java.lang.Object) properties35, (java.lang.Object) 1.0f);
        boolean boolean45 = properties35.isEmpty();
        java.lang.Object obj46 = properties0.put((java.lang.Object) atomikosProperties15, (java.lang.Object) properties35);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        boolean boolean53 = properties47.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties47.entrySet();
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        boolean boolean58 = properties55.isEmpty();
        java.lang.Object obj61 = properties55.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean65 = properties47.remove((java.lang.Object) properties55, (java.lang.Object) atomikosProperties62);
        atomikosProperties62.setSerialJtaTransactions(false);
        boolean boolean68 = properties35.contains((java.lang.Object) atomikosProperties62);
        atomikosProperties62.setCheckpointInterval((-1L));
        java.lang.String str71 = atomikosProperties62.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test4265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4265");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean29 = properties23.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties23.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties23.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.lang.String str36 = properties32.toString();
        java.lang.String str37 = properties32.toString();
        java.lang.String str39 = properties32.getProperty("{{}={}}");
        java.lang.Object obj40 = properties0.replace((java.lang.Object) objEnumeration31, (java.lang.Object) "{{}={}}");
        java.lang.String str42 = properties0.getProperty("{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test4266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4266");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) 0);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.keys();
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
    }

    @Test
    public void test4267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4267");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.io.Reader reader15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test4268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4268");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties21.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties21.entrySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        boolean boolean32 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = properties29.containsValue((java.lang.Object) atomikosProperties33);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        java.util.Set<java.lang.String> strSet42 = properties35.stringPropertyNames();
        java.lang.Object obj43 = properties21.getOrDefault((java.lang.Object) properties29, (java.lang.Object) properties35);
        boolean boolean44 = properties21.isEmpty();
        java.util.Collection<java.lang.Object> objCollection45 = properties21.values();
        java.lang.Object obj46 = properties19.get((java.lang.Object) objCollection45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        atomikosProperties47.setEnableLogging(false);
        atomikosProperties47.setForceShutdownOnVmExit(true);
        boolean boolean56 = atomikosProperties47.isSerialJtaTransactions();
        java.util.Properties properties57 = atomikosProperties47.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.keys();
        boolean boolean59 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties57.keySet();
        boolean boolean61 = properties19.contains((java.lang.Object) properties57);
        java.lang.Object obj62 = properties19.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
    }

    @Test
    public void test4269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4269");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties4.elements();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        java.lang.Object obj16 = properties4.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean15);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        boolean boolean20 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties17.keys();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet25 = properties22.stringPropertyNames();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Enumeration<?> wildcardEnumeration33 = properties26.propertyNames();
        java.lang.Object obj35 = properties22.put((java.lang.Object) wildcardEnumeration33, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet40 = properties37.stringPropertyNames();
        boolean boolean41 = properties36.containsValue((java.lang.Object) properties37);
        java.util.Collection<java.lang.Object> objCollection42 = properties36.values();
        java.lang.Object obj43 = properties36.clone();
        boolean boolean44 = properties4.replace((java.lang.Object) properties17, (java.lang.Object) 10.0d, obj43);
        java.util.Collection<java.lang.Object> objCollection45 = properties17.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setEnableLogging(false);
        boolean boolean53 = atomikosProperties46.isSerialJtaTransactions();
        int int54 = atomikosProperties46.getMaxActives();
        boolean boolean55 = atomikosProperties46.isEnableLogging();
        long long56 = atomikosProperties46.getCheckpointInterval();
        java.util.Properties properties57 = atomikosProperties46.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        boolean boolean59 = properties17.containsValue((java.lang.Object) properties57);
        boolean boolean60 = properties17.isEmpty();
        java.util.Properties properties61 = new java.util.Properties(properties17);
        java.util.Properties properties62 = new java.util.Properties(properties17);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean68 = properties63.containsValue((java.lang.Object) atomikosProperties67);
        java.util.Properties properties69 = atomikosProperties67.asProperties();
        atomikosProperties67.setMaxTimeout((long) 50);
        java.lang.String str72 = atomikosProperties67.getTransactionManagerUniqueName();
        java.lang.Object obj73 = properties3.replace((java.lang.Object) properties17, (java.lang.Object) atomikosProperties67);
        java.io.PrintStream printStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.list(printStream74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + true + "'", obj16, true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 500L + "'", long56 == 500L);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test4270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4270");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties0.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties0);
        properties0.clear();
        java.util.Properties properties23 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEntrySet20);
    }

    @Test
    public void test4271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4271");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        properties15.clear();
        java.lang.Object obj25 = properties15.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
    }

    @Test
    public void test4272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4272");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (byte) 100);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test4273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4273");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.lang.String str6 = properties0.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setEnableLogging(false);
        boolean boolean14 = atomikosProperties7.isSerialJtaTransactions();
        int int15 = atomikosProperties7.getMaxActives();
        atomikosProperties7.setTransactionManagerUniqueName("tmlog");
        boolean boolean18 = atomikosProperties7.isSerialJtaTransactions();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        java.lang.Object obj33 = properties19.put((java.lang.Object) properties22, (java.lang.Object) properties25);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.util.Set<java.lang.Object> objSet50 = properties34.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties34.entrySet();
        java.lang.Object obj52 = properties22.remove((java.lang.Object) objEntrySet51);
        java.lang.String str53 = properties22.toString();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.String str58 = properties54.toString();
        java.lang.String str59 = properties54.toString();
        java.util.Set<java.lang.Object> objSet60 = properties54.keySet();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean67 = properties61.isEmpty();
        java.lang.Object obj68 = properties22.putIfAbsent((java.lang.Object) properties54, (java.lang.Object) boolean67);
        boolean boolean70 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) properties22, (java.lang.Object) '4');
        java.lang.String str71 = atomikosProperties7.getLogBaseDir();
        long long72 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.setEnableLogging(true);
        boolean boolean75 = atomikosProperties7.isThreadedTwoPhaseCommit();
        java.lang.String str76 = atomikosProperties7.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
    }

    @Test
    public void test4274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4274");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        int int55 = properties51.size();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        boolean boolean57 = properties56.isEmpty();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties56.contains((java.lang.Object) properties71);
        java.util.Properties properties82 = new java.util.Properties(properties71);
        java.util.Properties properties83 = new java.util.Properties();
        java.lang.Object obj85 = properties83.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties83.elements();
        boolean boolean87 = properties83.isEmpty();
        java.util.Set<java.lang.Object> objSet88 = properties83.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties83.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties83.entrySet();
        java.util.Properties properties91 = new java.util.Properties(properties83);
        java.util.Set<java.lang.Object> objSet92 = properties83.keySet();
        java.lang.Object obj93 = properties0.putIfAbsent((java.lang.Object) properties71, (java.lang.Object) properties83);
        properties83.clear();
        java.util.Properties properties95 = new java.util.Properties(properties83);
        java.io.InputStream inputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties83.load(inputStream96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test4275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4275");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setMaxTimeout((long) (byte) -1);
        atomikosProperties0.setDefaultJtaTimeout(0L);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        int int15 = atomikosProperties0.getMaxActives();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("{true=true}");
        atomikosProperties0.setLogBaseName("{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test4276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4276");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        boolean boolean46 = properties36.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties36.elements();
        java.lang.Object obj50 = properties36.setProperty("{hi!=[], {}={}}", "{hi!=[], {}={}}");
        java.io.InputStream inputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.loadFromXML(inputStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test4277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4277");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        long long35 = atomikosProperties28.getCheckpointInterval();
        java.lang.String str36 = atomikosProperties28.getTransactionManagerUniqueName();
        atomikosProperties28.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties28.setSerialJtaTransactions(false);
        java.util.Properties properties41 = atomikosProperties28.asProperties();
        atomikosProperties28.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setMaxTimeout((long) '#');
        boolean boolean51 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setMaxActives((int) '#');
        atomikosProperties44.setSerialJtaTransactions(true);
        boolean boolean56 = atomikosProperties44.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass57 = atomikosProperties44.getClass();
        java.lang.Object obj58 = properties27.getOrDefault((java.lang.Object) atomikosProperties28, (java.lang.Object) atomikosProperties44);
        java.io.OutputStream outputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties27.store(outputStream59, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
    }

    @Test
    public void test4278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4278");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Properties properties15 = new java.util.Properties(properties0);
        boolean boolean16 = properties15.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test4279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4279");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.lang.String str34 = properties10.getProperty("{=hi!}");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.lang.Object obj49 = properties35.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet48);
        java.util.Set<java.lang.Object> objSet50 = properties35.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setEnableLogging(true);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties63.elements();
        java.lang.Object obj69 = properties35.replace((java.lang.Object) true, (java.lang.Object) properties63);
        boolean boolean70 = properties10.equals((java.lang.Object) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties10.elements();
        java.util.Properties properties72 = new java.util.Properties(properties10);
        java.lang.Object obj75 = properties10.setProperty("{{}={}}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties76 = new java.util.Properties(properties10);
        java.io.Reader reader77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(reader77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test4280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4280");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 50);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test4281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4281");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.Object obj18 = properties0.clone();
        properties0.clear();
        java.io.PrintStream printStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
    }

    @Test
    public void test4282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4282");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setMaxTimeout((long) '#');
        boolean boolean11 = atomikosProperties4.isEnableLogging();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setEnableLogging(true);
        atomikosProperties4.setLogBaseName("{}");
        boolean boolean18 = atomikosProperties4.isSerialJtaTransactions();
        atomikosProperties4.setMaxTimeout((long) ' ');
        boolean boolean21 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        boolean boolean22 = atomikosProperties4.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test4283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4283");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        boolean boolean23 = properties19.isEmpty();
        java.util.Set<java.lang.Object> objSet24 = properties19.keySet();
        boolean boolean25 = properties19.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties19.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.lang.Object obj33 = properties27.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = properties19.remove((java.lang.Object) properties27, (java.lang.Object) atomikosProperties34);
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.lang.Object obj39 = properties19.clone();
        java.lang.Object obj40 = properties19.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
    }

    @Test
    public void test4284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4284");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test4285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4285");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean51 = properties44.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection52 = properties44.values();
        java.lang.Object obj53 = properties44.clone();
        boolean boolean54 = properties41.equals((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        boolean boolean58 = atomikosProperties55.isSerialJtaTransactions();
        atomikosProperties55.setTransactionManagerUniqueName("hi!");
        java.lang.String str61 = atomikosProperties55.getLogBaseName();
        java.lang.String str62 = atomikosProperties55.getLogBaseName();
        atomikosProperties55.setService("{{}={}}");
        java.lang.Object obj65 = properties13.getOrDefault((java.lang.Object) properties44, (java.lang.Object) atomikosProperties55);
        java.lang.String str66 = atomikosProperties55.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
    }

    @Test
    public void test4286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4286");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties25.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties33.keys();
        java.lang.String str41 = properties33.getProperty("hi!");
        java.lang.String str43 = properties33.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = properties33.containsKey((java.lang.Object) atomikosProperties44);
        boolean boolean52 = properties25.containsKey((java.lang.Object) boolean51);
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        boolean boolean56 = properties53.isEmpty();
        java.lang.Object obj59 = properties53.setProperty("", "hi!");
        int int60 = properties53.size();
        java.lang.Object obj61 = properties0.replace((java.lang.Object) properties25, (java.lang.Object) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties0.elements();
        java.util.Properties properties63 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEnumeration64);
    }

    @Test
    public void test4287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4287");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        properties0.clear();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream8, "{hi!=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test4288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4288");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.save(outputStream22, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test4289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4289");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setLogBaseName("{=hi!}");
        java.lang.String str38 = atomikosProperties31.getTransactionManagerUniqueName();
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        boolean boolean40 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean41 = properties0.equals((java.lang.Object) boolean40);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test4290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4290");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str19 = atomikosProperties15.getTransactionManagerUniqueName();
        atomikosProperties15.setMaxActives(50);
        java.lang.String str22 = atomikosProperties15.getLogBaseDir();
        java.lang.String str23 = atomikosProperties15.getService();
        boolean boolean24 = atomikosProperties15.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties15.getLogBaseDir();
        boolean boolean26 = atomikosProperties15.isEnableLogging();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test4291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4291");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        properties1.clear();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test4292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4292");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        long long14 = atomikosProperties0.getMaxTimeout();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test4293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4293");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean7 = properties0.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.lang.Object obj9 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection10 = properties0.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection15 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        boolean boolean19 = atomikosProperties16.isSerialJtaTransactions();
        atomikosProperties16.setTransactionManagerUniqueName("hi!");
        boolean boolean22 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean25 = properties0.remove((java.lang.Object) objCollection15, (java.lang.Object) atomikosProperties16);
        java.util.Collection<java.lang.Object> objCollection26 = properties0.values();
        java.lang.String str28 = properties0.getProperty("{hi!=[], {}={}}");
        java.util.Enumeration<?> wildcardEnumeration29 = properties0.propertyNames();
        java.util.Properties properties30 = new java.util.Properties();
        boolean boolean32 = properties30.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setSerialJtaTransactions(false);
        java.lang.String str40 = atomikosProperties33.getService();
        boolean boolean41 = properties30.containsKey((java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        boolean boolean49 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setCheckpointInterval((long) 100);
        atomikosProperties42.setForceShutdownOnVmExit(false);
        boolean boolean54 = properties30.containsValue((java.lang.Object) atomikosProperties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setCheckpointInterval(0L);
        atomikosProperties55.setEnableLogging(true);
        boolean boolean69 = atomikosProperties55.isForceShutdownOnVmExit();
        java.lang.Object obj70 = properties0.put((java.lang.Object) boolean54, (java.lang.Object) atomikosProperties55);
        long long71 = atomikosProperties55.getCheckpointInterval();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
    }

    @Test
    public void test4294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4294");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setDefaultJtaTimeout(97L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test4295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4295");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        java.util.Enumeration<?> wildcardEnumeration20 = properties0.propertyNames();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
    }

    @Test
    public void test4296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4296");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties34.entrySet();
        java.lang.Object obj41 = properties0.put((java.lang.Object) atomikosProperties30, (java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties42.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setEnableLogging(false);
        atomikosProperties54.setSerialJtaTransactions(false);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties63.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties63.entrySet();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        boolean boolean74 = properties71.isEmpty();
        java.lang.Object obj77 = properties71.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        boolean boolean81 = properties63.remove((java.lang.Object) properties71, (java.lang.Object) atomikosProperties78);
        java.util.Properties properties82 = new java.util.Properties(properties71);
        int int83 = properties82.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        boolean boolean88 = atomikosProperties85.isSerialJtaTransactions();
        java.lang.String str89 = atomikosProperties85.getService();
        boolean boolean90 = atomikosProperties85.isEnableLogging();
        java.lang.String str91 = atomikosProperties85.getTransactionManagerUniqueName();
        boolean boolean92 = properties82.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties85);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        boolean boolean95 = properties0.replace((java.lang.Object) atomikosProperties42, (java.lang.Object) false, (java.lang.Object) atomikosProperties85);
        boolean boolean96 = properties0.isEmpty();
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream97, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test4297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4297");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        boolean boolean19 = properties0.isEmpty();
        java.io.PrintWriter printWriter20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test4298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4298");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.String str18 = atomikosProperties8.getLogBaseName();
        boolean boolean19 = atomikosProperties8.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test4299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4299");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        boolean boolean34 = properties0.remove((java.lang.Object) str32, (java.lang.Object) 1.0d);
        java.util.Properties properties35 = new java.util.Properties(properties0);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        boolean boolean45 = properties40.containsValue((java.lang.Object) properties41);
        java.util.Collection<java.lang.Object> objCollection46 = properties40.values();
        java.util.Enumeration<?> wildcardEnumeration47 = properties40.propertyNames();
        java.lang.Object obj49 = properties36.put((java.lang.Object) wildcardEnumeration47, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.lang.String str55 = atomikosProperties51.getService();
        boolean boolean56 = atomikosProperties51.isEnableLogging();
        java.lang.String str57 = atomikosProperties51.getTransactionManagerUniqueName();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.elements();
        int int62 = properties58.size();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Set<java.lang.Object> objSet68 = properties63.keySet();
        boolean boolean69 = properties58.containsKey((java.lang.Object) objSet68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties58.keys();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties71.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        boolean boolean80 = properties58.remove((java.lang.Object) properties71, (java.lang.Object) 1.0f);
        boolean boolean81 = properties71.isEmpty();
        java.lang.Object obj82 = properties36.put((java.lang.Object) atomikosProperties51, (java.lang.Object) properties71);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.lang.String str85 = properties0.getProperty("tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties0.keys();
        java.io.OutputStream outputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream87, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(objEnumeration86);
    }

    @Test
    public void test4300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4300");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        boolean boolean14 = properties0.contains((java.lang.Object) properties8);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        boolean boolean49 = properties44.containsValue((java.lang.Object) properties45);
        java.util.Collection<java.lang.Object> objCollection50 = properties44.values();
        java.lang.Object obj51 = properties27.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) objCollection50);
        boolean boolean53 = properties18.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection50, (java.lang.Object) 10.0d);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        int int58 = properties54.size();
        java.util.Properties properties59 = new java.util.Properties(properties54);
        java.util.Set<java.lang.String> strSet60 = properties54.stringPropertyNames();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties61.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setMaxTimeout((long) '#');
        boolean boolean75 = atomikosProperties68.isForceShutdownOnVmExit();
        java.lang.Object obj76 = properties61.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties68);
        boolean boolean77 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.Object obj78 = properties18.replace((java.lang.Object) properties54, (java.lang.Object) boolean77);
        java.lang.Object obj79 = properties15.remove((java.lang.Object) properties54);
        java.lang.String str81 = properties15.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties15.entrySet();
        java.lang.Object obj83 = properties8.remove((java.lang.Object) objEntrySet82);
        java.util.Set<java.lang.String> strSet84 = properties8.stringPropertyNames();
        java.lang.Class<?> wildcardClass85 = strSet84.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test4301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4301");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet15 = properties12.stringPropertyNames();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet20 = properties17.stringPropertyNames();
        boolean boolean21 = properties16.containsValue((java.lang.Object) properties17);
        java.util.Collection<java.lang.Object> objCollection22 = properties16.values();
        java.util.Enumeration<?> wildcardEnumeration23 = properties16.propertyNames();
        java.lang.Object obj25 = properties12.put((java.lang.Object) wildcardEnumeration23, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setMaxTimeout((long) '#');
        boolean boolean33 = atomikosProperties26.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj41 = properties12.getOrDefault((java.lang.Object) boolean33, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties42.keys();
        java.lang.String str50 = properties42.getProperty("hi!");
        java.lang.String str52 = properties42.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setEnableLogging(false);
        boolean boolean60 = properties42.containsKey((java.lang.Object) atomikosProperties53);
        boolean boolean61 = properties12.containsValue((java.lang.Object) properties42);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.lang.Object obj65 = properties11.setProperty("hi!", "{}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties11.entrySet();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEntrySet66);
    }

    @Test
    public void test4302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4302");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet22 = properties19.stringPropertyNames();
        java.lang.String str23 = properties19.toString();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean40 = properties33.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection41 = properties33.values();
        java.lang.Object obj42 = properties33.clone();
        java.util.Collection<java.lang.Object> objCollection43 = properties33.values();
        boolean boolean44 = properties19.containsKey((java.lang.Object) properties33);
        boolean boolean45 = properties0.containsValue((java.lang.Object) properties19);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test4303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4303");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = atomikosProperties15.isSerialJtaTransactions();
        java.util.Properties properties19 = atomikosProperties15.asProperties();
        java.lang.Object obj22 = properties19.setProperty("hi!", "");
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties30.entrySet();
        java.lang.Object obj38 = properties24.put((java.lang.Object) properties27, (java.lang.Object) properties30);
        java.lang.Object obj39 = properties0.putIfAbsent((java.lang.Object) properties23, (java.lang.Object) properties30);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.lang.Object obj54 = properties40.put((java.lang.Object) properties43, (java.lang.Object) properties46);
        java.lang.String str56 = properties43.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setSerialJtaTransactions(false);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        long long64 = atomikosProperties57.getMaxTimeout();
        boolean boolean65 = properties43.containsValue((java.lang.Object) atomikosProperties57);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties43.elements();
        java.util.Set<java.lang.String> strSet67 = properties43.stringPropertyNames();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties68.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties68.elements();
        java.lang.Object obj76 = properties0.putIfAbsent((java.lang.Object) properties43, (java.lang.Object) objEnumeration75);
        boolean boolean77 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties0.elements();
        java.io.PrintStream printStream79 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 300000L + "'", long64 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEnumeration78);
    }

    @Test
    public void test4304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4304");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        boolean boolean29 = properties24.containsValue((java.lang.Object) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties24.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.lang.Object obj38 = properties24.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet37);
        java.util.Set<java.lang.Object> objSet39 = properties24.keySet();
        java.util.Set<java.lang.Object> objSet40 = properties24.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties24.entrySet();
        java.util.Enumeration<?> wildcardEnumeration42 = properties24.propertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet48 = properties45.stringPropertyNames();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Enumeration<?> wildcardEnumeration56 = properties49.propertyNames();
        java.lang.Object obj58 = properties45.put((java.lang.Object) wildcardEnumeration56, (java.lang.Object) 10.0d);
        boolean boolean59 = properties43.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties43.keys();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties15.replace((java.lang.Object) properties24, (java.lang.Object) objSet61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties24.keys();
        java.lang.String str66 = properties24.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}", "{tmlog=}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{tmlog=}" + "'", str66, "{tmlog=}");
    }

    @Test
    public void test4305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4305");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties29.elements();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.lang.Object obj51 = properties37.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.util.Properties properties56 = atomikosProperties52.asProperties();
        java.lang.Object obj59 = properties56.setProperty("hi!", "");
        java.util.Properties properties60 = new java.util.Properties(properties56);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection65 = properties64.values();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties64.keys();
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties67.elements();
        boolean boolean71 = properties67.isEmpty();
        java.util.Set<java.lang.Object> objSet72 = properties67.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties67.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties67.entrySet();
        java.lang.Object obj75 = properties61.put((java.lang.Object) properties64, (java.lang.Object) properties67);
        java.lang.Object obj76 = properties37.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setSerialJtaTransactions(false);
        java.lang.String str84 = atomikosProperties77.getService();
        java.util.Properties properties85 = atomikosProperties77.asProperties();
        java.lang.Object obj86 = properties29.replace((java.lang.Object) properties37, (java.lang.Object) atomikosProperties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        atomikosProperties87.setMaxTimeout((long) '#');
        boolean boolean94 = atomikosProperties87.isEnableLogging();
        atomikosProperties87.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj97 = properties0.replace((java.lang.Object) atomikosProperties77, (java.lang.Object) atomikosProperties87);
        java.io.InputStream inputStream98 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test4306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4306");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setLogBaseName("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}" + "'", str11, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
    }

    @Test
    public void test4307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4307");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties26.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.Object obj43 = properties0.get((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.Object obj47 = properties44.setProperty("{{}={}}", "hi!");
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        java.lang.String str52 = properties48.toString();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.lang.Object obj60 = properties53.setProperty("tmlog", "");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj62 = properties53.clone();
        boolean boolean63 = properties44.contains((java.lang.Object) properties53);
        java.io.PrintWriter printWriter64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties44.list(printWriter64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{}" + "'", str52, "{}");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test4308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4308");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseDir("");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test4309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4309");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setMaxTimeout((long) '#');
        boolean boolean13 = atomikosProperties6.isForceShutdownOnVmExit();
        int int14 = atomikosProperties6.getMaxActives();
        java.lang.Object obj15 = properties0.remove((java.lang.Object) int14);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        boolean boolean22 = properties16.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties16.entrySet();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        boolean boolean27 = properties24.isEmpty();
        java.lang.Object obj30 = properties24.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        boolean boolean34 = properties16.remove((java.lang.Object) properties24, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        int int36 = properties35.size();
        int int37 = properties35.size();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj39 = properties35.get((java.lang.Object) properties38);
        boolean boolean40 = properties0.containsValue((java.lang.Object) properties38);
        java.util.Set<java.lang.Object> objSet41 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties0.keys();
        java.io.PrintStream printStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test4310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4310");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        atomikosProperties8.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj45 = properties16.getOrDefault((java.lang.Object) boolean37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties38);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties0.keys();
        java.lang.String str49 = properties0.getProperty("{true=true}");
        java.io.InputStream inputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test4311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4311");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval(10000L);
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setDefaultJtaTimeout((long) 35);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
    }

    @Test
    public void test4312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4312");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        java.lang.String str62 = properties36.getProperty("{{}={}}");
        java.lang.Object obj65 = properties36.setProperty("", "");
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties36.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
    }

    @Test
    public void test4313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4313");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test4314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4314");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet9 = properties7.keySet();
        java.lang.String str10 = properties7.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        java.util.Set<java.lang.String> strSet19 = properties18.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.lang.String str28 = properties20.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration29 = properties20.propertyNames();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.util.Set<java.lang.String> strSet37 = properties30.stringPropertyNames();
        boolean boolean38 = properties30.isEmpty();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        boolean boolean40 = properties18.containsKey((java.lang.Object) properties20);
        java.util.Set<java.lang.Object> objSet41 = properties18.keySet();
        boolean boolean42 = properties7.containsKey((java.lang.Object) objSet41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties7.keys();
        properties7.clear();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objSet9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
    }

    @Test
    public void test4315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4315");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties26.isEmpty();
        boolean boolean33 = properties8.contains((java.lang.Object) boolean32);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.lang.Object obj40 = properties34.clone();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties41.keys();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties48.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        java.lang.Object obj63 = properties48.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setForceShutdownOnVmExit(false);
        long long66 = atomikosProperties55.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties68.isSerialJtaTransactions();
        java.lang.String str72 = atomikosProperties68.getService();
        boolean boolean73 = atomikosProperties68.isEnableLogging();
        java.util.Properties properties74 = atomikosProperties68.asProperties();
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setMaxActives((int) (short) -1);
        atomikosProperties68.setMaxTimeout((long) ' ');
        boolean boolean81 = properties41.replace((java.lang.Object) long66, (java.lang.Object) (-1.0d), (java.lang.Object) atomikosProperties68);
        boolean boolean82 = properties8.remove((java.lang.Object) properties34, (java.lang.Object) long66);
        java.lang.Object obj83 = properties8.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties8.entrySet();
        java.io.Writer writer85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer85, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{hi!=[]}");
        org.junit.Assert.assertNotNull(objEntrySet84);
    }

    @Test
    public void test4316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4316");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str20 = properties0.getProperty("tmlog");
        java.util.Set<java.lang.Object> objSet21 = properties0.keySet();
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream22, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objSet21);
    }

    @Test
    public void test4317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4317");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        boolean boolean32 = properties28.containsValue((java.lang.Object) "hi!");
        boolean boolean33 = properties23.contains((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass34 = properties23.getClass();
        boolean boolean35 = properties11.containsKey((java.lang.Object) wildcardClass34);
        java.lang.Object obj37 = properties11.get((java.lang.Object) "{hi!=[]}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test4318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4318");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        java.lang.String str35 = atomikosProperties28.getLogBaseDir();
        java.lang.Class<?> wildcardClass36 = atomikosProperties28.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        java.lang.Object obj44 = properties41.setProperty("hi!", "");
        java.util.Properties properties45 = new java.util.Properties(properties41);
        boolean boolean46 = properties0.replace((java.lang.Object) "{}", (java.lang.Object) atomikosProperties28, (java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean50 = atomikosProperties47.isThreadedTwoPhaseCommit();
        boolean boolean51 = atomikosProperties47.isForceShutdownOnVmExit();
        boolean boolean52 = properties41.contains((java.lang.Object) atomikosProperties47);
        atomikosProperties47.setTransactionManagerUniqueName("{tmlog=}");
        boolean boolean55 = atomikosProperties47.isEnableLogging();
        long long56 = atomikosProperties47.getMaxTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
    }

    @Test
    public void test4319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4319");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        int int2 = properties0.size();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isEnableLogging();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.lang.Object obj36 = properties12.replace((java.lang.Object) atomikosProperties19, (java.lang.Object) objCollection35);
        boolean boolean38 = properties3.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection35, (java.lang.Object) 10.0d);
        boolean boolean39 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        boolean boolean43 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties40.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.lang.Object obj46 = properties0.remove((java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties0.elements();
        java.lang.String str49 = properties0.getProperty("tmlog");
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties50.elements();
        boolean boolean54 = properties50.isEmpty();
        java.util.Set<java.lang.Object> objSet55 = properties50.keySet();
        boolean boolean56 = properties50.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties50.entrySet();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        boolean boolean61 = properties58.isEmpty();
        java.lang.Object obj64 = properties58.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean68 = properties50.remove((java.lang.Object) properties58, (java.lang.Object) atomikosProperties65);
        java.util.Properties properties69 = new java.util.Properties(properties58);
        int int70 = properties69.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        boolean boolean75 = atomikosProperties72.isSerialJtaTransactions();
        java.lang.String str76 = atomikosProperties72.getService();
        boolean boolean77 = atomikosProperties72.isEnableLogging();
        java.lang.String str78 = atomikosProperties72.getTransactionManagerUniqueName();
        boolean boolean79 = properties69.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties72);
        java.util.Properties properties80 = new java.util.Properties();
        java.lang.Object obj82 = properties80.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration83 = properties80.elements();
        boolean boolean84 = properties80.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties80.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet86 = properties80.entrySet();
        java.lang.Object obj87 = properties69.remove((java.lang.Object) objEntrySet86);
        java.lang.Object obj88 = properties69.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties69.keys();
        java.lang.String str91 = properties69.getProperty("{=hi!}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet92 = properties69.entrySet();
        boolean boolean93 = properties0.containsValue((java.lang.Object) properties69);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream94, "hi!", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(objEnumeration83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(objEntrySet86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "{}");
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNotNull(objEntrySet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test4320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4320");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.String str6 = properties0.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.lang.String str9 = properties0.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties10.isSerialJtaTransactions();
        java.lang.String str14 = atomikosProperties10.getService();
        boolean boolean15 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties16 = atomikosProperties10.asProperties();
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setMaxActives((int) (short) -1);
        atomikosProperties10.setMaxTimeout((long) ' ');
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setService("{{}={}}");
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        boolean boolean33 = properties27.isEmpty();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        java.lang.Object obj37 = properties27.remove((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties38.isSerialJtaTransactions();
        atomikosProperties38.setTransactionManagerUniqueName("hi!");
        java.lang.String str44 = atomikosProperties38.getLogBaseName();
        java.lang.String str45 = atomikosProperties38.getLogBaseName();
        boolean boolean46 = atomikosProperties38.isForceShutdownOnVmExit();
        long long47 = atomikosProperties38.getMaxTimeout();
        java.lang.String str48 = atomikosProperties38.getTransactionManagerUniqueName();
        java.lang.String str49 = atomikosProperties38.getLogBaseName();
        boolean boolean50 = atomikosProperties38.isThreadedTwoPhaseCommit();
        atomikosProperties38.setThreadedTwoPhaseCommit(false);
        boolean boolean53 = properties0.replace((java.lang.Object) atomikosProperties10, (java.lang.Object) properties27, (java.lang.Object) atomikosProperties38);
        atomikosProperties38.setService("{=hi!}");
        int int56 = atomikosProperties38.getMaxActives();
        atomikosProperties38.setThreadedTwoPhaseCommit(false);
        atomikosProperties38.setCheckpointInterval((long) 100);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
    }

    @Test
    public void test4321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4321");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long14 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
    }

    @Test
    public void test4322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4322");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = new java.util.Properties();
        boolean boolean23 = properties21.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setSerialJtaTransactions(false);
        java.lang.String str31 = atomikosProperties24.getService();
        boolean boolean32 = properties21.containsKey((java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setCheckpointInterval((long) 100);
        atomikosProperties33.setForceShutdownOnVmExit(false);
        boolean boolean45 = properties21.containsValue((java.lang.Object) atomikosProperties33);
        atomikosProperties33.setService("{=hi!}");
        atomikosProperties33.setDefaultJtaTimeout(0L);
        java.lang.String str50 = atomikosProperties33.getLogBaseName();
        long long51 = atomikosProperties33.getMaxTimeout();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.lang.String str56 = properties52.getProperty("");
        java.lang.Object obj57 = properties19.replace((java.lang.Object) atomikosProperties33, (java.lang.Object) "");
        java.io.PrintStream printStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 35L + "'", long51 == 35L);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test4323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4323");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setService("tmlog");
        int int15 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
    }

    @Test
    public void test4324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4324");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet7 = properties6.stringPropertyNames();
        java.lang.Object obj8 = properties6.clone();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.load(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
// flaky:         org.junit.Assert.assertEquals(obj8.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test4325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4325");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.io.InputStream inputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test4326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4326");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties16.containsKey((java.lang.Object) objSet26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties16.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean38 = properties16.remove((java.lang.Object) properties29, (java.lang.Object) 1.0f);
        java.lang.Object obj39 = properties29.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties29.values();
        java.util.Properties properties41 = new java.util.Properties(properties29);
        boolean boolean42 = properties0.containsKey((java.lang.Object) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties0.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration44);
    }

    @Test
    public void test4327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4327");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties26.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.Object obj43 = properties0.get((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.Object obj47 = properties44.setProperty("{{}={}}", "hi!");
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        java.lang.String str52 = properties48.toString();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.lang.Object obj60 = properties53.setProperty("tmlog", "");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj62 = properties53.clone();
        boolean boolean63 = properties44.contains((java.lang.Object) properties53);
        java.lang.String str66 = properties53.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[], {}={}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{}" + "'", str52, "{}");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{tmlog=}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{tmlog=}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{tmlog=}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{hi!=[], {}={}}" + "'", str66, "{hi!=[], {}={}}");
    }

    @Test
    public void test4328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4328");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setMaxTimeout((long) '#');
        boolean boolean18 = atomikosProperties11.isEnableLogging();
        atomikosProperties11.setCheckpointInterval((long) 100);
        java.lang.String str21 = atomikosProperties11.getTransactionManagerUniqueName();
        atomikosProperties11.setEnableLogging(false);
        atomikosProperties11.setForceShutdownOnVmExit(true);
        atomikosProperties11.setSerialJtaTransactions(true);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = atomikosProperties30.isSerialJtaTransactions();
        atomikosProperties30.setCheckpointInterval((long) 10);
        atomikosProperties30.setSerialJtaTransactions(true);
        boolean boolean38 = atomikosProperties30.isSerialJtaTransactions();
        java.util.Properties properties39 = atomikosProperties30.asProperties();
        atomikosProperties30.setLogBaseDir("tmlog");
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        boolean boolean52 = properties48.isEmpty();
        java.util.Set<java.lang.Object> objSet53 = properties48.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties48.entrySet();
        java.lang.Object obj56 = properties42.put((java.lang.Object) properties45, (java.lang.Object) properties48);
        boolean boolean57 = properties0.replace((java.lang.Object) true, (java.lang.Object) atomikosProperties30, (java.lang.Object) properties45);
        java.util.Collection<java.lang.Object> objCollection58 = properties0.values();
        java.io.InputStream inputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
    }

    @Test
    public void test4329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4329");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("{=hi!}");
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        int int17 = atomikosProperties0.getMaxActives();
        long long18 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{=hi!}" + "'", str14, "{=hi!}");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test4330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4330");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties13.containsValue((java.lang.Object) properties53);
        boolean boolean56 = properties13.isEmpty();
        java.util.Properties properties57 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setEnableLogging(false);
        boolean boolean65 = atomikosProperties58.isSerialJtaTransactions();
        int int66 = atomikosProperties58.getMaxActives();
        boolean boolean67 = atomikosProperties58.isEnableLogging();
        long long68 = atomikosProperties58.getCheckpointInterval();
        java.util.Properties properties69 = atomikosProperties58.asProperties();
        java.util.Properties properties70 = atomikosProperties58.asProperties();
        boolean boolean71 = properties57.containsValue((java.lang.Object) atomikosProperties58);
        java.util.Set<java.lang.Object> objSet72 = properties57.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objSet72);
    }

    @Test
    public void test4331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4331");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        boolean boolean29 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) long28);
        properties0.clear();
        java.util.Properties properties31 = new java.util.Properties();
        boolean boolean33 = properties31.contains((java.lang.Object) 100.0d);
        java.lang.Object obj34 = null;
        boolean boolean35 = properties31.equals(obj34);
        java.util.Properties properties36 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties37.getService();
        boolean boolean42 = atomikosProperties37.isEnableLogging();
        java.util.Properties properties43 = atomikosProperties37.asProperties();
        java.util.Set<java.lang.String> strSet44 = properties43.stringPropertyNames();
        boolean boolean45 = properties43.isEmpty();
        boolean boolean46 = properties43.isEmpty();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration50 = properties47.propertyNames();
        boolean boolean51 = properties43.containsValue((java.lang.Object) wildcardEnumeration50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties52.isSerialJtaTransactions();
        java.lang.String str56 = atomikosProperties52.getService();
        atomikosProperties52.setEnableLogging(false);
        java.util.Properties properties59 = atomikosProperties52.asProperties();
        atomikosProperties52.setCheckpointInterval((long) 1);
        java.util.Properties properties62 = atomikosProperties52.asProperties();
        java.lang.Object obj63 = properties36.putIfAbsent((java.lang.Object) properties43, (java.lang.Object) properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties43.keys();
        java.lang.Object obj67 = properties43.setProperty("{{}=tmlog}", "");
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet72 = properties69.stringPropertyNames();
        boolean boolean73 = properties68.containsValue((java.lang.Object) properties69);
        java.util.Collection<java.lang.Object> objCollection74 = properties68.values();
        java.util.Enumeration<?> wildcardEnumeration75 = properties68.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties68.keys();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = properties0.remove(obj67, (java.lang.Object) objEnumeration76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(wildcardEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration76);
    }

    @Test
    public void test4332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4332");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet5 = properties4.keySet();
        java.lang.Object obj6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = properties4.contains(obj6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(objSet5);
    }

    @Test
    public void test4333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4333");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setMaxTimeout((long) (byte) -1);
        atomikosProperties0.setDefaultJtaTimeout(0L);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test4334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4334");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties25.elements();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Enumeration<?> wildcardEnumeration41 = properties34.propertyNames();
        java.lang.Object obj43 = properties30.put((java.lang.Object) wildcardEnumeration41, (java.lang.Object) 10.0d);
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        boolean boolean50 = properties44.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties44.entrySet();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        boolean boolean55 = properties52.isEmpty();
        java.lang.Object obj58 = properties52.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean62 = properties44.remove((java.lang.Object) properties52, (java.lang.Object) atomikosProperties59);
        java.util.Properties properties63 = new java.util.Properties(properties52);
        int int64 = properties63.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = atomikosProperties66.isSerialJtaTransactions();
        java.lang.String str70 = atomikosProperties66.getService();
        boolean boolean71 = atomikosProperties66.isEnableLogging();
        java.lang.String str72 = atomikosProperties66.getTransactionManagerUniqueName();
        boolean boolean73 = properties63.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setSerialJtaTransactions(false);
        atomikosProperties74.setThreadedTwoPhaseCommit(true);
        atomikosProperties74.setEnableLogging(false);
        boolean boolean81 = atomikosProperties74.isSerialJtaTransactions();
        int int82 = atomikosProperties74.getMaxActives();
        boolean boolean83 = atomikosProperties74.isSerialJtaTransactions();
        boolean boolean84 = properties30.remove((java.lang.Object) properties63, (java.lang.Object) boolean83);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setSerialJtaTransactions(false);
        atomikosProperties85.setThreadedTwoPhaseCommit(true);
        atomikosProperties85.setMaxTimeout((long) '#');
        boolean boolean92 = atomikosProperties85.isEnableLogging();
        atomikosProperties85.setCheckpointInterval((long) 100);
        java.lang.String str95 = atomikosProperties85.getTransactionManagerUniqueName();
        boolean boolean96 = properties63.contains((java.lang.Object) atomikosProperties85);
        java.util.Properties properties97 = atomikosProperties85.asProperties();
        java.lang.Object obj98 = properties13.replace((java.lang.Object) properties25, (java.lang.Object) properties97);
        java.util.Enumeration<java.lang.Object> objEnumeration99 = properties97.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 50 + "'", int82 == 50);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(properties97);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertNotNull(objEnumeration99);
    }

    @Test
    public void test4335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4335");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        boolean boolean6 = properties1.isEmpty();
        properties1.clear();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test4336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4336");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout((long) '#');
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj41 = properties26.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.Object obj43 = properties0.get((java.lang.Object) boolean42);
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.io.PrintStream printStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties44.list(printStream46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test4337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4337");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        atomikosProperties8.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj45 = properties16.getOrDefault((java.lang.Object) boolean37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties38);
        atomikosProperties38.setLogBaseDir("{}");
        atomikosProperties38.setMaxTimeout(32L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test4338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4338");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setLogBaseName("hi!");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        int int19 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
    }

    @Test
    public void test4339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4339");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        int int20 = properties16.size();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        boolean boolean25 = properties21.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties21.keySet();
        boolean boolean27 = properties16.containsKey((java.lang.Object) objSet26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties16.keys();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties29.entrySet();
        boolean boolean38 = properties16.remove((java.lang.Object) properties29, (java.lang.Object) 1.0f);
        java.lang.Object obj39 = properties29.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties29.values();
        java.util.Properties properties41 = new java.util.Properties(properties29);
        boolean boolean42 = properties0.containsKey((java.lang.Object) properties29);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Enumeration<?> wildcardEnumeration49 = properties44.propertyNames();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.util.Set<java.lang.String> strSet51 = properties50.stringPropertyNames();
        java.util.Properties properties52 = new java.util.Properties();
        boolean boolean54 = properties52.contains((java.lang.Object) 100.0d);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties55.elements();
        boolean boolean59 = properties55.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties55.keySet();
        boolean boolean61 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties55.entrySet();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        boolean boolean66 = properties63.isEmpty();
        java.lang.Object obj69 = properties63.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        boolean boolean73 = properties55.remove((java.lang.Object) properties63, (java.lang.Object) atomikosProperties70);
        boolean boolean74 = properties52.equals((java.lang.Object) properties55);
        java.util.Enumeration<?> wildcardEnumeration75 = properties55.propertyNames();
        java.lang.String str77 = properties55.getProperty("{=hi!}");
        java.lang.Object obj78 = properties55.clone();
        java.lang.Object obj79 = properties0.replace((java.lang.Object) properties50, (java.lang.Object) properties55);
        java.io.OutputStream outputStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties55.storeToXML(outputStream80, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{}");
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test4340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4340");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.Object obj59 = properties50.put((java.lang.Object) strSet57, (java.lang.Object) 0.0d);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        java.lang.Object obj77 = properties50.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) (short) 10);
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        boolean boolean81 = properties78.isEmpty();
        java.util.Set<java.lang.String> strSet82 = properties78.stringPropertyNames();
        java.lang.String str84 = properties78.getProperty("hi!");
        java.lang.Object obj85 = properties0.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties78);
        java.lang.String str87 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test4341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4341");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.keys();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        int int9 = properties5.size();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties5.containsKey((java.lang.Object) objSet15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties5.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties18.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties18.entrySet();
        boolean boolean27 = properties5.remove((java.lang.Object) properties18, (java.lang.Object) 1.0f);
        boolean boolean28 = properties18.isEmpty();
        boolean boolean30 = properties0.remove((java.lang.Object) properties18, (java.lang.Object) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties18.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.util.Properties properties38 = atomikosProperties32.asProperties();
        java.util.Set<java.lang.String> strSet39 = properties38.stringPropertyNames();
        boolean boolean40 = properties38.isEmpty();
        java.lang.Object obj41 = properties18.remove((java.lang.Object) boolean40);
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.store(writer42, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test4342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4342");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long7 = atomikosProperties0.getMaxTimeout();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test4343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4343");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test4344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4344");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        boolean boolean8 = properties0.isEmpty();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet17 = properties14.stringPropertyNames();
        boolean boolean18 = properties13.containsValue((java.lang.Object) properties14);
        java.util.Collection<java.lang.Object> objCollection19 = properties13.values();
        java.util.Enumeration<?> wildcardEnumeration20 = properties13.propertyNames();
        java.lang.Object obj22 = properties9.put((java.lang.Object) wildcardEnumeration20, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = atomikosProperties24.isSerialJtaTransactions();
        java.lang.String str28 = atomikosProperties24.getService();
        boolean boolean29 = atomikosProperties24.isEnableLogging();
        java.lang.String str30 = atomikosProperties24.getTransactionManagerUniqueName();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        int int35 = properties31.size();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        boolean boolean42 = properties31.containsKey((java.lang.Object) objSet41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties31.keys();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        boolean boolean48 = properties44.isEmpty();
        java.util.Set<java.lang.Object> objSet49 = properties44.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties44.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties44.entrySet();
        boolean boolean53 = properties31.remove((java.lang.Object) properties44, (java.lang.Object) 1.0f);
        boolean boolean54 = properties44.isEmpty();
        java.lang.Object obj55 = properties9.put((java.lang.Object) atomikosProperties24, (java.lang.Object) properties44);
        boolean boolean56 = properties0.equals((java.lang.Object) atomikosProperties24);
        long long57 = atomikosProperties24.getCheckpointInterval();
        atomikosProperties24.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
    }

    @Test
    public void test4345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4345");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(false);
        boolean boolean18 = atomikosProperties7.isThreadedTwoPhaseCommit();
        long long19 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setThreadedTwoPhaseCommit(false);
        atomikosProperties7.setService("tmlog");
        boolean boolean24 = atomikosProperties7.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test4346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4346");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties4.setProperty("hi!", "");
        java.util.Properties properties8 = new java.util.Properties(properties4);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.keys();
        java.lang.String str17 = properties9.getProperty("hi!");
        java.lang.String str19 = properties9.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setEnableLogging(false);
        boolean boolean27 = properties9.containsKey((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        boolean boolean37 = properties30.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection38 = properties30.values();
        java.lang.Object obj39 = properties30.clone();
        java.util.Collection<java.lang.Object> objCollection40 = properties30.values();
        boolean boolean41 = properties4.remove((java.lang.Object) atomikosProperties20, (java.lang.Object) objCollection40);
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.store(writer42, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test4347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4347");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.Object obj18 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        long long26 = atomikosProperties19.getMaxTimeout();
        java.lang.String str27 = atomikosProperties19.getLogBaseName();
        long long28 = atomikosProperties19.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties29.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties29.keys();
        java.lang.String str37 = properties29.getProperty("hi!");
        java.lang.String str39 = properties29.getProperty("");
        properties29.clear();
        java.lang.Object obj41 = properties0.put((java.lang.Object) long28, (java.lang.Object) properties29);
        java.lang.Object obj44 = properties29.setProperty("", "{{}={}}");
        int int45 = properties29.size();
        java.io.InputStream inputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.loadFromXML(inputStream46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test4348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4348");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.lang.Object obj20 = properties0.clone();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setMaxTimeout((long) '#');
        boolean boolean42 = atomikosProperties35.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj50 = properties21.getOrDefault((java.lang.Object) boolean42, (java.lang.Object) atomikosProperties43);
        properties21.clear();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        boolean boolean56 = properties52.isEmpty();
        java.util.Set<java.lang.Object> objSet57 = properties52.keySet();
        boolean boolean58 = properties52.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties52.entrySet();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        boolean boolean63 = properties60.isEmpty();
        java.lang.Object obj66 = properties60.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setSerialJtaTransactions(false);
        boolean boolean70 = properties52.remove((java.lang.Object) properties60, (java.lang.Object) atomikosProperties67);
        java.util.Properties properties71 = new java.util.Properties(properties60);
        java.lang.Object obj72 = properties21.remove((java.lang.Object) properties60);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.elements();
        boolean boolean77 = properties73.isEmpty();
        java.util.Set<java.lang.Object> objSet78 = properties73.keySet();
        boolean boolean79 = properties73.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties73.entrySet();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        boolean boolean84 = properties81.isEmpty();
        java.lang.Object obj87 = properties81.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties88 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties88.setSerialJtaTransactions(false);
        boolean boolean91 = properties73.remove((java.lang.Object) properties81, (java.lang.Object) atomikosProperties88);
        java.lang.String str92 = atomikosProperties88.getTransactionManagerUniqueName();
        boolean boolean93 = properties0.remove((java.lang.Object) properties60, (java.lang.Object) atomikosProperties88);
        int int94 = properties60.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet95 = properties60.entrySet();
        java.io.OutputStream outputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties60.storeToXML(outputStream96, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(objEntrySet95);
    }

    @Test
    public void test4349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4349");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet10 = properties9.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objSet10);
    }

    @Test
    public void test4350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4350");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.util.Set<java.lang.String> strSet66 = properties0.stringPropertyNames();
        java.io.InputStream inputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(strSet66);
    }

    @Test
    public void test4351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4351");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setMaxTimeout((long) 35);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setLogBaseDir("{{}={}}");
        int int17 = atomikosProperties0.getMaxActives();
        boolean boolean18 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test4352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4352");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval((long) (short) -1);
        atomikosProperties0.setLogBaseName("{tmlog=}");
        int int15 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
    }

    @Test
    public void test4353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4353");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setMaxActives(9);
        boolean boolean19 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str20 = atomikosProperties0.getService();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test4354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4354");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        long long9 = atomikosProperties0.getMaxTimeout();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test4355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4355");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.lang.Object obj20 = properties8.clone();
        java.lang.Object obj21 = properties8.clone();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet25 = properties22.stringPropertyNames();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Enumeration<?> wildcardEnumeration33 = properties26.propertyNames();
        java.lang.Object obj35 = properties22.put((java.lang.Object) wildcardEnumeration33, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties22.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties22.elements();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        boolean boolean41 = properties38.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties49 = atomikosProperties42.asProperties();
        int int50 = atomikosProperties42.getMaxActives();
        atomikosProperties42.setService("hi!");
        java.lang.Object obj53 = properties38.get((java.lang.Object) atomikosProperties42);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        boolean boolean60 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties54.entrySet();
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.remove((java.lang.Object) 0.0d);
        boolean boolean65 = properties62.isEmpty();
        java.lang.Object obj68 = properties62.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setSerialJtaTransactions(false);
        boolean boolean72 = properties54.remove((java.lang.Object) properties62, (java.lang.Object) atomikosProperties69);
        java.util.Properties properties73 = new java.util.Properties(properties62);
        int int74 = properties73.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean79 = atomikosProperties76.isSerialJtaTransactions();
        java.lang.String str80 = atomikosProperties76.getService();
        boolean boolean81 = atomikosProperties76.isEnableLogging();
        java.lang.String str82 = atomikosProperties76.getTransactionManagerUniqueName();
        boolean boolean83 = properties73.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties76);
        java.util.Properties properties84 = new java.util.Properties();
        java.lang.Object obj86 = properties84.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties84.elements();
        boolean boolean88 = properties84.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties84.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet90 = properties84.entrySet();
        java.lang.Object obj91 = properties73.remove((java.lang.Object) objEntrySet90);
        boolean boolean92 = properties73.isEmpty();
        java.lang.String str93 = properties73.toString();
        properties73.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties73.elements();
        java.lang.Object obj96 = properties22.replace((java.lang.Object) properties38, (java.lang.Object) properties73);
        java.lang.Object obj97 = properties8.get((java.lang.Object) properties38);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{=hi!}");
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{=hi!}");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNotNull(objEntrySet90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "{}" + "'", str93, "{}");
        org.junit.Assert.assertNotNull(objEnumeration95);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test4356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4356");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setSerialJtaTransactions(false);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setMaxTimeout((long) '#');
        boolean boolean12 = atomikosProperties5.isEnableLogging();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        boolean boolean29 = properties0.remove((java.lang.Object) atomikosProperties5, (java.lang.Object) long28);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        boolean boolean32 = atomikosProperties5.isEnableLogging();
        long long33 = atomikosProperties5.getCheckpointInterval();
        atomikosProperties5.setLogBaseName("{=hi!}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
    }

    @Test
    public void test4357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4357");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str14 = properties12.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties22 = atomikosProperties15.asProperties();
        int int23 = atomikosProperties15.getMaxActives();
        atomikosProperties15.setService("hi!");
        long long26 = atomikosProperties15.getMaxTimeout();
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        atomikosProperties15.setForceShutdownOnVmExit(false);
        java.lang.String str31 = atomikosProperties15.getTransactionManagerUniqueName();
        boolean boolean32 = atomikosProperties15.isSerialJtaTransactions();
        boolean boolean33 = properties12.containsKey((java.lang.Object) atomikosProperties15);
        java.lang.Object obj34 = properties12.clone();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj34);
// flaky:         org.junit.Assert.assertEquals(obj34.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test4358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4358");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.keys();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties34.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setMaxTimeout((long) '#');
        boolean boolean48 = atomikosProperties41.isForceShutdownOnVmExit();
        java.lang.Object obj49 = properties34.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties41);
        atomikosProperties41.setForceShutdownOnVmExit(true);
        java.util.Properties properties52 = atomikosProperties41.asProperties();
        java.util.Set<java.lang.Object> objSet53 = properties52.keySet();
        java.util.Set<java.lang.Object> objSet54 = properties52.keySet();
        java.lang.Object obj55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj56 = properties32.put((java.lang.Object) properties52, obj55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNotNull(objSet54);
    }

    @Test
    public void test4359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4359");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        int int11 = atomikosProperties0.getMaxActives();
        int int12 = atomikosProperties0.getMaxActives();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setEnableLogging(false);
        int int18 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
    }

    @Test
    public void test4360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4360");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties20);
    }

    @Test
    public void test4361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4361");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        boolean boolean28 = properties24.isEmpty();
        java.lang.Object obj31 = properties24.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str42 = atomikosProperties32.getTransactionManagerUniqueName();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        boolean boolean48 = properties43.containsValue((java.lang.Object) properties44);
        java.util.Collection<java.lang.Object> objCollection49 = properties43.values();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        boolean boolean55 = properties51.isEmpty();
        java.util.Set<java.lang.Object> objSet56 = properties51.keySet();
        java.lang.Object obj57 = properties43.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet56);
        java.util.Set<java.lang.Object> objSet58 = properties43.keySet();
        java.util.Set<java.lang.Object> objSet59 = properties43.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet60 = properties43.entrySet();
        java.util.Set<java.lang.Object> objSet61 = properties43.keySet();
        java.lang.Object obj62 = properties24.replace((java.lang.Object) atomikosProperties32, (java.lang.Object) properties43);
        boolean boolean63 = properties13.containsKey((java.lang.Object) properties43);
        java.lang.String str64 = properties43.toString();
        java.util.Properties properties65 = new java.util.Properties(properties43);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEntrySet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{hi!=[]}" + "'", str64, "{hi!=[]}");
    }

    @Test
    public void test4362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4362");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        java.lang.String str13 = atomikosProperties0.getService();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test4363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4363");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties0.keys();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties13.elements();
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties13.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties13.entrySet();
        boolean boolean22 = properties0.remove((java.lang.Object) properties13, (java.lang.Object) 1.0f);
        java.lang.Object obj23 = properties13.clone();
        java.util.Collection<java.lang.Object> objCollection24 = properties13.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties13.values();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.util.Properties properties34 = new java.util.Properties(properties26);
        java.lang.Object obj35 = properties13.get((java.lang.Object) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        atomikosProperties36.setTransactionManagerUniqueName("hi!");
        java.lang.String str42 = atomikosProperties36.getLogBaseName();
        java.lang.String str43 = atomikosProperties36.getLogBaseName();
        boolean boolean44 = atomikosProperties36.isSerialJtaTransactions();
        long long45 = atomikosProperties36.getMaxTimeout();
        atomikosProperties36.setCheckpointInterval(0L);
        long long48 = atomikosProperties36.getDefaultJtaTimeout();
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.lang.Object obj51 = properties26.get((java.lang.Object) true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test4364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4364");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        int int24 = atomikosProperties6.getMaxActives();
        boolean boolean25 = atomikosProperties6.isForceShutdownOnVmExit();
        atomikosProperties6.setService("{=hi!}");
        atomikosProperties6.setService("tmlog");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test4365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4365");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.lang.Object obj9 = properties0.setProperty("", "{}");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = properties10.remove((java.lang.Object) properties18, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        int int30 = properties29.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.lang.String str38 = atomikosProperties32.getTransactionManagerUniqueName();
        boolean boolean39 = properties29.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties40.entrySet();
        java.lang.Object obj47 = properties29.remove((java.lang.Object) objEntrySet46);
        boolean boolean48 = properties29.isEmpty();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.lang.String str57 = properties49.getProperty("hi!");
        java.lang.String str59 = properties49.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        boolean boolean67 = properties49.containsKey((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setTransactionManagerUniqueName("tmlog");
        boolean boolean70 = atomikosProperties60.isForceShutdownOnVmExit();
        java.lang.Object obj71 = properties0.put((java.lang.Object) boolean48, (java.lang.Object) atomikosProperties60);
        java.lang.String str72 = atomikosProperties60.getService();
        atomikosProperties60.setLogBaseName("tmlog");
        long long75 = atomikosProperties60.getCheckpointInterval();
        atomikosProperties60.setTransactionManagerUniqueName("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 500L + "'", long75 == 500L);
    }

    @Test
    public void test4366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4366");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        int int21 = properties19.size();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.util.Collection<java.lang.Object> objCollection25 = properties22.values();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.lang.Object obj33 = properties26.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean37 = atomikosProperties34.isSerialJtaTransactions();
        atomikosProperties34.setTransactionManagerUniqueName("hi!");
        atomikosProperties34.setForceShutdownOnVmExit(false);
        atomikosProperties34.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str44 = atomikosProperties34.getTransactionManagerUniqueName();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        boolean boolean57 = properties53.isEmpty();
        java.util.Set<java.lang.Object> objSet58 = properties53.keySet();
        java.lang.Object obj59 = properties45.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet58);
        java.util.Set<java.lang.Object> objSet60 = properties45.keySet();
        java.util.Set<java.lang.Object> objSet61 = properties45.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties45.entrySet();
        java.util.Set<java.lang.Object> objSet63 = properties45.keySet();
        java.lang.Object obj64 = properties26.replace((java.lang.Object) atomikosProperties34, (java.lang.Object) properties45);
        java.util.Properties properties65 = atomikosProperties34.asProperties();
        java.lang.Object obj66 = properties19.getOrDefault((java.lang.Object) objCollection25, (java.lang.Object) atomikosProperties34);
        atomikosProperties34.setTransactionManagerUniqueName("{}");
        atomikosProperties34.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(obj66);
    }

    @Test
    public void test4367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4367");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties();
        boolean boolean9 = properties7.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getService();
        boolean boolean18 = properties7.containsKey((java.lang.Object) atomikosProperties10);
        boolean boolean19 = properties0.containsKey((java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        boolean boolean23 = atomikosProperties20.isSerialJtaTransactions();
        atomikosProperties20.setTransactionManagerUniqueName("hi!");
        java.lang.String str26 = atomikosProperties20.getLogBaseName();
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        long long28 = atomikosProperties20.getDefaultJtaTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isForceShutdownOnVmExit();
        java.lang.Object obj44 = properties29.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties47);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties53 = atomikosProperties20.asProperties();
        atomikosProperties20.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties53);
    }

    @Test
    public void test4368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4368");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setTransactionManagerUniqueName("hi!");
        java.lang.String str35 = atomikosProperties25.getTransactionManagerUniqueName();
        atomikosProperties25.setThreadedTwoPhaseCommit(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        boolean boolean40 = properties15.contains((java.lang.Object) atomikosProperties25);
        boolean boolean41 = atomikosProperties25.isForceShutdownOnVmExit();
        atomikosProperties25.setSerialJtaTransactions(true);
        atomikosProperties25.setLogBaseName("{true=true}");
        atomikosProperties25.setTransactionManagerUniqueName("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test4369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4369");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        atomikosProperties8.setEnableLogging(false);
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        boolean boolean25 = properties20.containsValue((java.lang.Object) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Enumeration<?> wildcardEnumeration27 = properties20.propertyNames();
        java.lang.Object obj29 = properties16.put((java.lang.Object) wildcardEnumeration27, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj45 = properties16.getOrDefault((java.lang.Object) boolean37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj46 = properties0.putIfAbsent((java.lang.Object) atomikosProperties8, (java.lang.Object) atomikosProperties38);
        java.lang.String str47 = atomikosProperties8.getTransactionManagerUniqueName();
        int int48 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setDefaultJtaTimeout(1L);
        atomikosProperties8.setMaxTimeout((long) 50);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setEnableLogging(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
    }

    @Test
    public void test4370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4370");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("hi!");
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test4371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4371");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        int int10 = properties0.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test4372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4372");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isEnableLogging();
        java.lang.Object obj36 = properties0.put((java.lang.Object) false, (java.lang.Object) boolean35);
        java.lang.Object obj37 = properties0.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        boolean boolean40 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties0.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{hi!=, false=true}");
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
    }

    @Test
    public void test4373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4373");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setEnableLogging(true);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties28.elements();
        boolean boolean32 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties28.elements();
        java.lang.Object obj34 = properties0.replace((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        int int39 = properties35.size();
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.util.Set<java.lang.String> strSet41 = properties35.stringPropertyNames();
        boolean boolean42 = properties0.contains((java.lang.Object) strSet41);
        java.util.Collection<java.lang.Object> objCollection43 = properties0.values();
        java.util.Properties properties44 = new java.util.Properties(properties0);
        java.lang.Object obj45 = properties0.clone();
        java.io.Reader reader46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{hi!=[]}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{hi!=[]}");
    }

    @Test
    public void test4374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4374");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties8.elements();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        java.lang.Object obj19 = properties0.replace((java.lang.Object) objEnumeration12, (java.lang.Object) objEnumeration18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setSerialJtaTransactions(false);
        boolean boolean24 = atomikosProperties21.isSerialJtaTransactions();
        java.lang.String str25 = atomikosProperties21.getService();
        boolean boolean26 = atomikosProperties21.isEnableLogging();
        java.lang.String str27 = atomikosProperties21.getLogBaseName();
        boolean boolean28 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        long long29 = atomikosProperties21.getDefaultJtaTimeout();
        java.util.Properties properties30 = atomikosProperties21.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        atomikosProperties31.setLogBaseName("hi!");
        long long41 = atomikosProperties31.getDefaultJtaTimeout();
        boolean boolean42 = atomikosProperties31.isSerialJtaTransactions();
        java.lang.String str43 = atomikosProperties31.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean48 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setService("");
        long long51 = atomikosProperties44.getCheckpointInterval();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = properties30.putIfAbsent((java.lang.Object) str43, (java.lang.Object) atomikosProperties44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 500L + "'", long51 == 500L);
    }

    @Test
    public void test4375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4375");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean10 = properties3.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection11 = properties3.values();
        java.lang.Object obj12 = properties3.clone();
        boolean boolean13 = properties0.equals((java.lang.Object) properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties14.containsValue((java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.lang.Object obj28 = properties14.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet27);
        java.util.Set<java.lang.Object> objSet29 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isEnableLogging();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setEnableLogging(true);
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties42.elements();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) true, (java.lang.Object) properties42);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        boolean boolean54 = properties49.containsValue((java.lang.Object) properties50);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.lang.Object obj63 = properties49.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet62);
        java.util.Set<java.lang.Object> objSet64 = properties49.keySet();
        java.lang.Object obj65 = properties0.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties14.elements();
        java.lang.Object obj69 = properties14.setProperty("{hi!=[]}", "");
        int int70 = properties14.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setMaxTimeout((long) '#');
        boolean boolean78 = atomikosProperties71.isEnableLogging();
        java.util.Properties properties79 = atomikosProperties71.asProperties();
        java.lang.String str80 = atomikosProperties71.getService();
        java.lang.Object obj81 = properties14.get((java.lang.Object) atomikosProperties71);
        atomikosProperties71.setMaxActives((int) 'a');
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test4376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4376");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test4377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4377");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Set<java.lang.Object> objSet35 = properties30.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties30.keys();
        java.lang.String str38 = properties30.getProperty("hi!");
        java.lang.String str40 = properties30.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setEnableLogging(false);
        boolean boolean48 = properties30.containsKey((java.lang.Object) atomikosProperties41);
        boolean boolean49 = properties0.containsValue((java.lang.Object) properties30);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.Object obj59 = properties50.put((java.lang.Object) strSet57, (java.lang.Object) 0.0d);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        java.lang.Object obj77 = properties50.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) (short) 10);
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.remove((java.lang.Object) 0.0d);
        boolean boolean81 = properties78.isEmpty();
        java.util.Set<java.lang.String> strSet82 = properties78.stringPropertyNames();
        java.lang.String str84 = properties78.getProperty("hi!");
        java.lang.Object obj85 = properties0.putIfAbsent((java.lang.Object) properties60, (java.lang.Object) properties78);
        java.util.Collection<java.lang.Object> objCollection86 = properties0.values();
        java.util.Set<java.lang.Object> objSet87 = properties0.keySet();
        java.util.Properties properties88 = new java.util.Properties(properties0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(objSet87);
    }

    @Test
    public void test4378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4378");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties15.entrySet();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        boolean boolean26 = properties23.isEmpty();
        java.lang.Object obj29 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        boolean boolean33 = properties15.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties30);
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        int int38 = properties34.size();
        java.util.Properties properties39 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties34.entrySet();
        java.lang.Object obj41 = properties0.put((java.lang.Object) atomikosProperties30, (java.lang.Object) properties34);
        boolean boolean42 = properties0.isEmpty();
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream43, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service={{}={}}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test4379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4379");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setDefaultJtaTimeout(10000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test4380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4380");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setService("{{}={}}");
        atomikosProperties0.setMaxTimeout((long) (short) 1);
        boolean boolean13 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test4381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4381");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties3.isThreadedTwoPhaseCommit();
        atomikosProperties3.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        boolean boolean12 = atomikosProperties9.isSerialJtaTransactions();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        boolean boolean17 = atomikosProperties9.isForceShutdownOnVmExit();
        long long18 = atomikosProperties9.getMaxTimeout();
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties0.replace((java.lang.Object) atomikosProperties3, (java.lang.Object) str19, (java.lang.Object) true);
        java.util.Properties properties28 = atomikosProperties3.asProperties();
        atomikosProperties3.setService("{=hi!}");
        atomikosProperties3.setLogBaseDir("");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties28);
    }

    @Test
    public void test4382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4382");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.lang.String str4 = properties0.toString();
        java.lang.String str5 = properties0.toString();
        java.util.Set<java.lang.Object> objSet6 = properties0.keySet();
        java.lang.Class<?> wildcardClass7 = objSet6.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test4383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4383");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties(properties7);
        java.util.Set<java.lang.String> strSet13 = properties7.stringPropertyNames();
        java.util.Set<java.lang.String> strSet14 = properties7.stringPropertyNames();
        java.lang.Object obj15 = properties6.remove((java.lang.Object) properties7);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.lang.Object obj23 = properties16.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean27 = atomikosProperties24.isSerialJtaTransactions();
        atomikosProperties24.setTransactionManagerUniqueName("hi!");
        atomikosProperties24.setForceShutdownOnVmExit(false);
        atomikosProperties24.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str34 = atomikosProperties24.getTransactionManagerUniqueName();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.lang.Object obj49 = properties35.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet48);
        java.util.Set<java.lang.Object> objSet50 = properties35.keySet();
        java.util.Set<java.lang.Object> objSet51 = properties35.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties35.entrySet();
        java.util.Set<java.lang.Object> objSet53 = properties35.keySet();
        java.lang.Object obj54 = properties16.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) properties35);
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet59 = properties56.stringPropertyNames();
        boolean boolean60 = properties55.containsValue((java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        java.util.Properties properties69 = atomikosProperties61.asProperties();
        java.util.Properties properties70 = atomikosProperties61.asProperties();
        boolean boolean71 = properties55.contains((java.lang.Object) atomikosProperties61);
        java.lang.Object obj72 = properties6.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) atomikosProperties61);
        java.io.OutputStream outputStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.store(outputStream73, "{{{}={}}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test4384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4384");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        boolean boolean15 = properties11.isEmpty();
        java.util.Set<java.lang.Object> objSet16 = properties11.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties11.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties11.entrySet();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        boolean boolean26 = properties20.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isEnableLogging();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        java.lang.Object obj44 = properties20.replace((java.lang.Object) atomikosProperties27, (java.lang.Object) objCollection43);
        boolean boolean46 = properties11.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection43, (java.lang.Object) 10.0d);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        int int51 = properties47.size();
        java.util.Properties properties52 = new java.util.Properties(properties47);
        java.util.Set<java.lang.String> strSet53 = properties47.stringPropertyNames();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties54.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setMaxTimeout((long) '#');
        boolean boolean68 = atomikosProperties61.isForceShutdownOnVmExit();
        java.lang.Object obj69 = properties54.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties61);
        boolean boolean70 = atomikosProperties61.isSerialJtaTransactions();
        java.lang.Object obj71 = properties11.replace((java.lang.Object) properties47, (java.lang.Object) boolean70);
        java.lang.Object obj72 = properties8.remove((java.lang.Object) properties47);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.remove((java.lang.Object) 0.0d);
        boolean boolean77 = properties74.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties85 = atomikosProperties78.asProperties();
        int int86 = atomikosProperties78.getMaxActives();
        atomikosProperties78.setService("hi!");
        java.lang.Object obj89 = properties74.get((java.lang.Object) atomikosProperties78);
        java.lang.Object obj90 = properties47.put((java.lang.Object) "{{}={}}", (java.lang.Object) properties74);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Collection<java.lang.Object> objCollection92 = properties0.values();
        java.io.PrintStream printStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(objCollection92);
    }

    @Test
    public void test4385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4385");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties16.keys();
        boolean boolean24 = properties16.equals((java.lang.Object) "");
        java.lang.String str25 = properties16.toString();
        java.lang.Object obj26 = properties0.put((java.lang.Object) 'a', (java.lang.Object) properties16);
        java.lang.String str27 = properties0.toString();
        java.util.Properties properties28 = new java.util.Properties(properties0);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        boolean boolean32 = properties29.isEmpty();
        java.lang.Object obj35 = properties29.setProperty("", "hi!");
        java.lang.String str36 = properties29.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = atomikosProperties37.isThreadedTwoPhaseCommit();
        boolean boolean41 = atomikosProperties37.isSerialJtaTransactions();
        atomikosProperties37.setDefaultJtaTimeout((long) 'a');
        java.lang.Object obj44 = properties0.put((java.lang.Object) str36, (java.lang.Object) 'a');
        boolean boolean45 = properties0.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration46 = properties0.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Character cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{=hi!}" + "'", str36, "{=hi!}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test4386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4386");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.lang.String str34 = properties10.getProperty("{=hi!}");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.lang.Object obj49 = properties35.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet48);
        java.util.Set<java.lang.Object> objSet50 = properties35.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setEnableLogging(true);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties63.elements();
        java.lang.Object obj69 = properties35.replace((java.lang.Object) true, (java.lang.Object) properties63);
        boolean boolean70 = properties10.equals((java.lang.Object) properties35);
        java.util.Properties properties71 = new java.util.Properties(properties10);
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.lang.String str75 = properties72.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{tmlog=}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{tmlog=}" + "'", str75, "{tmlog=}");
    }

    @Test
    public void test4387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4387");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.lang.Object obj22 = properties8.put((java.lang.Object) properties11, (java.lang.Object) properties14);
        java.lang.String str24 = properties11.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        long long32 = atomikosProperties25.getMaxTimeout();
        boolean boolean33 = properties11.containsValue((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties11.elements();
        boolean boolean35 = properties0.contains((java.lang.Object) objEnumeration34);
        java.util.Properties properties36 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet37 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties0.keys();
        java.lang.Object obj41 = properties0.setProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{hi!=[]}");
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream42, "{tmlog=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test4388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4388");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties13.containsValue((java.lang.Object) properties53);
        boolean boolean56 = properties13.isEmpty();
        java.util.Properties properties57 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setEnableLogging(false);
        boolean boolean65 = atomikosProperties58.isSerialJtaTransactions();
        int int66 = atomikosProperties58.getMaxActives();
        boolean boolean67 = atomikosProperties58.isEnableLogging();
        long long68 = atomikosProperties58.getCheckpointInterval();
        java.util.Properties properties69 = atomikosProperties58.asProperties();
        java.util.Properties properties70 = atomikosProperties58.asProperties();
        boolean boolean71 = properties57.containsValue((java.lang.Object) atomikosProperties58);
        properties57.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test4389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4389");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setForceShutdownOnVmExit(true);
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties26.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties26.entrySet();
        java.lang.Object obj34 = properties20.put((java.lang.Object) properties23, (java.lang.Object) properties26);
        java.lang.Object obj35 = properties23.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setMaxTimeout((long) '#');
        boolean boolean43 = atomikosProperties36.isEnableLogging();
        atomikosProperties36.setCheckpointInterval((long) 100);
        atomikosProperties36.setSerialJtaTransactions(true);
        boolean boolean48 = properties23.equals((java.lang.Object) atomikosProperties36);
        java.util.Enumeration<?> wildcardEnumeration49 = properties23.propertyNames();
        java.lang.Object obj50 = properties23.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        boolean boolean56 = atomikosProperties51.isSerialJtaTransactions();
        boolean boolean57 = atomikosProperties51.isForceShutdownOnVmExit();
        java.lang.String str58 = atomikosProperties51.getService();
        boolean boolean59 = atomikosProperties51.isThreadedTwoPhaseCommit();
        boolean boolean60 = atomikosProperties51.isEnableLogging();
        java.lang.String str61 = atomikosProperties51.getLogBaseDir();
        atomikosProperties51.setForceShutdownOnVmExit(false);
        atomikosProperties51.setTransactionManagerUniqueName("");
        java.lang.Object obj66 = properties19.put((java.lang.Object) properties23, (java.lang.Object) atomikosProperties51);
        properties19.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test4390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4390");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test4391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4391");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        boolean boolean18 = properties0.containsKey((java.lang.Object) 35);
        java.lang.String str20 = properties0.getProperty("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        java.lang.String str22 = properties0.getProperty("{true=true}");
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test4392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4392");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        int int40 = properties39.size();
        java.util.Set<java.lang.String> strSet41 = properties39.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet41);
    }

    @Test
    public void test4393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4393");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        java.util.Enumeration<?> wildcardEnumeration11 = properties0.propertyNames();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        boolean boolean15 = properties12.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties12.elements();
        java.lang.Object obj19 = properties12.replace((java.lang.Object) 1, (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties12.entrySet();
        java.util.Properties properties21 = new java.util.Properties(properties12);
        java.lang.Object obj22 = properties21.clone();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        boolean boolean34 = properties29.containsValue((java.lang.Object) properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.util.Enumeration<?> wildcardEnumeration36 = properties29.propertyNames();
        java.lang.Object obj38 = properties25.put((java.lang.Object) wildcardEnumeration36, (java.lang.Object) 10.0d);
        boolean boolean39 = properties23.equals((java.lang.Object) 10.0d);
        boolean boolean41 = properties23.containsKey((java.lang.Object) 35);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties23.entrySet();
        java.lang.Object obj43 = properties0.put(obj22, (java.lang.Object) properties23);
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties44.elements();
        int int48 = properties44.size();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        boolean boolean55 = properties44.containsKey((java.lang.Object) objSet54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties44.keys();
        int int57 = properties44.size();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection59 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties58.keys();
        java.lang.Object obj63 = properties58.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet64 = properties58.stringPropertyNames();
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.remove((java.lang.Object) 0.0d);
        boolean boolean68 = properties65.isEmpty();
        java.util.Set<java.lang.String> strSet69 = properties65.stringPropertyNames();
        boolean boolean70 = properties58.containsKey((java.lang.Object) properties65);
        java.lang.Object obj71 = properties23.put((java.lang.Object) int57, (java.lang.Object) properties65);
        java.lang.String str74 = properties65.getProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(wildcardEnumeration36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str74, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test4394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4394");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        boolean boolean21 = properties19.contains((java.lang.Object) 100.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties30.isEmpty();
        java.lang.Object obj36 = properties30.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = properties22.remove((java.lang.Object) properties30, (java.lang.Object) atomikosProperties37);
        boolean boolean41 = properties19.equals((java.lang.Object) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration44 = properties19.propertyNames();
        boolean boolean45 = properties0.containsValue((java.lang.Object) wildcardEnumeration44);
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        boolean boolean65 = atomikosProperties61.isSerialJtaTransactions();
        atomikosProperties61.setService("{=hi!}");
        boolean boolean68 = properties0.containsValue((java.lang.Object) atomikosProperties61);
        java.util.Set<java.lang.String> strSet69 = properties0.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test4395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4395");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long17 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
    }

    @Test
    public void test4396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4396");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        java.lang.String str14 = atomikosProperties8.getLogBaseName();
        java.lang.String str15 = atomikosProperties8.getLogBaseName();
        boolean boolean16 = atomikosProperties8.isForceShutdownOnVmExit();
        long long17 = atomikosProperties8.getMaxTimeout();
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        long long21 = atomikosProperties8.getCheckpointInterval();
        atomikosProperties8.setMaxActives(1);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        boolean boolean29 = properties24.containsValue((java.lang.Object) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties24.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.lang.Object obj38 = properties24.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet37);
        java.util.Set<java.lang.Object> objSet39 = properties24.keySet();
        java.util.Set<java.lang.Object> objSet40 = properties24.keySet();
        java.util.Properties properties41 = new java.util.Properties(properties24);
        java.lang.Object obj42 = properties0.putIfAbsent((java.lang.Object) 1, (java.lang.Object) properties24);
        java.lang.Object obj45 = properties24.setProperty("{=hi!}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str46 = properties24.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}" + "'", str46, "{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
    }

    @Test
    public void test4397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4397");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties8.elements();
        int int22 = properties8.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test4398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4398");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        int int21 = properties19.size();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties22.keys();
        java.lang.String str30 = properties22.getProperty("hi!");
        java.lang.String str32 = properties22.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setEnableLogging(false);
        boolean boolean40 = properties22.containsKey((java.lang.Object) atomikosProperties33);
        atomikosProperties33.setTransactionManagerUniqueName("tmlog");
        atomikosProperties33.setEnableLogging(true);
        long long45 = atomikosProperties33.getMaxTimeout();
        boolean boolean46 = properties19.containsValue((java.lang.Object) long45);
        java.io.Writer writer47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.store(writer47, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test4399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4399");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        java.util.Enumeration<?> wildcardEnumeration21 = properties19.propertyNames();
        java.lang.Object obj22 = properties19.clone();
        java.util.Properties properties23 = new java.util.Properties(properties19);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        boolean boolean29 = properties24.containsValue((java.lang.Object) properties25);
        java.util.Collection<java.lang.Object> objCollection30 = properties24.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.lang.Object obj38 = properties24.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet37);
        java.util.Set<java.lang.Object> objSet39 = properties24.keySet();
        java.util.Set<java.lang.Object> objSet40 = properties24.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties24.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        boolean boolean45 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = properties42.containsValue((java.lang.Object) atomikosProperties46);
        java.lang.String str49 = properties42.getProperty("tmlog");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean51 = properties19.equals((java.lang.Object) properties24);
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.save(outputStream52, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test4400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4400");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setLogBaseName("");
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test4401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4401");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet16 = properties13.stringPropertyNames();
        boolean boolean17 = properties12.containsValue((java.lang.Object) properties13);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.lang.Object obj26 = properties12.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet25);
        java.util.Set<java.lang.Object> objSet27 = properties12.keySet();
        java.util.Set<java.lang.Object> objSet28 = properties12.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties12.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean35 = properties30.containsValue((java.lang.Object) atomikosProperties34);
        java.lang.String str37 = properties30.getProperty("tmlog");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        boolean boolean39 = properties11.contains((java.lang.Object) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties12.elements();
        java.util.Collection<java.lang.Object> objCollection41 = properties12.values();
        java.lang.Object obj42 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties43.isSerialJtaTransactions();
        atomikosProperties43.setTransactionManagerUniqueName("hi!");
        java.lang.String str49 = atomikosProperties43.getLogBaseName();
        java.lang.String str50 = atomikosProperties43.getLogBaseName();
        boolean boolean51 = atomikosProperties43.isSerialJtaTransactions();
        long long52 = atomikosProperties43.getMaxTimeout();
        atomikosProperties43.setCheckpointInterval(0L);
        long long55 = atomikosProperties43.getDefaultJtaTimeout();
        java.lang.String str56 = atomikosProperties43.getTransactionManagerUniqueName();
        atomikosProperties43.setLogBaseName("{true=true}");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj59 = properties12.putIfAbsent(obj42, (java.lang.Object) "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10000L + "'", long55 == 10000L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
    }

    @Test
    public void test4402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4402");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) ' ');
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
    }

    @Test
    public void test4403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4403");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        boolean boolean31 = atomikosProperties28.isSerialJtaTransactions();
        java.lang.String str32 = atomikosProperties28.getService();
        long long33 = atomikosProperties28.getMaxTimeout();
        atomikosProperties28.setMaxTimeout((long) (byte) -1);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        boolean boolean47 = properties41.isEmpty();
        java.lang.Object obj48 = properties36.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean47);
        boolean boolean49 = properties27.remove((java.lang.Object) (byte) -1, (java.lang.Object) boolean47);
        java.lang.Object obj52 = properties27.setProperty("{{}={}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet61 = properties58.stringPropertyNames();
        boolean boolean62 = properties57.containsValue((java.lang.Object) properties58);
        java.util.Collection<java.lang.Object> objCollection63 = properties57.values();
        java.util.Enumeration<?> wildcardEnumeration64 = properties57.propertyNames();
        java.lang.Object obj66 = properties53.put((java.lang.Object) wildcardEnumeration64, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties53.elements();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties69.elements();
        boolean boolean73 = properties69.isEmpty();
        java.util.Set<java.lang.Object> objSet74 = properties69.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties69.keys();
        boolean boolean77 = properties69.equals((java.lang.Object) "");
        java.lang.String str78 = properties69.toString();
        java.lang.Object obj79 = properties53.put((java.lang.Object) 'a', (java.lang.Object) properties69);
        java.lang.String str80 = properties53.toString();
        java.util.Properties properties81 = new java.util.Properties(properties53);
        boolean boolean82 = properties53.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setSerialJtaTransactions(false);
        atomikosProperties83.setThreadedTwoPhaseCommit(true);
        atomikosProperties83.setMaxTimeout((long) '#');
        java.lang.String str90 = atomikosProperties83.getLogBaseDir();
        boolean boolean91 = atomikosProperties83.isThreadedTwoPhaseCommit();
        int int92 = atomikosProperties83.getMaxActives();
        atomikosProperties83.setTransactionManagerUniqueName("tmlog");
        java.lang.Class<?> wildcardClass95 = atomikosProperties83.getClass();
        boolean boolean96 = properties27.remove((java.lang.Object) properties53, (java.lang.Object) wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + obj48 + "' != '" + true + "'", obj48, true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{}" + "'", str78, "{}");
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 50 + "'", int92 == 50);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test4404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4404");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties0.stringPropertyNames();
        java.lang.String str6 = properties0.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setEnableLogging(false);
        boolean boolean14 = atomikosProperties7.isSerialJtaTransactions();
        int int15 = atomikosProperties7.getMaxActives();
        atomikosProperties7.setTransactionManagerUniqueName("tmlog");
        boolean boolean18 = atomikosProperties7.isSerialJtaTransactions();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties25.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties25.entrySet();
        java.lang.Object obj33 = properties19.put((java.lang.Object) properties22, (java.lang.Object) properties25);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.lang.Object obj48 = properties34.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet47);
        java.util.Set<java.lang.Object> objSet49 = properties34.keySet();
        java.util.Set<java.lang.Object> objSet50 = properties34.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties34.entrySet();
        java.lang.Object obj52 = properties22.remove((java.lang.Object) objEntrySet51);
        java.lang.String str53 = properties22.toString();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        java.lang.String str58 = properties54.toString();
        java.lang.String str59 = properties54.toString();
        java.util.Set<java.lang.Object> objSet60 = properties54.keySet();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean67 = properties61.isEmpty();
        java.lang.Object obj68 = properties22.putIfAbsent((java.lang.Object) properties54, (java.lang.Object) boolean67);
        boolean boolean70 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) properties22, (java.lang.Object) '4');
        java.lang.String str71 = atomikosProperties7.getLogBaseDir();
        long long72 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.setEnableLogging(true);
        boolean boolean75 = atomikosProperties7.isThreadedTwoPhaseCommit();
        atomikosProperties7.setTransactionManagerUniqueName("{tmlog=}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test4405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4405");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.lang.String str18 = properties0.getProperty("{}");
        java.lang.Object obj21 = properties0.setProperty("{{}={}}", "hi!");
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        int int26 = properties22.size();
        java.util.Properties properties27 = new java.util.Properties(properties22);
        boolean boolean28 = properties27.isEmpty();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        int int33 = properties29.size();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        boolean boolean40 = properties29.containsKey((java.lang.Object) objSet39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties29.keys();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties42.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties42.entrySet();
        boolean boolean51 = properties29.remove((java.lang.Object) properties42, (java.lang.Object) 1.0f);
        boolean boolean52 = properties27.contains((java.lang.Object) properties42);
        java.util.Properties properties53 = new java.util.Properties(properties42);
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties0.contains((java.lang.Object) properties54);
        boolean boolean57 = properties54.containsValue((java.lang.Object) (short) -1);
        java.io.InputStream inputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties54.loadFromXML(inputStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test4406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4406");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties(properties12);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties12.entrySet();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet41 = properties38.stringPropertyNames();
        boolean boolean42 = properties37.containsValue((java.lang.Object) properties38);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        boolean boolean44 = properties12.remove((java.lang.Object) objEntrySet36, (java.lang.Object) objCollection43);
        boolean boolean45 = properties0.equals((java.lang.Object) boolean44);
        java.util.Enumeration<?> wildcardEnumeration46 = properties0.propertyNames();
        java.lang.Class<?> wildcardClass47 = properties0.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test4407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4407");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.io.PrintWriter printWriter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printWriter30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test4408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4408");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        int int23 = properties19.size();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties26.keys();
        java.util.Properties properties39 = new java.util.Properties();
        java.lang.Object obj41 = properties39.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        boolean boolean43 = properties39.isEmpty();
        java.util.Set<java.lang.Object> objSet44 = properties39.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties39.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties39.entrySet();
        boolean boolean48 = properties26.remove((java.lang.Object) properties39, (java.lang.Object) 1.0f);
        boolean boolean49 = properties24.contains((java.lang.Object) properties39);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Set<java.lang.Object> objSet51 = properties39.keySet();
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.save(outputStream52, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet51);
    }

    @Test
    public void test4409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4409");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setSerialJtaTransactions(true);
        atomikosProperties11.setMaxTimeout((long) (byte) 0);
        atomikosProperties11.setTransactionManagerUniqueName("{hi!=[]}");
        atomikosProperties11.setCheckpointInterval(97L);
        long long27 = atomikosProperties11.getMaxTimeout();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test4410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4410");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.lang.String str25 = properties0.getProperty("{tmlog=}");
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setService("{=hi!}");
        atomikosProperties27.setLogBaseDir("");
        boolean boolean38 = properties0.contains((java.lang.Object) atomikosProperties27);
        java.util.Set<java.lang.Object> objSet39 = properties0.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
    }

    @Test
    public void test4411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4411");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet27 = properties24.stringPropertyNames();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        boolean boolean33 = properties28.containsValue((java.lang.Object) properties29);
        java.util.Collection<java.lang.Object> objCollection34 = properties28.values();
        java.util.Enumeration<?> wildcardEnumeration35 = properties28.propertyNames();
        java.lang.Object obj37 = properties24.put((java.lang.Object) wildcardEnumeration35, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setMaxTimeout((long) '#');
        boolean boolean45 = atomikosProperties38.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj53 = properties24.getOrDefault((java.lang.Object) boolean45, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties54.keys();
        java.lang.String str62 = properties54.getProperty("hi!");
        java.lang.String str64 = properties54.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setEnableLogging(false);
        boolean boolean72 = properties54.containsKey((java.lang.Object) atomikosProperties65);
        boolean boolean73 = properties24.containsValue((java.lang.Object) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties24.elements();
        properties24.clear();
        java.util.Properties properties76 = new java.util.Properties();
        java.lang.Object obj78 = properties76.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties76.elements();
        int int80 = properties76.size();
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties81.elements();
        boolean boolean85 = properties81.isEmpty();
        java.util.Set<java.lang.Object> objSet86 = properties81.keySet();
        boolean boolean87 = properties76.containsKey((java.lang.Object) objSet86);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties76.keys();
        int int89 = properties76.size();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.lang.Object obj91 = properties0.remove((java.lang.Object) properties76);
        java.lang.Object obj92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = properties76.contains(obj92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNotNull(wildcardEnumeration35);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test4412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4412");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str9 = properties7.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str11 = properties7.getProperty("");
        java.lang.Object obj13 = properties7.get((java.lang.Object) "{=hi!}");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        boolean boolean20 = properties19.isEmpty();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties21.elements();
        int int25 = properties21.size();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        boolean boolean30 = properties26.isEmpty();
        java.util.Set<java.lang.Object> objSet31 = properties26.keySet();
        boolean boolean32 = properties21.containsKey((java.lang.Object) objSet31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties21.keys();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        boolean boolean38 = properties34.isEmpty();
        java.util.Set<java.lang.Object> objSet39 = properties34.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties34.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties34.entrySet();
        boolean boolean43 = properties21.remove((java.lang.Object) properties34, (java.lang.Object) 1.0f);
        boolean boolean44 = properties19.contains((java.lang.Object) properties34);
        java.util.Properties properties45 = new java.util.Properties(properties34);
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.util.Properties properties48 = new java.util.Properties();
        boolean boolean50 = properties48.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setSerialJtaTransactions(false);
        java.lang.String str58 = atomikosProperties51.getService();
        boolean boolean59 = properties48.containsKey((java.lang.Object) atomikosProperties51);
        atomikosProperties51.setLogBaseName("{hi!=[]}");
        long long62 = atomikosProperties51.getMaxTimeout();
        java.lang.Object obj63 = properties7.replace((java.lang.Object) objEntrySet47, (java.lang.Object) long62);
        java.lang.Object obj66 = properties7.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={=hi!}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test4413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4413");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str15 = atomikosProperties0.getService();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Class<?> wildcardClass18 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test4414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4414");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.lang.String str34 = properties10.getProperty("{=hi!}");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.lang.Object obj49 = properties35.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet48);
        java.util.Set<java.lang.Object> objSet50 = properties35.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setEnableLogging(true);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties63.elements();
        java.lang.Object obj69 = properties35.replace((java.lang.Object) true, (java.lang.Object) properties63);
        boolean boolean70 = properties10.equals((java.lang.Object) properties35);
        java.util.Properties properties71 = new java.util.Properties(properties10);
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties71.store(outputStream72, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test4415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4415");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        int int11 = atomikosProperties0.getMaxActives();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test4416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4416");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj8 = properties0.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties0.elements();
        java.io.Reader reader10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertNotNull(objEnumeration9);
    }

    @Test
    public void test4417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4417");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = properties8.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        int int18 = properties14.size();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Set<java.lang.String> strSet20 = properties14.stringPropertyNames();
        java.util.Set<java.lang.String> strSet21 = properties14.stringPropertyNames();
        java.lang.Object obj22 = properties0.getOrDefault((java.lang.Object) properties8, (java.lang.Object) properties14);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        boolean boolean26 = properties23.isEmpty();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream29, "{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
    }

    @Test
    public void test4418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4418");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test4419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4419");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties0.keys();
        java.lang.String str37 = properties0.toString();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Collection<java.lang.Object> objCollection40 = properties38.values();
        java.util.Properties properties41 = new java.util.Properties(properties38);
        properties41.clear();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        int int47 = properties43.size();
        java.util.Properties properties48 = new java.util.Properties(properties43);
        java.util.Set<java.lang.String> strSet49 = properties43.stringPropertyNames();
        java.util.Set<java.lang.String> strSet50 = properties43.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties51.elements();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties56.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties56.elements();
        java.lang.Object obj62 = properties43.replace((java.lang.Object) objEnumeration55, (java.lang.Object) objEnumeration61);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Enumeration<?> wildcardEnumeration65 = properties43.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setEnableLogging(false);
        atomikosProperties66.setForceShutdownOnVmExit(true);
        long long75 = atomikosProperties66.getDefaultJtaTimeout();
        atomikosProperties66.setLogBaseName("tmlog");
        java.lang.String str78 = atomikosProperties66.getService();
        java.lang.String str79 = atomikosProperties66.getTransactionManagerUniqueName();
        boolean boolean80 = atomikosProperties66.isEnableLogging();
        boolean boolean81 = properties43.containsValue((java.lang.Object) atomikosProperties66);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{hi!=[]}" + "'", str37, "{hi!=[]}");
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test4420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4420");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 1);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test4421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4421");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        int int14 = properties10.size();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties10.entrySet();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        boolean boolean22 = properties17.containsValue((java.lang.Object) properties18);
        java.util.Collection<java.lang.Object> objCollection23 = properties17.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Set<java.lang.Object> objSet30 = properties25.keySet();
        java.lang.Object obj31 = properties17.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet30);
        boolean boolean32 = properties0.replace((java.lang.Object) "hi!", (java.lang.Object) properties10, (java.lang.Object) "hi!");
        java.lang.String str34 = properties10.getProperty("{=hi!}");
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet39 = properties36.stringPropertyNames();
        boolean boolean40 = properties35.containsValue((java.lang.Object) properties36);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.lang.Object> objSet48 = properties43.keySet();
        java.lang.Object obj49 = properties35.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet48);
        java.util.Set<java.lang.Object> objSet50 = properties35.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setMaxTimeout((long) '#');
        boolean boolean58 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setEnableLogging(true);
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties63.elements();
        boolean boolean67 = properties63.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties63.elements();
        java.lang.Object obj69 = properties35.replace((java.lang.Object) true, (java.lang.Object) properties63);
        boolean boolean70 = properties10.equals((java.lang.Object) properties35);
        java.util.Properties properties71 = new java.util.Properties(properties10);
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Properties properties73 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection74 = properties73.values();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties73.keys();
        properties73.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties77.isSerialJtaTransactions();
        boolean boolean81 = atomikosProperties77.isEnableLogging();
        atomikosProperties77.setService("");
        java.util.Properties properties84 = atomikosProperties77.asProperties();
        boolean boolean85 = properties73.containsValue((java.lang.Object) properties84);
        java.lang.String str86 = properties73.toString();
        boolean boolean87 = properties72.contains((java.lang.Object) properties73);
        java.io.InputStream inputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties72.loadFromXML(inputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{}" + "'", str86, "{}");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test4422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4422");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        long long12 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives((int) 'a');
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test4423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4423");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        boolean boolean34 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties30.entrySet();
        java.lang.Object obj37 = properties19.remove((java.lang.Object) objEntrySet36);
        java.lang.Object obj38 = properties19.clone();
        java.util.Properties properties39 = new java.util.Properties(properties19);
        java.util.Properties properties40 = new java.util.Properties();
        boolean boolean42 = properties40.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        java.lang.String str50 = atomikosProperties43.getService();
        boolean boolean51 = properties40.containsKey((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setMaxTimeout((long) '#');
        boolean boolean59 = atomikosProperties52.isEnableLogging();
        atomikosProperties52.setCheckpointInterval((long) 100);
        atomikosProperties52.setForceShutdownOnVmExit(false);
        boolean boolean64 = properties40.containsValue((java.lang.Object) atomikosProperties52);
        atomikosProperties52.setService("{=hi!}");
        atomikosProperties52.setDefaultJtaTimeout(0L);
        atomikosProperties52.setService("hi!");
        java.lang.Object obj71 = properties39.get((java.lang.Object) atomikosProperties52);
        java.lang.Object obj74 = properties39.setProperty("", "{}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test4424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4424");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        int int14 = properties13.size();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration26 = properties19.propertyNames();
        java.lang.Object obj28 = properties15.put((java.lang.Object) wildcardEnumeration26, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setMaxTimeout((long) '#');
        boolean boolean36 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj44 = properties15.getOrDefault((java.lang.Object) boolean36, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties45.keys();
        java.lang.String str53 = properties45.getProperty("hi!");
        java.lang.String str55 = properties45.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setSerialJtaTransactions(false);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        atomikosProperties56.setEnableLogging(false);
        boolean boolean63 = properties45.containsKey((java.lang.Object) atomikosProperties56);
        boolean boolean64 = properties15.containsValue((java.lang.Object) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties15.elements();
        boolean boolean66 = properties13.containsValue((java.lang.Object) properties15);
        java.io.OutputStream outputStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(outputStream67, "{hi!=[], {=hi!}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test4425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4425");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isForceShutdownOnVmExit();
        boolean boolean33 = atomikosProperties22.isEnableLogging();
        java.lang.String str34 = atomikosProperties22.getTransactionManagerUniqueName();
        atomikosProperties22.setTransactionManagerUniqueName("tmlog");
        boolean boolean37 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setEnableLogging(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test4426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4426");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives((int) (byte) 0);
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test4427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4427");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        boolean boolean13 = properties8.containsValue((java.lang.Object) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        boolean boolean20 = properties16.isEmpty();
        java.util.Set<java.lang.Object> objSet21 = properties16.keySet();
        java.lang.Object obj22 = properties8.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet21);
        java.util.Set<java.lang.Object> objSet23 = properties8.keySet();
        boolean boolean24 = properties0.containsKey((java.lang.Object) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties8.elements();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.elements();
        int int30 = properties26.size();
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties31.elements();
        boolean boolean35 = properties31.isEmpty();
        java.util.Set<java.lang.Object> objSet36 = properties31.keySet();
        boolean boolean37 = properties26.containsKey((java.lang.Object) objSet36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setEnableLogging(false);
        boolean boolean45 = atomikosProperties38.isSerialJtaTransactions();
        int int46 = atomikosProperties38.getMaxActives();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        boolean boolean56 = properties51.containsValue((java.lang.Object) properties52);
        java.util.Collection<java.lang.Object> objCollection57 = properties51.values();
        java.util.Enumeration<?> wildcardEnumeration58 = properties51.propertyNames();
        java.lang.Object obj60 = properties47.put((java.lang.Object) wildcardEnumeration58, (java.lang.Object) 10.0d);
        java.lang.String str62 = properties47.getProperty("{=hi!}");
        java.lang.Object obj63 = properties26.put((java.lang.Object) atomikosProperties38, (java.lang.Object) "{=hi!}");
        atomikosProperties38.setForceShutdownOnVmExit(false);
        atomikosProperties38.setService("{{}={}}");
        atomikosProperties38.setEnableLogging(true);
        boolean boolean70 = properties8.equals((java.lang.Object) true);
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties71.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setSerialJtaTransactions(false);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        atomikosProperties78.setMaxTimeout((long) '#');
        boolean boolean85 = atomikosProperties78.isForceShutdownOnVmExit();
        java.lang.Object obj86 = properties71.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties78);
        long long87 = atomikosProperties78.getDefaultJtaTimeout();
        atomikosProperties78.setLogBaseDir("{}");
        java.util.Properties properties90 = atomikosProperties78.asProperties();
        boolean boolean91 = properties8.containsValue((java.lang.Object) atomikosProperties78);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(wildcardEnumeration58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objEntrySet76);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 10000L + "'", long87 == 10000L);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test4428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4428");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setCheckpointInterval((long) (-1));
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test4429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4429");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        properties35.clear();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Set<java.lang.String> strSet55 = properties51.stringPropertyNames();
        java.lang.Object obj56 = properties35.get((java.lang.Object) properties51);
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.storeToXML(outputStream57, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(obj56);
    }

    @Test
    public void test4430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4430");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        int int5 = properties0.size();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        boolean boolean12 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        boolean boolean17 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean19 = properties14.containsValue((java.lang.Object) atomikosProperties18);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        int int24 = properties20.size();
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Set<java.lang.String> strSet26 = properties20.stringPropertyNames();
        java.util.Set<java.lang.String> strSet27 = properties20.stringPropertyNames();
        java.lang.Object obj28 = properties6.getOrDefault((java.lang.Object) properties14, (java.lang.Object) properties20);
        boolean boolean29 = properties0.equals((java.lang.Object) properties20);
        java.lang.String str32 = properties20.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str32, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test4431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4431");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection8 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.lang.Object obj10 = properties0.remove((java.lang.Object) properties7);
        int int11 = properties0.size();
        java.util.Set<java.lang.String> strSet12 = properties0.stringPropertyNames();
        java.io.Writer writer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer13, "{=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test4432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4432");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.save(outputStream10, "{true=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objEntrySet9);
    }

    @Test
    public void test4433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4433");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        boolean boolean20 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        boolean boolean25 = properties22.isEmpty();
        java.lang.Object obj28 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setSerialJtaTransactions(false);
        boolean boolean32 = properties14.remove((java.lang.Object) properties22, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties33 = new java.util.Properties(properties22);
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        boolean boolean39 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str40 = atomikosProperties36.getService();
        boolean boolean41 = atomikosProperties36.isEnableLogging();
        java.lang.String str42 = atomikosProperties36.getTransactionManagerUniqueName();
        boolean boolean43 = properties33.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setEnableLogging(false);
        boolean boolean51 = atomikosProperties44.isSerialJtaTransactions();
        int int52 = atomikosProperties44.getMaxActives();
        boolean boolean53 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean54 = properties0.remove((java.lang.Object) properties33, (java.lang.Object) boolean53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) 100);
        java.lang.String str65 = atomikosProperties55.getTransactionManagerUniqueName();
        boolean boolean66 = properties33.contains((java.lang.Object) atomikosProperties55);
        java.util.Properties properties67 = atomikosProperties55.asProperties();
        atomikosProperties55.setTransactionManagerUniqueName("tmlog");
        java.lang.String str70 = atomikosProperties55.getLogBaseDir();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test4434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4434");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.lang.Object obj10 = properties0.setProperty("{}", "tmlog");
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.elements();
        int int15 = properties11.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties16.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.keys();
        java.lang.Object obj21 = properties0.getOrDefault((java.lang.Object) properties11, (java.lang.Object) objEnumeration20);
        java.util.Properties properties22 = new java.util.Properties(properties11);
        java.util.Set<java.lang.String> strSet23 = properties22.stringPropertyNames();
        java.lang.String str24 = properties22.toString();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
    }

    @Test
    public void test4435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4435");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test4436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4436");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        boolean boolean6 = properties5.isEmpty();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        int int11 = properties7.size();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        boolean boolean18 = properties7.containsKey((java.lang.Object) objSet17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties7.keys();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.elements();
        boolean boolean24 = properties20.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties20.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties20.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties20.entrySet();
        boolean boolean29 = properties7.remove((java.lang.Object) properties20, (java.lang.Object) 1.0f);
        boolean boolean30 = properties5.contains((java.lang.Object) properties20);
        java.util.Properties properties31 = new java.util.Properties(properties20);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties32.entrySet();
        java.lang.Object obj38 = properties32.clone();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        boolean boolean51 = properties47.isEmpty();
        java.util.Set<java.lang.Object> objSet52 = properties47.keySet();
        java.lang.Object obj53 = properties39.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet52);
        java.util.Set<java.lang.Object> objSet54 = properties39.keySet();
        java.util.Set<java.lang.Object> objSet55 = properties39.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties39.entrySet();
        java.util.Set<java.lang.Object> objSet57 = properties39.keySet();
        java.lang.String str59 = properties39.getProperty("");
        java.lang.Object obj60 = properties32.get((java.lang.Object) properties39);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        boolean boolean65 = properties61.isEmpty();
        java.util.Set<java.lang.Object> objSet66 = properties61.keySet();
        boolean boolean67 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet68 = properties61.entrySet();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        boolean boolean72 = properties69.isEmpty();
        java.lang.Object obj75 = properties69.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean79 = properties61.remove((java.lang.Object) properties69, (java.lang.Object) atomikosProperties76);
        java.util.Properties properties80 = new java.util.Properties(properties69);
        int int81 = properties80.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setSerialJtaTransactions(false);
        boolean boolean86 = atomikosProperties83.isSerialJtaTransactions();
        java.lang.String str87 = atomikosProperties83.getService();
        boolean boolean88 = atomikosProperties83.isEnableLogging();
        java.lang.String str89 = atomikosProperties83.getTransactionManagerUniqueName();
        boolean boolean90 = properties80.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties83);
        atomikosProperties83.setTransactionManagerUniqueName("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = properties31.putIfAbsent(obj60, (java.lang.Object) "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEntrySet68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test4437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4437");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setLogBaseDir("");
        long long14 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test4438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4438");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj6 = properties0.setProperty("", "hi!");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        boolean boolean11 = properties7.isEmpty();
        java.util.Set<java.lang.Object> objSet12 = properties7.keySet();
        boolean boolean13 = properties7.isEmpty();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj17 = properties7.remove((java.lang.Object) properties14);
        java.lang.Object obj18 = properties0.get((java.lang.Object) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setMaxTimeout((long) '#');
        boolean boolean27 = atomikosProperties20.isForceShutdownOnVmExit();
        long long28 = atomikosProperties20.getCheckpointInterval();
        java.lang.Object obj29 = new java.lang.Object();
        boolean boolean31 = properties14.replace((java.lang.Object) long28, obj29, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        atomikosProperties32.setTransactionManagerUniqueName("hi!");
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        java.lang.String str39 = atomikosProperties32.getLogBaseName();
        boolean boolean40 = atomikosProperties32.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet45 = properties42.stringPropertyNames();
        boolean boolean46 = properties41.containsValue((java.lang.Object) properties42);
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        boolean boolean51 = properties47.containsValue((java.lang.Object) "hi!");
        boolean boolean52 = properties42.contains((java.lang.Object) "hi!");
        boolean boolean53 = properties14.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) boolean52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setMaxTimeout((long) '#');
        boolean boolean61 = atomikosProperties54.isEnableLogging();
        boolean boolean62 = atomikosProperties54.isThreadedTwoPhaseCommit();
        atomikosProperties54.setService("");
        java.util.Properties properties65 = atomikosProperties54.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        atomikosProperties66.setMaxTimeout((long) '#');
        boolean boolean73 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        atomikosProperties66.setCheckpointInterval(0L);
        java.lang.String str78 = atomikosProperties66.getService();
        boolean boolean79 = atomikosProperties66.isForceShutdownOnVmExit();
        java.util.Properties properties80 = atomikosProperties66.asProperties();
        java.lang.Object obj81 = properties14.put((java.lang.Object) atomikosProperties54, (java.lang.Object) properties80);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties80.keys();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEnumeration82);
    }

    @Test
    public void test4439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4439");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        int int5 = properties0.size();
        boolean boolean6 = properties0.isEmpty();
        boolean boolean7 = properties0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test4440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4440");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.lang.Object obj9 = properties0.setProperty("", "{}");
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.elements();
        boolean boolean14 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        boolean boolean16 = properties10.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties10.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        boolean boolean28 = properties10.remove((java.lang.Object) properties18, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties29 = new java.util.Properties(properties18);
        int int30 = properties29.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties32.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties32.getService();
        boolean boolean37 = atomikosProperties32.isEnableLogging();
        java.lang.String str38 = atomikosProperties32.getTransactionManagerUniqueName();
        boolean boolean39 = properties29.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        boolean boolean44 = properties40.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties40.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties40.entrySet();
        java.lang.Object obj47 = properties29.remove((java.lang.Object) objEntrySet46);
        boolean boolean48 = properties29.isEmpty();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.elements();
        boolean boolean53 = properties49.isEmpty();
        java.util.Set<java.lang.Object> objSet54 = properties49.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties49.keys();
        java.lang.String str57 = properties49.getProperty("hi!");
        java.lang.String str59 = properties49.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setEnableLogging(false);
        boolean boolean67 = properties49.containsKey((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setTransactionManagerUniqueName("tmlog");
        boolean boolean70 = atomikosProperties60.isForceShutdownOnVmExit();
        java.lang.Object obj71 = properties0.put((java.lang.Object) boolean48, (java.lang.Object) atomikosProperties60);
        java.io.InputStream inputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test4441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4441");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties10.entrySet();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        int int16 = properties12.size();
        java.util.Properties properties17 = new java.util.Properties(properties12);
        java.util.Set<java.lang.String> strSet18 = properties12.stringPropertyNames();
        java.util.Set<java.lang.String> strSet19 = properties12.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        boolean boolean23 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties20.elements();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties25.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.lang.Object obj31 = properties12.replace((java.lang.Object) objEnumeration24, (java.lang.Object) objEnumeration30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties12.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean36 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        java.lang.String str39 = atomikosProperties33.getLogBaseName();
        boolean boolean40 = properties12.containsKey((java.lang.Object) atomikosProperties33);
        atomikosProperties33.setService("");
        java.lang.String str43 = atomikosProperties33.getService();
        boolean boolean44 = properties10.equals((java.lang.Object) str43);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test4442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4442");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        boolean boolean6 = properties2.containsValue((java.lang.Object) "hi!");
        java.lang.String str8 = properties2.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration9 = properties2.propertyNames();
        java.lang.String str11 = properties2.getProperty("{{}={}}");
        java.lang.String str12 = properties2.toString();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setMaxTimeout((long) '#');
        boolean boolean26 = atomikosProperties19.isForceShutdownOnVmExit();
        int int27 = atomikosProperties19.getMaxActives();
        java.lang.Object obj28 = properties13.remove((java.lang.Object) int27);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties13.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet33 = properties30.stringPropertyNames();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        boolean boolean39 = properties34.containsValue((java.lang.Object) properties35);
        java.util.Collection<java.lang.Object> objCollection40 = properties34.values();
        java.util.Enumeration<?> wildcardEnumeration41 = properties34.propertyNames();
        java.lang.Object obj43 = properties30.put((java.lang.Object) wildcardEnumeration41, (java.lang.Object) 10.0d);
        java.lang.Object obj44 = properties2.put((java.lang.Object) objEntrySet29, (java.lang.Object) properties30);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection46 = properties45.values();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        properties45.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties45.keys();
        boolean boolean50 = properties30.containsValue((java.lang.Object) objEnumeration49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        java.util.Properties properties55 = atomikosProperties51.asProperties();
        java.lang.Object obj58 = properties55.setProperty("hi!", "");
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties55.elements();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet64 = properties61.stringPropertyNames();
        boolean boolean65 = properties60.containsValue((java.lang.Object) properties61);
        java.util.Collection<java.lang.Object> objCollection66 = properties60.values();
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        boolean boolean72 = properties68.isEmpty();
        java.util.Set<java.lang.Object> objSet73 = properties68.keySet();
        java.lang.Object obj74 = properties60.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet73);
        java.util.Set<java.lang.Object> objSet75 = properties60.keySet();
        java.util.Set<java.lang.Object> objSet76 = properties60.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setSerialJtaTransactions(false);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj82 = properties55.putIfAbsent((java.lang.Object) objSet76, (java.lang.Object) atomikosProperties77);
        java.lang.Object obj83 = properties1.put((java.lang.Object) properties30, (java.lang.Object) objSet76);
        java.util.Properties properties84 = new java.util.Properties(properties30);
        java.lang.String str85 = properties30.toString();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objSet75);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test4443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4443");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.lang.Object obj15 = properties3.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setSerialJtaTransactions(true);
        boolean boolean28 = properties3.equals((java.lang.Object) atomikosProperties16);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.elements();
        boolean boolean33 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties29.elements();
        boolean boolean35 = properties3.containsKey((java.lang.Object) properties29);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        boolean boolean40 = properties36.isEmpty();
        java.util.Set<java.lang.Object> objSet41 = properties36.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties36.keys();
        boolean boolean44 = properties36.equals((java.lang.Object) "");
        boolean boolean45 = properties3.containsValue((java.lang.Object) properties36);
        boolean boolean46 = properties36.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties36.elements();
        java.lang.Object obj50 = properties36.setProperty("{hi!=[], {}={}}", "{hi!=[], {}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        atomikosProperties51.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties57 = atomikosProperties51.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        boolean boolean61 = atomikosProperties58.isSerialJtaTransactions();
        atomikosProperties58.setTransactionManagerUniqueName("hi!");
        boolean boolean64 = atomikosProperties58.isEnableLogging();
        java.lang.String str65 = atomikosProperties58.getTransactionManagerUniqueName();
        atomikosProperties58.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties75 = atomikosProperties68.asProperties();
        int int76 = atomikosProperties68.getMaxActives();
        atomikosProperties68.setService("hi!");
        long long79 = atomikosProperties68.getMaxTimeout();
        atomikosProperties68.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties82 = atomikosProperties68.asProperties();
        java.lang.Object obj83 = properties57.getOrDefault((java.lang.Object) atomikosProperties58, (java.lang.Object) properties82);
        boolean boolean84 = atomikosProperties58.isEnableLogging();
        atomikosProperties58.setMaxActives((int) 'a');
        boolean boolean87 = atomikosProperties58.isEnableLogging();
        atomikosProperties58.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj90 = null;
        java.lang.Object obj91 = properties36.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", obj90);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 50 + "'", int76 == 50);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 300000L + "'", long79 == 300000L);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNotNull(obj83);
// flaky:         org.junit.Assert.assertEquals(obj83.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test4444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4444");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean18 = atomikosProperties0.isForceShutdownOnVmExit();
        int int19 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
    }

    @Test
    public void test4445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4445");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int17 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test4446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4446");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        boolean boolean7 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet8 = properties3.keySet();
        boolean boolean9 = properties3.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties3.entrySet();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        boolean boolean14 = properties11.isEmpty();
        java.lang.Object obj17 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        boolean boolean21 = properties3.remove((java.lang.Object) properties11, (java.lang.Object) atomikosProperties18);
        boolean boolean22 = properties0.equals((java.lang.Object) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties0.elements();
        java.util.Collection<java.lang.Object> objCollection24 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties0.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties0.keySet();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties27.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setMaxTimeout((long) '#');
        boolean boolean41 = atomikosProperties34.isForceShutdownOnVmExit();
        java.lang.Object obj42 = properties27.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties34);
        int int43 = atomikosProperties34.getMaxActives();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.remove((java.lang.Object) 0.0d);
        boolean boolean48 = properties44.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj51 = properties44.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet56 = properties53.stringPropertyNames();
        boolean boolean57 = properties52.containsValue((java.lang.Object) properties53);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.util.Set<java.lang.Object> objSet65 = properties60.keySet();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet65);
        java.util.Set<java.lang.Object> objSet67 = properties52.keySet();
        boolean boolean68 = properties44.containsKey((java.lang.Object) properties52);
        java.util.Set<java.lang.String> strSet69 = properties52.stringPropertyNames();
        java.lang.String str70 = properties52.toString();
        boolean boolean71 = properties0.remove((java.lang.Object) atomikosProperties34, (java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setMaxTimeout((long) '#');
        boolean boolean79 = atomikosProperties72.isEnableLogging();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setEnableLogging(true);
        atomikosProperties72.setLogBaseDir("");
        java.lang.String str86 = atomikosProperties72.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties87.setSerialJtaTransactions(false);
        atomikosProperties87.setThreadedTwoPhaseCommit(true);
        atomikosProperties87.setMaxTimeout((long) '#');
        boolean boolean94 = atomikosProperties87.isForceShutdownOnVmExit();
        long long95 = atomikosProperties87.getCheckpointInterval();
        atomikosProperties87.setMaxActives((int) (byte) 0);
        boolean boolean98 = atomikosProperties87.isEnableLogging();
        java.lang.Object obj99 = properties52.replace((java.lang.Object) atomikosProperties72, (java.lang.Object) atomikosProperties87);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{hi!=[]}" + "'", str70, "{hi!=[]}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 500L + "'", long95 == 500L);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNull(obj99);
    }

    @Test
    public void test4447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4447");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setForceShutdownOnVmExit(true);
        java.util.Properties properties27 = atomikosProperties16.asProperties();
        boolean boolean28 = properties0.containsValue((java.lang.Object) atomikosProperties16);
        java.lang.String str29 = atomikosProperties16.getLogBaseName();
        atomikosProperties16.setMaxActives(50);
        atomikosProperties16.setTransactionManagerUniqueName("{tmlog=}");
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setEnableLogging(false);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
    }

    @Test
    public void test4448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4448");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties19.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.lang.Class<?> wildcardClass23 = properties19.getClass();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test4449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4449");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties7.isSerialJtaTransactions();
        atomikosProperties7.setTransactionManagerUniqueName("hi!");
        boolean boolean13 = atomikosProperties7.isEnableLogging();
        java.lang.String str14 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setCheckpointInterval(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        int int25 = atomikosProperties17.getMaxActives();
        atomikosProperties17.setService("hi!");
        long long28 = atomikosProperties17.getMaxTimeout();
        atomikosProperties17.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties31 = atomikosProperties17.asProperties();
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) atomikosProperties7, (java.lang.Object) properties31);
        java.util.Properties properties33 = atomikosProperties7.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.keys();
        java.util.Properties properties35 = new java.util.Properties(properties33);
        java.lang.String str38 = properties35.getProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(obj32);
// flaky:         org.junit.Assert.assertEquals(obj32.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=hi!, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str38, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test4450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4450");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test4451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4451");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration3 = properties0.propertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        boolean boolean7 = properties4.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties4.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        int int18 = atomikosProperties10.getMaxActives();
        java.lang.Object obj19 = properties4.remove((java.lang.Object) int18);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties4.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.lang.String str25 = properties21.getProperty("");
        java.lang.Object obj26 = properties0.getOrDefault((java.lang.Object) properties4, (java.lang.Object) str25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties0.keys();
        properties0.clear();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.remove((java.lang.Object) 0.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties32.elements();
        boolean boolean36 = properties32.isEmpty();
        java.util.Set<java.lang.Object> objSet37 = properties32.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties32.entrySet();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.elements();
        boolean boolean45 = properties41.isEmpty();
        java.util.Set<java.lang.Object> objSet46 = properties41.keySet();
        boolean boolean47 = properties41.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        boolean boolean55 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet62 = properties59.stringPropertyNames();
        boolean boolean63 = properties58.containsValue((java.lang.Object) properties59);
        java.util.Collection<java.lang.Object> objCollection64 = properties58.values();
        java.lang.Object obj65 = properties41.replace((java.lang.Object) atomikosProperties48, (java.lang.Object) objCollection64);
        boolean boolean67 = properties32.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection64, (java.lang.Object) 10.0d);
        java.util.Properties properties68 = new java.util.Properties();
        java.lang.Object obj70 = properties68.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties68.elements();
        int int72 = properties68.size();
        java.util.Properties properties73 = new java.util.Properties(properties68);
        java.util.Set<java.lang.String> strSet74 = properties68.stringPropertyNames();
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties75.elements();
        boolean boolean79 = properties75.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties75.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setSerialJtaTransactions(false);
        atomikosProperties82.setThreadedTwoPhaseCommit(true);
        atomikosProperties82.setMaxTimeout((long) '#');
        boolean boolean89 = atomikosProperties82.isForceShutdownOnVmExit();
        java.lang.Object obj90 = properties75.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties82);
        boolean boolean91 = atomikosProperties82.isSerialJtaTransactions();
        java.lang.Object obj92 = properties32.replace((java.lang.Object) properties68, (java.lang.Object) boolean91);
        java.lang.Object obj93 = properties29.remove((java.lang.Object) properties68);
        boolean boolean94 = properties68.isEmpty();
        boolean boolean95 = properties0.containsValue((java.lang.Object) boolean94);
        java.util.Enumeration<?> wildcardEnumeration96 = properties0.propertyNames();
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream97, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(wildcardEnumeration3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration96);
    }

    @Test
    public void test4452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4452");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setMaxTimeout((long) '#');
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.Object obj15 = properties0.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties7);
        long long16 = atomikosProperties7.getDefaultJtaTimeout();
        atomikosProperties7.setLogBaseDir("{}");
        java.lang.String str19 = atomikosProperties7.getLogBaseDir();
        atomikosProperties7.setTransactionManagerUniqueName("{hi!=[], {}={}}");
        atomikosProperties7.setMaxTimeout((long) (short) 10);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
    }

    @Test
    public void test4453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4453");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration20 = properties17.propertyNames();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        boolean boolean24 = properties21.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties21.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties21.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setMaxTimeout((long) '#');
        boolean boolean34 = atomikosProperties27.isForceShutdownOnVmExit();
        int int35 = atomikosProperties27.getMaxActives();
        java.lang.Object obj36 = properties21.remove((java.lang.Object) int35);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties21.entrySet();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.remove((java.lang.Object) 0.0d);
        java.lang.String str42 = properties38.getProperty("");
        java.lang.Object obj43 = properties17.getOrDefault((java.lang.Object) properties21, (java.lang.Object) str42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties17.keys();
        properties17.clear();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        int int48 = properties46.size();
        java.util.Properties properties49 = new java.util.Properties(properties46);
        java.lang.Class<?> wildcardClass50 = properties49.getClass();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection55 = properties54.values();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties54.keys();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        boolean boolean61 = properties57.isEmpty();
        java.util.Set<java.lang.Object> objSet62 = properties57.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties57.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet64 = properties57.entrySet();
        java.lang.Object obj65 = properties51.put((java.lang.Object) properties54, (java.lang.Object) properties57);
        java.lang.String str67 = properties54.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        long long75 = atomikosProperties68.getMaxTimeout();
        boolean boolean76 = properties54.containsValue((java.lang.Object) atomikosProperties68);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties54.elements();
        java.util.Set<java.lang.String> strSet78 = properties54.stringPropertyNames();
        java.util.Set<java.lang.String> strSet79 = properties54.stringPropertyNames();
        java.lang.Object obj80 = properties17.getOrDefault((java.lang.Object) wildcardClass50, (java.lang.Object) properties54);
        java.util.Properties properties81 = new java.util.Properties();
        java.lang.Object obj83 = properties81.remove((java.lang.Object) 0.0d);
        java.util.Properties properties84 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection85 = properties84.values();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties84.keys();
        java.util.Properties properties87 = new java.util.Properties();
        java.lang.Object obj89 = properties87.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties87.elements();
        boolean boolean91 = properties87.isEmpty();
        java.util.Set<java.lang.Object> objSet92 = properties87.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration93 = properties87.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet94 = properties87.entrySet();
        java.lang.Object obj95 = properties81.put((java.lang.Object) properties84, (java.lang.Object) properties87);
        java.util.Enumeration<java.lang.Object> objEnumeration96 = properties81.keys();
        java.util.Set<java.lang.Object> objSet97 = properties81.keySet();
        boolean boolean98 = properties16.remove((java.lang.Object) properties17, (java.lang.Object) objSet97);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEntrySet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 300000L + "'", long75 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertNotNull(objEnumeration93);
        org.junit.Assert.assertNotNull(objEntrySet94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(objEnumeration96);
        org.junit.Assert.assertNotNull(objSet97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test4454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4454");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives((int) (byte) 0);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseName("{hi!=[]}");
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test4455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4455");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 10);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(0);
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test4456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4456");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        int int8 = atomikosProperties0.getMaxActives();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        long long10 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test4457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4457");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        java.lang.Object obj14 = properties0.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet13);
        java.util.Set<java.lang.Object> objSet15 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet16 = properties0.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties0.entrySet();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        int int30 = atomikosProperties22.getMaxActives();
        atomikosProperties22.setService("hi!");
        java.lang.Object obj33 = properties18.get((java.lang.Object) atomikosProperties22);
        boolean boolean34 = properties0.containsValue((java.lang.Object) atomikosProperties22);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties0.keys();
        java.lang.String str37 = properties0.toString();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.util.Collection<java.lang.Object> objCollection40 = properties38.values();
        java.util.Properties properties41 = new java.util.Properties(properties38);
        properties41.clear();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        int int47 = properties43.size();
        java.util.Properties properties48 = new java.util.Properties(properties43);
        java.util.Set<java.lang.String> strSet49 = properties43.stringPropertyNames();
        java.util.Set<java.lang.String> strSet50 = properties43.stringPropertyNames();
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.remove((java.lang.Object) 0.0d);
        boolean boolean54 = properties51.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties51.elements();
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.remove((java.lang.Object) 0.0d);
        boolean boolean59 = properties56.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties56.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties56.elements();
        java.lang.Object obj62 = properties43.replace((java.lang.Object) objEnumeration55, (java.lang.Object) objEnumeration61);
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Properties properties65 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setSerialJtaTransactions(false);
        boolean boolean69 = atomikosProperties66.isSerialJtaTransactions();
        java.lang.String str70 = atomikosProperties66.getService();
        boolean boolean71 = atomikosProperties66.isEnableLogging();
        atomikosProperties66.setCheckpointInterval((long) (byte) 100);
        atomikosProperties66.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties66.setMaxTimeout(10000L);
        atomikosProperties66.setEnableLogging(false);
        long long80 = atomikosProperties66.getDefaultJtaTimeout();
        atomikosProperties66.setLogBaseName("hi!");
        long long83 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties84 = atomikosProperties66.asProperties();
        java.lang.Object obj85 = properties65.remove((java.lang.Object) atomikosProperties66);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties65.elements();
        java.io.InputStream inputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties65.loadFromXML(inputStream87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{hi!=[]}" + "'", str37, "{hi!=[]}");
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10000L + "'", long80 == 10000L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10000L + "'", long83 == 10000L);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEnumeration86);
    }

    @Test
    public void test4458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4458");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setLogBaseName("{=hi!}");
        long long12 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        long long23 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setMaxTimeout((long) (byte) 100);
        atomikosProperties16.setThreadedTwoPhaseCommit(false);
        atomikosProperties16.setForceShutdownOnVmExit(false);
        boolean boolean30 = properties15.containsValue((java.lang.Object) false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test4459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4459");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        int int4 = properties0.size();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties0.containsKey((java.lang.Object) objSet10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet24 = properties21.stringPropertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Enumeration<?> wildcardEnumeration32 = properties25.propertyNames();
        java.lang.Object obj34 = properties21.put((java.lang.Object) wildcardEnumeration32, (java.lang.Object) 10.0d);
        java.lang.String str36 = properties21.getProperty("{=hi!}");
        java.lang.Object obj37 = properties0.put((java.lang.Object) atomikosProperties12, (java.lang.Object) "{=hi!}");
        boolean boolean38 = atomikosProperties12.isForceShutdownOnVmExit();
        boolean boolean39 = atomikosProperties12.isSerialJtaTransactions();
        atomikosProperties12.setService("{{}={}}");
        atomikosProperties12.setSerialJtaTransactions(true);
        java.lang.String str44 = atomikosProperties12.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test4460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4460");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet17 = properties14.stringPropertyNames();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet22 = properties19.stringPropertyNames();
        boolean boolean23 = properties18.containsValue((java.lang.Object) properties19);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        java.util.Enumeration<?> wildcardEnumeration25 = properties18.propertyNames();
        java.lang.Object obj27 = properties14.put((java.lang.Object) wildcardEnumeration25, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        boolean boolean35 = atomikosProperties28.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj43 = properties14.getOrDefault((java.lang.Object) boolean35, (java.lang.Object) atomikosProperties36);
        boolean boolean44 = properties0.remove((java.lang.Object) atomikosProperties8, obj43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean48 = atomikosProperties45.isSerialJtaTransactions();
        java.lang.String str49 = atomikosProperties45.getService();
        boolean boolean50 = atomikosProperties45.isEnableLogging();
        java.util.Properties properties51 = atomikosProperties45.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.Object obj53 = properties0.remove((java.lang.Object) objEnumeration52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties0.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration54);
    }

    @Test
    public void test4461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4461");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.lang.String str20 = properties0.getProperty("tmlog");
        java.util.Set<java.lang.Object> objSet21 = properties0.keySet();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties35 = atomikosProperties28.asProperties();
        int int36 = atomikosProperties28.getMaxActives();
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties37.elements();
        boolean boolean41 = properties37.isEmpty();
        java.util.Set<java.lang.Object> objSet42 = properties37.keySet();
        boolean boolean44 = properties37.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj45 = properties22.put((java.lang.Object) atomikosProperties28, (java.lang.Object) properties37);
        properties22.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties22.elements();
        java.util.Properties properties48 = new java.util.Properties(properties22);
        boolean boolean49 = properties0.containsKey((java.lang.Object) properties22);
        java.io.PrintWriter printWriter50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test4462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4462");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean3 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.elements();
        boolean boolean16 = properties12.isEmpty();
        java.util.Set<java.lang.Object> objSet17 = properties12.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties12.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties12.entrySet();
        java.lang.Object obj20 = properties6.put((java.lang.Object) properties9, (java.lang.Object) properties12);
        java.lang.Object obj21 = properties9.clone();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.Object obj23 = properties9.clone();
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(outputStream24, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
    }

    @Test
    public void test4463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4463");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        boolean boolean15 = properties10.containsValue((java.lang.Object) properties11);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties18.elements();
        boolean boolean22 = properties18.isEmpty();
        java.util.Set<java.lang.Object> objSet23 = properties18.keySet();
        java.lang.Object obj24 = properties10.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet23);
        java.util.Set<java.lang.Object> objSet25 = properties10.keySet();
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) properties10, (java.lang.Object) (short) 10);
        java.util.Collection<java.lang.Object> objCollection28 = properties0.values();
        int int29 = properties0.size();
        java.util.Properties properties30 = new java.util.Properties();
        boolean boolean32 = properties30.contains((java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.lang.Object> objSet38 = properties33.keySet();
        boolean boolean39 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties33.entrySet();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        boolean boolean44 = properties41.isEmpty();
        java.lang.Object obj47 = properties41.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        boolean boolean51 = properties33.remove((java.lang.Object) properties41, (java.lang.Object) atomikosProperties48);
        boolean boolean52 = properties30.equals((java.lang.Object) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties30.elements();
        java.util.Collection<java.lang.Object> objCollection54 = properties30.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setEnableLogging(true);
        java.lang.String str67 = atomikosProperties55.getTransactionManagerUniqueName();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        java.lang.String str70 = atomikosProperties55.getService();
        java.lang.Object obj71 = properties0.replace((java.lang.Object) properties30, (java.lang.Object) atomikosProperties55);
        java.lang.Object obj74 = properties30.setProperty("{{}={}}", "{true=true}");
        java.util.Properties properties75 = new java.util.Properties();
        java.lang.Object obj77 = properties75.remove((java.lang.Object) 0.0d);
        boolean boolean78 = properties75.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties75.elements();
        java.lang.Object obj82 = properties75.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean83 = properties30.contains((java.lang.Object) properties75);
        java.lang.String str85 = properties75.getProperty("{{}=tmlog}");
        boolean boolean86 = properties75.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test4464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4464");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(1L);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean16 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test4465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4465");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setMaxActives((int) (byte) 100);
        atomikosProperties0.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test4466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4466");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Properties properties2 = new java.util.Properties();
        java.lang.Object obj4 = properties2.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet5 = properties2.stringPropertyNames();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        boolean boolean11 = properties6.containsValue((java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection12 = properties6.values();
        java.util.Enumeration<?> wildcardEnumeration13 = properties6.propertyNames();
        java.lang.Object obj15 = properties2.put((java.lang.Object) wildcardEnumeration13, (java.lang.Object) 10.0d);
        boolean boolean16 = properties0.equals((java.lang.Object) 10.0d);
        java.util.Enumeration<?> wildcardEnumeration17 = properties0.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties0.keys();
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream19, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration18);
    }

    @Test
    public void test4467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4467");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        int int20 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str26 = atomikosProperties22.getService();
        boolean boolean27 = atomikosProperties22.isEnableLogging();
        java.lang.String str28 = atomikosProperties22.getTransactionManagerUniqueName();
        boolean boolean29 = properties19.remove((java.lang.Object) (byte) 1, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setMaxActives((int) (short) -1);
        boolean boolean32 = atomikosProperties22.isForceShutdownOnVmExit();
        boolean boolean33 = atomikosProperties22.isEnableLogging();
        java.lang.String str34 = atomikosProperties22.getService();
        java.lang.String str35 = atomikosProperties22.getService();
        java.lang.String str36 = atomikosProperties22.getLogBaseDir();
        atomikosProperties22.setEnableLogging(true);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test4468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4468");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.lang.String str12 = atomikosProperties0.getService();
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test4469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4469");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        boolean boolean7 = properties0.isEmpty();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        boolean boolean14 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties8.entrySet();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        boolean boolean19 = properties16.isEmpty();
        java.lang.Object obj22 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setSerialJtaTransactions(false);
        boolean boolean26 = properties8.remove((java.lang.Object) properties16, (java.lang.Object) atomikosProperties23);
        boolean boolean27 = atomikosProperties23.isSerialJtaTransactions();
        atomikosProperties23.setService("{=hi!}");
        boolean boolean30 = properties0.containsKey((java.lang.Object) atomikosProperties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxTimeout((long) '#');
        boolean boolean38 = atomikosProperties31.isEnableLogging();
        atomikosProperties31.setCheckpointInterval((long) 100);
        java.lang.String str41 = atomikosProperties31.getTransactionManagerUniqueName();
        atomikosProperties31.setCheckpointInterval((long) (byte) 100);
        java.util.Properties properties44 = atomikosProperties31.asProperties();
        java.util.Set<java.lang.String> strSet45 = properties44.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        boolean boolean49 = atomikosProperties46.isSerialJtaTransactions();
        java.lang.String str50 = atomikosProperties46.getService();
        boolean boolean51 = atomikosProperties46.isEnableLogging();
        java.util.Properties properties52 = atomikosProperties46.asProperties();
        java.util.Set<java.lang.String> strSet53 = properties52.stringPropertyNames();
        boolean boolean54 = properties0.remove((java.lang.Object) strSet45, (java.lang.Object) strSet53);
        java.io.Reader reader55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test4470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4470");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.util.Properties properties24 = atomikosProperties6.asProperties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean29 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties25.entrySet();
        java.util.Set<java.lang.String> strSet32 = properties25.stringPropertyNames();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties33.elements();
        boolean boolean37 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties33.entrySet();
        boolean boolean39 = properties25.contains((java.lang.Object) properties33);
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties46.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.lang.Object obj54 = properties40.put((java.lang.Object) properties43, (java.lang.Object) properties46);
        java.lang.Object obj55 = properties43.clone();
        boolean boolean56 = properties25.containsKey((java.lang.Object) properties43);
        java.lang.Object obj57 = properties43.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties43.keys();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties59.elements();
        boolean boolean63 = properties59.isEmpty();
        java.util.Set<java.lang.Object> objSet64 = properties59.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties59.keys();
        java.lang.String str67 = properties59.getProperty("hi!");
        java.util.Enumeration<?> wildcardEnumeration68 = properties59.propertyNames();
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties69.elements();
        boolean boolean73 = properties69.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties69.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet75 = properties69.entrySet();
        java.util.Set<java.lang.String> strSet76 = properties69.stringPropertyNames();
        boolean boolean77 = properties69.isEmpty();
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        java.util.Set<java.lang.String> strSet79 = properties69.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties69.elements();
        java.lang.Object obj81 = properties24.putIfAbsent((java.lang.Object) properties43, (java.lang.Object) objEnumeration80);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(wildcardEnumeration68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEntrySet75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(obj81);
    }

    @Test
    public void test4471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4471");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        long long9 = atomikosProperties0.getMaxTimeout();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long13 = atomikosProperties0.getCheckpointInterval();
        long long14 = atomikosProperties0.getCheckpointInterval();
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
    }

    @Test
    public void test4472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4472");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection1 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties0.keys();
        java.lang.Object obj5 = properties0.setProperty("{}", "{}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        boolean boolean12 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties7.getTransactionManagerUniqueName();
        java.lang.String str14 = atomikosProperties7.getService();
        atomikosProperties7.setCheckpointInterval(0L);
        atomikosProperties7.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setDefaultJtaTimeout((long) (short) -1);
        boolean boolean24 = properties0.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setMaxTimeout((long) '#');
        boolean boolean32 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setMaxActives((int) (byte) 100);
        atomikosProperties25.setForceShutdownOnVmExit(false);
        boolean boolean39 = atomikosProperties25.isThreadedTwoPhaseCommit();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties40.elements();
        int int44 = properties40.size();
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties45.elements();
        boolean boolean49 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet50 = properties45.keySet();
        boolean boolean51 = properties40.containsKey((java.lang.Object) objSet50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties40.keys();
        int int53 = properties40.size();
        java.lang.Object obj54 = properties0.put((java.lang.Object) atomikosProperties25, (java.lang.Object) properties40);
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet58 = properties55.stringPropertyNames();
        java.lang.String str59 = properties55.toString();
        java.util.Properties properties60 = new java.util.Properties();
        java.lang.Object obj62 = properties60.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties60.elements();
        boolean boolean64 = properties60.isEmpty();
        java.lang.Object obj67 = properties60.setProperty("tmlog", "");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet69 = properties55.entrySet();
        java.lang.String str70 = properties55.toString();
        java.util.Properties properties71 = new java.util.Properties();
        java.lang.Object obj73 = properties71.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties71.elements();
        boolean boolean75 = properties71.isEmpty();
        java.util.Set<java.lang.Object> objSet76 = properties71.keySet();
        boolean boolean77 = properties71.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties71.entrySet();
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.remove((java.lang.Object) 0.0d);
        boolean boolean82 = properties79.isEmpty();
        java.lang.Object obj85 = properties79.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setSerialJtaTransactions(false);
        boolean boolean89 = properties71.remove((java.lang.Object) properties79, (java.lang.Object) atomikosProperties86);
        atomikosProperties86.setSerialJtaTransactions(false);
        java.lang.Object obj92 = properties0.replace((java.lang.Object) str70, (java.lang.Object) atomikosProperties86);
        long long93 = atomikosProperties86.getMaxTimeout();
        org.junit.Assert.assertNotNull(objCollection1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{}" + "'", str59, "{}");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEntrySet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{tmlog=}" + "'", str70, "{tmlog=}");
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 300000L + "'", long93 == 300000L);
    }

    @Test
    public void test4473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4473");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test4474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4474");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setMaxTimeout((long) '#');
        boolean boolean21 = atomikosProperties14.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj29 = properties0.getOrDefault((java.lang.Object) boolean21, (java.lang.Object) atomikosProperties22);
        java.util.Set<java.lang.String> strSet30 = properties0.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        long long38 = atomikosProperties31.getMaxTimeout();
        java.lang.String str39 = atomikosProperties31.getLogBaseName();
        boolean boolean40 = atomikosProperties31.isSerialJtaTransactions();
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        boolean boolean50 = properties45.containsValue((java.lang.Object) properties46);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Enumeration<?> wildcardEnumeration52 = properties45.propertyNames();
        java.lang.Object obj54 = properties41.put((java.lang.Object) wildcardEnumeration52, (java.lang.Object) 10.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setMaxTimeout((long) '#');
        boolean boolean62 = atomikosProperties55.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj70 = properties41.getOrDefault((java.lang.Object) boolean62, (java.lang.Object) atomikosProperties63);
        long long71 = atomikosProperties63.getMaxTimeout();
        java.lang.String str72 = atomikosProperties63.getTransactionManagerUniqueName();
        java.lang.Object obj73 = properties0.getOrDefault((java.lang.Object) atomikosProperties31, (java.lang.Object) str72);
        atomikosProperties31.setDefaultJtaTimeout(100L);
        long long76 = atomikosProperties31.getCheckpointInterval();
        atomikosProperties31.setMaxTimeout((long) 0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 500L + "'", long76 == 500L);
    }

    @Test
    public void test4475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4475");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties27 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        atomikosProperties28.setMaxTimeout((long) '#');
        long long35 = atomikosProperties28.getCheckpointInterval();
        java.lang.String str36 = atomikosProperties28.getTransactionManagerUniqueName();
        atomikosProperties28.setTransactionManagerUniqueName("{=hi!}");
        atomikosProperties28.setSerialJtaTransactions(false);
        java.util.Properties properties41 = atomikosProperties28.asProperties();
        atomikosProperties28.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setMaxTimeout((long) '#');
        boolean boolean51 = atomikosProperties44.isEnableLogging();
        atomikosProperties44.setMaxActives((int) '#');
        atomikosProperties44.setSerialJtaTransactions(true);
        boolean boolean56 = atomikosProperties44.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass57 = atomikosProperties44.getClass();
        java.lang.Object obj58 = properties27.getOrDefault((java.lang.Object) atomikosProperties28, (java.lang.Object) atomikosProperties44);
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.lang.String str63 = atomikosProperties28.getService();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test4476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4476");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        int int8 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        java.util.Set<java.lang.String> strSet17 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setSerialJtaTransactions(false);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setMaxTimeout((long) '#');
        boolean boolean25 = atomikosProperties18.isEnableLogging();
        int int26 = atomikosProperties18.getMaxActives();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        boolean boolean30 = properties27.isEmpty();
        java.lang.Object obj33 = properties27.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet34 = properties27.stringPropertyNames();
        java.lang.Object obj35 = properties16.putIfAbsent((java.lang.Object) atomikosProperties18, (java.lang.Object) strSet34);
        boolean boolean37 = properties16.containsKey((java.lang.Object) 35);
        java.lang.Object obj38 = properties0.get((java.lang.Object) boolean37);
        java.io.Writer writer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer39, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.service={=hi!}, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test4477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4477");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setSerialJtaTransactions(false);
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        atomikosProperties3.setSerialJtaTransactions(false);
        java.lang.String str10 = atomikosProperties3.getService();
        boolean boolean11 = properties0.containsKey((java.lang.Object) atomikosProperties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setMaxTimeout((long) '#');
        boolean boolean19 = atomikosProperties12.isEnableLogging();
        atomikosProperties12.setCheckpointInterval((long) 100);
        atomikosProperties12.setForceShutdownOnVmExit(false);
        boolean boolean24 = properties0.containsValue((java.lang.Object) atomikosProperties12);
        atomikosProperties12.setService("{=hi!}");
        atomikosProperties12.setDefaultJtaTimeout(0L);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean31 = atomikosProperties12.isThreadedTwoPhaseCommit();
        java.util.Properties properties32 = atomikosProperties12.asProperties();
        atomikosProperties12.setLogBaseName("{{}={}}");
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
    }

    @Test
    public void test4478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4478");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.lang.Object> objSet14 = properties9.keySet();
        boolean boolean15 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isEnableLogging();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet30 = properties27.stringPropertyNames();
        boolean boolean31 = properties26.containsValue((java.lang.Object) properties27);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.lang.Object obj33 = properties9.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) objCollection32);
        boolean boolean35 = properties0.replace((java.lang.Object) 100.0d, (java.lang.Object) objCollection32, (java.lang.Object) 10.0d);
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties36.elements();
        int int40 = properties36.size();
        java.util.Properties properties41 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet42 = properties36.stringPropertyNames();
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        boolean boolean47 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties43.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setMaxTimeout((long) '#');
        boolean boolean57 = atomikosProperties50.isForceShutdownOnVmExit();
        java.lang.Object obj58 = properties43.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties50);
        boolean boolean59 = atomikosProperties50.isSerialJtaTransactions();
        java.lang.Object obj60 = properties0.replace((java.lang.Object) properties36, (java.lang.Object) boolean59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        atomikosProperties61.setThreadedTwoPhaseCommit(true);
        atomikosProperties61.setSerialJtaTransactions(false);
        java.lang.String str68 = atomikosProperties61.getService();
        boolean boolean69 = properties36.contains((java.lang.Object) atomikosProperties61);
        int int70 = properties36.size();
        java.lang.Object obj72 = properties36.get((java.lang.Object) (-1.0f));
        java.io.PrintWriter printWriter73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.list(printWriter73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test4479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4479");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setLogBaseName("{=hi!}");
        java.lang.String str7 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test4480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4480");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setLogBaseDir("{=hi!}");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        int int15 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test4481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4481");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties8.getService();
        boolean boolean13 = atomikosProperties8.isEnableLogging();
        atomikosProperties8.setCheckpointInterval((long) (byte) 100);
        java.lang.String str16 = atomikosProperties8.getLogBaseName();
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties8);
        java.lang.Object obj18 = properties0.clone();
        java.lang.String str20 = properties0.getProperty("{=hi!}");
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<?> wildcardEnumeration24 = properties21.propertyNames();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.remove((java.lang.Object) 0.0d);
        boolean boolean28 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties25.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setThreadedTwoPhaseCommit(true);
        atomikosProperties31.setMaxTimeout((long) '#');
        boolean boolean38 = atomikosProperties31.isForceShutdownOnVmExit();
        int int39 = atomikosProperties31.getMaxActives();
        java.lang.Object obj40 = properties25.remove((java.lang.Object) int39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties25.entrySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.lang.String str46 = properties42.getProperty("");
        java.lang.Object obj47 = properties21.getOrDefault((java.lang.Object) properties25, (java.lang.Object) str46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setSerialJtaTransactions(false);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setMaxTimeout((long) '#');
        boolean boolean55 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.setCheckpointInterval((long) 100);
        atomikosProperties48.setForceShutdownOnVmExit(false);
        boolean boolean60 = properties21.equals((java.lang.Object) atomikosProperties48);
        java.lang.Object obj61 = properties0.remove((java.lang.Object) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties21.keys();
        java.io.InputStream inputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.loadFromXML(inputStream63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
    }

    @Test
    public void test4482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4482");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives((int) 'a');
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        java.lang.String str19 = atomikosProperties0.getService();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long22 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
    }

    @Test
    public void test4483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4483");
        java.util.Properties properties0 = new java.util.Properties();
        boolean boolean2 = properties0.contains((java.lang.Object) 100.0d);
        java.lang.Object obj3 = null;
        boolean boolean4 = properties0.equals(obj3);
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Properties properties7 = new java.util.Properties(properties0);
        java.io.InputStream inputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEntrySet6);
    }

    @Test
    public void test4484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4484");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet7 = properties4.stringPropertyNames();
        java.lang.Object obj9 = properties0.put((java.lang.Object) strSet7, (java.lang.Object) 0.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setMaxTimeout((long) '#');
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setEnableLogging(true);
        atomikosProperties10.setLogBaseName("{}");
        long long24 = atomikosProperties10.getDefaultJtaTimeout();
        boolean boolean25 = properties0.containsKey((java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties(properties0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test4485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4485");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        int int14 = atomikosProperties6.getMaxActives();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean22 = properties15.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties15);
        java.lang.String str24 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setSerialJtaTransactions(false);
        java.lang.String str33 = atomikosProperties26.getService();
        atomikosProperties26.setMaxTimeout(1L);
        java.lang.String str36 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        boolean boolean44 = properties39.containsValue((java.lang.Object) properties40);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Enumeration<?> wildcardEnumeration46 = properties39.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties39.entrySet();
        java.lang.Object obj48 = properties0.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) objEntrySet47);
        atomikosProperties26.setForceShutdownOnVmExit(false);
        long long51 = atomikosProperties26.getCheckpointInterval();
        long long52 = atomikosProperties26.getMaxTimeout();
        atomikosProperties26.setSerialJtaTransactions(true);
        atomikosProperties26.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=100, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean57 = atomikosProperties26.isSerialJtaTransactions();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 500L + "'", long51 == 500L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 1L + "'", long52 == 1L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test4486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4486");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection4 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Properties properties6 = new java.util.Properties();
        java.lang.Object obj8 = properties6.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties6.elements();
        boolean boolean10 = properties6.isEmpty();
        java.util.Set<java.lang.Object> objSet11 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties6.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties6.entrySet();
        java.lang.Object obj14 = properties0.put((java.lang.Object) properties3, (java.lang.Object) properties6);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        boolean boolean20 = properties15.containsValue((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        java.lang.Object obj29 = properties15.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet28);
        java.util.Set<java.lang.Object> objSet30 = properties15.keySet();
        java.util.Set<java.lang.Object> objSet31 = properties15.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties15.entrySet();
        java.lang.Object obj33 = properties3.remove((java.lang.Object) objEntrySet32);
        java.lang.String str34 = properties3.toString();
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        java.lang.String str39 = properties35.toString();
        java.lang.String str40 = properties35.toString();
        java.util.Set<java.lang.Object> objSet41 = properties35.keySet();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj44 = properties42.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.elements();
        boolean boolean46 = properties42.isEmpty();
        java.util.Set<java.lang.Object> objSet47 = properties42.keySet();
        boolean boolean48 = properties42.isEmpty();
        java.lang.Object obj49 = properties3.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) boolean48);
        java.util.Set<java.lang.String> strSet50 = properties3.stringPropertyNames();
        java.util.Set<java.lang.String> strSet51 = properties3.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet51);
    }

    @Test
    public void test4487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4487");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.lang.String str8 = properties0.getProperty("hi!");
        java.lang.String str10 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setEnableLogging(false);
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties11);
        java.lang.Object obj21 = properties0.setProperty("hi!", "");
        int int22 = properties0.size();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setMaxTimeout((long) '#');
        boolean boolean37 = atomikosProperties30.isForceShutdownOnVmExit();
        java.lang.Object obj38 = properties23.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties30);
        boolean boolean39 = atomikosProperties30.isSerialJtaTransactions();
        boolean boolean40 = properties0.containsValue((java.lang.Object) boolean39);
        java.util.Set<java.lang.Object> objSet41 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        long long49 = atomikosProperties42.getCheckpointInterval();
        java.lang.String str50 = atomikosProperties42.getTransactionManagerUniqueName();
        atomikosProperties42.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Set<java.lang.String> strSet54 = properties53.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setSerialJtaTransactions(false);
        java.lang.String str62 = atomikosProperties55.getService();
        java.lang.String str63 = atomikosProperties55.getLogBaseDir();
        java.util.Properties properties64 = atomikosProperties55.asProperties();
        java.lang.Object obj65 = properties0.replace((java.lang.Object) strSet54, (java.lang.Object) properties64);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties64.entrySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 500L + "'", long49 == 500L);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEntrySet66);
    }

    @Test
    public void test4488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4488");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setMaxTimeout((long) '#');
        boolean boolean16 = atomikosProperties9.isEnableLogging();
        int int17 = atomikosProperties9.getMaxActives();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        boolean boolean21 = properties18.isEmpty();
        java.lang.Object obj24 = properties18.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet25 = properties18.stringPropertyNames();
        java.lang.Object obj26 = properties7.putIfAbsent((java.lang.Object) atomikosProperties9, (java.lang.Object) strSet25);
        long long27 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        atomikosProperties9.setMaxTimeout((long) '#');
        atomikosProperties9.setService("{true=class org.springframework.boot.jta.atomikos.AtomikosProperties}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
    }

    @Test
    public void test4489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4489");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties();
        java.lang.Object obj3 = properties1.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties0.containsValue((java.lang.Object) properties1);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        java.util.Enumeration<?> wildcardEnumeration7 = properties0.propertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties8.elements();
        boolean boolean12 = properties8.isEmpty();
        java.util.Set<java.lang.Object> objSet13 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        int int22 = atomikosProperties14.getMaxActives();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        boolean boolean27 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        boolean boolean30 = properties23.containsKey((java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties8.put((java.lang.Object) atomikosProperties14, (java.lang.Object) properties23);
        java.lang.String str32 = properties8.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties8.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setSerialJtaTransactions(false);
        java.lang.String str41 = atomikosProperties34.getService();
        atomikosProperties34.setMaxTimeout(1L);
        java.lang.String str44 = atomikosProperties34.getTransactionManagerUniqueName();
        atomikosProperties34.setTransactionManagerUniqueName("{=hi!}");
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet51 = properties48.stringPropertyNames();
        boolean boolean52 = properties47.containsValue((java.lang.Object) properties48);
        java.util.Collection<java.lang.Object> objCollection53 = properties47.values();
        java.util.Enumeration<?> wildcardEnumeration54 = properties47.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet55 = properties47.entrySet();
        java.lang.Object obj56 = properties8.getOrDefault((java.lang.Object) atomikosProperties34, (java.lang.Object) objEntrySet55);
        atomikosProperties34.setForceShutdownOnVmExit(false);
        long long59 = atomikosProperties34.getCheckpointInterval();
        long long60 = atomikosProperties34.getMaxTimeout();
        boolean boolean61 = properties0.contains((java.lang.Object) long60);
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream62, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertNotNull(objEntrySet55);
        org.junit.Assert.assertNotNull(obj56);
// flaky:         org.junit.Assert.assertEquals(obj56.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 500L + "'", long59 == 500L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test4490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4490");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxActives(0);
        int int14 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test4491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4491");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet3 = properties0.stringPropertyNames();
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet8 = properties5.stringPropertyNames();
        boolean boolean9 = properties4.containsValue((java.lang.Object) properties5);
        java.util.Collection<java.lang.Object> objCollection10 = properties4.values();
        java.util.Enumeration<?> wildcardEnumeration11 = properties4.propertyNames();
        java.lang.Object obj13 = properties0.put((java.lang.Object) wildcardEnumeration11, (java.lang.Object) 10.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties0.elements();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.elements();
        boolean boolean19 = properties15.isEmpty();
        java.util.Set<java.lang.Object> objSet20 = properties15.keySet();
        boolean boolean21 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setSerialJtaTransactions(false);
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        atomikosProperties22.setMaxTimeout((long) '#');
        boolean boolean29 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties15.replace((java.lang.Object) atomikosProperties22, (java.lang.Object) objCollection38);
        java.lang.Object obj40 = properties0.get((java.lang.Object) properties15);
        int int41 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setMaxTimeout((long) '#');
        java.lang.String str49 = atomikosProperties42.getLogBaseDir();
        atomikosProperties42.setMaxActives(1);
        atomikosProperties42.setService("hi!");
        atomikosProperties42.setTransactionManagerUniqueName("{tmlog=}");
        java.util.Properties properties56 = atomikosProperties42.asProperties();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj59 = properties57.remove((java.lang.Object) 0.0d);
        boolean boolean60 = properties57.isEmpty();
        java.lang.Object obj63 = properties57.setProperty("", "hi!");
        java.util.Properties properties64 = new java.util.Properties();
        java.lang.Object obj66 = properties64.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties64.elements();
        boolean boolean68 = properties64.isEmpty();
        java.util.Set<java.lang.Object> objSet69 = properties64.keySet();
        boolean boolean70 = properties64.isEmpty();
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection72 = properties71.values();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties71.keys();
        java.lang.Object obj74 = properties64.remove((java.lang.Object) properties71);
        java.lang.Object obj75 = properties57.get((java.lang.Object) properties71);
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        boolean boolean77 = properties0.containsValue((java.lang.Object) properties57);
        java.io.InputStream inputStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(wildcardEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test4492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4492");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        long long8 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass10 = atomikosProperties0.getClass();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 35L + "'", long8 == 35L);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test4493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4493");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties0.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties14.elements();
        boolean boolean18 = properties14.isEmpty();
        java.util.Set<java.lang.Object> objSet19 = properties14.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties14.entrySet();
        java.lang.Object obj22 = properties8.put((java.lang.Object) properties11, (java.lang.Object) properties14);
        java.lang.String str24 = properties11.getProperty("{=hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        long long32 = atomikosProperties25.getMaxTimeout();
        boolean boolean33 = properties11.containsValue((java.lang.Object) atomikosProperties25);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties11.elements();
        boolean boolean35 = properties0.contains((java.lang.Object) objEnumeration34);
        java.util.Properties properties36 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet37 = properties0.keySet();
        java.util.Set<java.lang.Object> objSet38 = properties0.keySet();
        java.io.Writer writer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer39, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, hi!=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(objSet38);
    }

    @Test
    public void test4494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4494");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj7 = properties0.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean11 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setTransactionManagerUniqueName("hi!");
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str18 = atomikosProperties8.getTransactionManagerUniqueName();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet23 = properties20.stringPropertyNames();
        boolean boolean24 = properties19.containsValue((java.lang.Object) properties20);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.util.Set<java.lang.Object> objSet32 = properties27.keySet();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet32);
        java.util.Set<java.lang.Object> objSet34 = properties19.keySet();
        java.util.Set<java.lang.Object> objSet35 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties19.entrySet();
        java.util.Set<java.lang.Object> objSet37 = properties19.keySet();
        java.lang.Object obj38 = properties0.replace((java.lang.Object) atomikosProperties8, (java.lang.Object) properties19);
        java.util.Properties properties39 = atomikosProperties8.asProperties();
        boolean boolean40 = atomikosProperties8.isSerialJtaTransactions();
        java.lang.String str41 = atomikosProperties8.getLogBaseDir();
        java.lang.String str42 = atomikosProperties8.getService();
        boolean boolean43 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setMaxTimeout(2L);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test4495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4495");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        boolean boolean4 = properties0.isEmpty();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        boolean boolean6 = properties0.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.remove((java.lang.Object) 0.0d);
        boolean boolean11 = properties8.isEmpty();
        java.lang.Object obj14 = properties8.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setSerialJtaTransactions(false);
        boolean boolean18 = properties0.remove((java.lang.Object) properties8, (java.lang.Object) atomikosProperties15);
        java.util.Properties properties19 = new java.util.Properties();
        boolean boolean21 = properties19.contains((java.lang.Object) 100.0d);
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties22.elements();
        boolean boolean26 = properties22.isEmpty();
        java.util.Set<java.lang.Object> objSet27 = properties22.keySet();
        boolean boolean28 = properties22.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties22.entrySet();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.remove((java.lang.Object) 0.0d);
        boolean boolean33 = properties30.isEmpty();
        java.lang.Object obj36 = properties30.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setSerialJtaTransactions(false);
        boolean boolean40 = properties22.remove((java.lang.Object) properties30, (java.lang.Object) atomikosProperties37);
        boolean boolean41 = properties19.equals((java.lang.Object) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties19.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties19.values();
        java.util.Enumeration<?> wildcardEnumeration44 = properties19.propertyNames();
        boolean boolean45 = properties0.containsValue((java.lang.Object) wildcardEnumeration44);
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.elements();
        boolean boolean50 = properties46.isEmpty();
        java.util.Set<java.lang.Object> objSet51 = properties46.keySet();
        boolean boolean52 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties46.entrySet();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        boolean boolean57 = properties54.isEmpty();
        java.lang.Object obj60 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setSerialJtaTransactions(false);
        boolean boolean64 = properties46.remove((java.lang.Object) properties54, (java.lang.Object) atomikosProperties61);
        boolean boolean65 = atomikosProperties61.isSerialJtaTransactions();
        atomikosProperties61.setService("{=hi!}");
        boolean boolean68 = properties0.containsValue((java.lang.Object) atomikosProperties61);
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream69, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test4496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4496");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        boolean boolean4 = properties0.containsValue((java.lang.Object) "hi!");
        java.lang.Object obj7 = properties0.put((java.lang.Object) (byte) -1, (java.lang.Object) 100L);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties9.elements();
        boolean boolean13 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setMaxTimeout((long) '#');
        boolean boolean23 = atomikosProperties16.isForceShutdownOnVmExit();
        java.lang.Object obj24 = properties9.put((java.lang.Object) (short) 1, (java.lang.Object) atomikosProperties16);
        long long25 = atomikosProperties16.getDefaultJtaTimeout();
        java.lang.String str26 = atomikosProperties16.getLogBaseDir();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties27.elements();
        boolean boolean31 = properties27.isEmpty();
        java.lang.Object obj34 = properties27.setProperty("tmlog", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties35.isSerialJtaTransactions();
        atomikosProperties35.setTransactionManagerUniqueName("hi!");
        atomikosProperties35.setForceShutdownOnVmExit(false);
        atomikosProperties35.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str45 = atomikosProperties35.getTransactionManagerUniqueName();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet50 = properties47.stringPropertyNames();
        boolean boolean51 = properties46.containsValue((java.lang.Object) properties47);
        java.util.Collection<java.lang.Object> objCollection52 = properties46.values();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        boolean boolean58 = properties54.isEmpty();
        java.util.Set<java.lang.Object> objSet59 = properties54.keySet();
        java.lang.Object obj60 = properties46.putIfAbsent((java.lang.Object) "hi!", (java.lang.Object) objSet59);
        java.util.Set<java.lang.Object> objSet61 = properties46.keySet();
        java.util.Set<java.lang.Object> objSet62 = properties46.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties46.entrySet();
        java.util.Set<java.lang.Object> objSet64 = properties46.keySet();
        java.lang.Object obj65 = properties27.replace((java.lang.Object) atomikosProperties35, (java.lang.Object) properties46);
        java.util.Properties properties66 = atomikosProperties35.asProperties();
        boolean boolean67 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.Object obj68 = properties0.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) boolean67);
        atomikosProperties16.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test4497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4497");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.list(printStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test4498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4498");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setEnableLogging(false);
        boolean boolean19 = atomikosProperties12.isSerialJtaTransactions();
        int int20 = atomikosProperties12.getMaxActives();
        boolean boolean21 = atomikosProperties12.isEnableLogging();
        java.lang.String str22 = atomikosProperties12.getLogBaseDir();
        atomikosProperties12.setService("{=hi!}");
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet29 = properties26.stringPropertyNames();
        boolean boolean30 = properties25.containsValue((java.lang.Object) properties26);
        java.util.Enumeration<?> wildcardEnumeration31 = properties26.propertyNames();
        java.util.Properties properties32 = new java.util.Properties(properties26);
        java.util.Set<java.lang.String> strSet33 = properties26.stringPropertyNames();
        boolean boolean34 = properties11.remove((java.lang.Object) atomikosProperties12, (java.lang.Object) strSet33);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties35.elements();
        boolean boolean39 = properties35.isEmpty();
        java.util.Set<java.lang.Object> objSet40 = properties35.keySet();
        boolean boolean42 = properties35.containsKey((java.lang.Object) (-1.0f));
        java.util.Collection<java.lang.Object> objCollection43 = properties35.values();
        java.lang.Object obj44 = properties35.clone();
        java.util.Collection<java.lang.Object> objCollection45 = properties35.values();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection50 = properties46.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setSerialJtaTransactions(false);
        boolean boolean54 = atomikosProperties51.isSerialJtaTransactions();
        atomikosProperties51.setTransactionManagerUniqueName("hi!");
        boolean boolean57 = atomikosProperties51.isEnableLogging();
        atomikosProperties51.setSerialJtaTransactions(true);
        boolean boolean60 = properties35.remove((java.lang.Object) objCollection50, (java.lang.Object) atomikosProperties51);
        boolean boolean61 = properties11.equals((java.lang.Object) atomikosProperties51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test4499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4499");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout((long) '#');
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setCheckpointInterval(0L);
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.Object obj17 = properties14.setProperty("{hi!=[]}", "");
        java.io.PrintWriter printWriter18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printWriter18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test4500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4500");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.remove((java.lang.Object) 0.0d);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties5.elements();
        boolean boolean9 = properties5.isEmpty();
        java.util.Set<java.lang.Object> objSet10 = properties5.keySet();
        boolean boolean11 = properties5.isEmpty();
        java.lang.Object obj12 = properties0.getOrDefault((java.lang.Object) true, (java.lang.Object) boolean11);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.remove((java.lang.Object) 0.0d);
        boolean boolean16 = properties13.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.keys();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet21 = properties18.stringPropertyNames();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        boolean boolean27 = properties22.containsValue((java.lang.Object) properties23);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.lang.Object obj31 = properties18.put((java.lang.Object) wildcardEnumeration29, (java.lang.Object) 10.0d);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.remove((java.lang.Object) 0.0d);
        java.util.Set<java.lang.String> strSet36 = properties33.stringPropertyNames();
        boolean boolean37 = properties32.containsValue((java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.lang.Object obj39 = properties32.clone();
        boolean boolean40 = properties0.replace((java.lang.Object) properties13, (java.lang.Object) 10.0d, obj39);
        java.util.Collection<java.lang.Object> objCollection41 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setSerialJtaTransactions(false);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        atomikosProperties42.setEnableLogging(false);
        boolean boolean49 = atomikosProperties42.isSerialJtaTransactions();
        int int50 = atomikosProperties42.getMaxActives();
        boolean boolean51 = atomikosProperties42.isEnableLogging();
        long long52 = atomikosProperties42.getCheckpointInterval();
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties13.containsValue((java.lang.Object) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties13.elements();
        java.lang.String str57 = properties13.toString();
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream58, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + obj12 + "' != '" + true + "'", obj12, true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{}" + "'", str57, "{}");
    }
}
