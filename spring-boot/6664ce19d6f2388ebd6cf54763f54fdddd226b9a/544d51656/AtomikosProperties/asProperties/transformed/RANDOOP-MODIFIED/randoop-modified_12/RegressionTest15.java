import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test7501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7501");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.defaultJtaTimeout = ' ';
        int int7 = atomikosProperties0.getMaxActives();
        java.lang.String str8 = atomikosProperties0.service;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test7502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7502");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout(1L);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.checkpointInterval;
        boolean boolean9 = atomikosProperties0.enableLogging;
        long long10 = atomikosProperties0.maxTimeout;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean13 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test7503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7503");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test7504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7504");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        atomikosProperties6.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.setSerialJtaTransactions(true);
        boolean boolean15 = properties3.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) true);
        atomikosProperties6.setForceShutdownOnVmExit(false);
        atomikosProperties6.logBaseName = "tmlog";
        java.lang.String str20 = atomikosProperties6.getTransactionManagerUniqueName();
        atomikosProperties6.setDefaultJtaTimeout((long) (short) 100);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test7505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7505");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        boolean boolean9 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties19 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.lang.String str24 = atomikosProperties20.logBaseName;
        atomikosProperties20.service = "tmlog";
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.forceShutdownOnVmExit;
        java.lang.String str30 = atomikosProperties28.getLogBaseDir();
        java.lang.Object obj31 = properties19.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) str30);
        java.lang.Object obj32 = properties4.put((java.lang.Object) atomikosProperties6, (java.lang.Object) atomikosProperties20);
        boolean boolean33 = properties4.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean36 = atomikosProperties35.forceShutdownOnVmExit;
        atomikosProperties35.setSerialJtaTransactions(true);
        java.lang.String str39 = atomikosProperties35.logBaseName;
        boolean boolean40 = atomikosProperties35.forceShutdownOnVmExit;
        int int41 = atomikosProperties35.maxActives;
        java.lang.String str42 = atomikosProperties35.logBaseName;
        atomikosProperties35.setForceShutdownOnVmExit(true);
        java.util.Properties properties45 = atomikosProperties35.asProperties();
        boolean boolean46 = atomikosProperties35.isForceShutdownOnVmExit();
        java.util.Properties properties47 = atomikosProperties35.asProperties();
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setCheckpointInterval((long) 'a');
        java.util.Properties properties52 = atomikosProperties35.asProperties();
        boolean boolean53 = properties34.contains((java.lang.Object) properties52);
        java.util.Properties properties54 = new java.util.Properties(properties34);
        java.io.PrintStream printStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.list(printStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test7506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7506");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long10 = atomikosProperties9.defaultJtaTimeout;
        boolean boolean11 = atomikosProperties9.enableLogging;
        atomikosProperties9.setSerialJtaTransactions(true);
        java.lang.Object obj14 = properties3.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        int int15 = properties3.size();
        java.lang.Object obj18 = properties3.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        long long21 = atomikosProperties19.getDefaultJtaTimeout();
        atomikosProperties19.logBaseName = "tmlog";
        atomikosProperties19.setForceShutdownOnVmExit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long27 = atomikosProperties26.defaultJtaTimeout;
        boolean boolean28 = atomikosProperties26.enableLogging;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.util.Properties properties31 = atomikosProperties26.asProperties();
        java.util.Properties properties32 = atomikosProperties26.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        atomikosProperties34.checkpointInterval = 1L;
        boolean boolean38 = atomikosProperties34.forceShutdownOnVmExit;
        java.lang.Object obj39 = properties32.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties43 = atomikosProperties42.asProperties();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        boolean boolean47 = properties43.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties48 = new java.util.Properties(properties43);
        java.lang.Object obj49 = properties48.clone();
        java.lang.Object obj50 = properties48.clone();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties55 = atomikosProperties54.asProperties();
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties55.keys();
        java.lang.Object obj60 = properties55.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties61 = new java.util.Properties(properties55);
        atomikosProperties34.set(properties48, "tmlog", (java.lang.Object) properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties48.elements();
        java.util.Properties properties64 = new java.util.Properties(properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setService("");
        boolean boolean68 = atomikosProperties65.isEnableLogging();
        java.util.Properties properties69 = atomikosProperties65.asProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        java.lang.String str72 = atomikosProperties65.getLogBaseName();
        atomikosProperties65.checkpointInterval = (short) 100;
        atomikosProperties65.serialJtaTransactions = false;
        atomikosProperties65.setEnableLogging(false);
        java.lang.String str79 = atomikosProperties65.getService();
        atomikosProperties65.enableLogging = true;
        boolean boolean82 = properties3.replace((java.lang.Object) true, (java.lang.Object) properties48, (java.lang.Object) true);
        java.util.Collection<java.lang.Object> objCollection83 = properties48.values();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objCollection83);
    }

    @Test
    public void test7507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7507");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setSerialJtaTransactions(true);
        boolean boolean10 = atomikosProperties0.enableLogging;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.checkpointInterval = 52;
        atomikosProperties0.maxActives = 0;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test7508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7508");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.threadedTwoPhaseCommit = true;
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 12);
        java.lang.String str14 = atomikosProperties0.service;
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
    }

    @Test
    public void test7509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7509");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties9.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test7510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7510");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str22 = atomikosProperties15.logBaseDir;
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setEnableLogging(false);
        java.lang.String str31 = atomikosProperties24.logBaseName;
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        boolean boolean33 = properties23.contains((java.lang.Object) atomikosProperties24);
        java.util.Properties properties34 = atomikosProperties24.asProperties();
        atomikosProperties24.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str37 = atomikosProperties24.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test7511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7511");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        boolean boolean41 = atomikosProperties27.forceShutdownOnVmExit;
        java.util.Properties properties42 = atomikosProperties27.asProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) 100);
        java.lang.Class<?> wildcardClass45 = atomikosProperties27.getClass();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test7512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7512");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<?> wildcardEnumeration10 = properties7.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.setSerialJtaTransactions(true);
        java.lang.String str15 = atomikosProperties11.logBaseName;
        atomikosProperties11.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setLogBaseDir("");
        atomikosProperties18.setMaxTimeout(100L);
        atomikosProperties18.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        boolean boolean25 = atomikosProperties18.threadedTwoPhaseCommit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.defaultJtaTimeout = (byte) -1;
        int int29 = atomikosProperties26.maxActives;
        boolean boolean30 = atomikosProperties26.isForceShutdownOnVmExit();
        boolean boolean31 = atomikosProperties26.threadedTwoPhaseCommit;
        long long32 = atomikosProperties26.defaultJtaTimeout;
        boolean boolean33 = properties7.replace((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) boolean25, (java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setService("");
        atomikosProperties34.setSerialJtaTransactions(true);
        atomikosProperties34.setEnableLogging(false);
        atomikosProperties34.logBaseName = "tmlog";
        atomikosProperties34.serialJtaTransactions = false;
        java.util.Properties properties45 = atomikosProperties34.asProperties();
        atomikosProperties34.setMaxTimeout((long) 1);
        java.lang.Object obj48 = properties7.get((java.lang.Object) 1);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test7513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7513");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        java.util.Set<java.lang.String> strSet25 = properties24.stringPropertyNames();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        int int27 = properties22.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties31 = atomikosProperties28.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean33 = atomikosProperties32.forceShutdownOnVmExit;
        atomikosProperties32.setSerialJtaTransactions(true);
        java.lang.String str36 = atomikosProperties32.logBaseName;
        atomikosProperties32.service = "tmlog";
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean41 = atomikosProperties40.forceShutdownOnVmExit;
        java.lang.String str42 = atomikosProperties40.getLogBaseDir();
        java.lang.Object obj43 = properties31.getOrDefault((java.lang.Object) atomikosProperties32, (java.lang.Object) str42);
        long long44 = atomikosProperties32.getDefaultJtaTimeout();
        atomikosProperties32.setLogBaseName("{}");
        int int47 = atomikosProperties32.maxActives;
        java.lang.Object obj48 = properties9.replace((java.lang.Object) properties22, (java.lang.Object) int47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setService("");
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        long long54 = atomikosProperties49.getCheckpointInterval();
        java.util.Properties properties55 = atomikosProperties49.asProperties();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties59 = atomikosProperties58.asProperties();
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties59.keys();
        boolean boolean63 = properties59.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties67 = atomikosProperties66.asProperties();
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties67.keys();
        java.lang.Object obj72 = properties67.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection73 = properties67.values();
        boolean boolean74 = properties59.containsKey((java.lang.Object) properties67);
        java.util.Properties properties75 = new java.util.Properties(properties59);
        java.util.Set<java.lang.Object> objSet76 = properties59.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties59.keys();
        java.lang.Object obj78 = properties9.getOrDefault((java.lang.Object) properties55, (java.lang.Object) properties59);
        java.util.Collection<java.lang.Object> objCollection79 = properties9.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties81 = atomikosProperties80.asProperties();
        atomikosProperties80.checkpointInterval = 1L;
        java.lang.String str84 = atomikosProperties80.getService();
        boolean boolean85 = atomikosProperties80.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties89 = atomikosProperties86.asProperties();
        atomikosProperties86.setSerialJtaTransactions(true);
        java.util.Properties properties92 = atomikosProperties86.asProperties();
        java.lang.Object obj93 = properties9.put((java.lang.Object) atomikosProperties80, (java.lang.Object) properties92);
        long long94 = atomikosProperties80.defaultJtaTimeout;
        boolean boolean95 = atomikosProperties80.isForceShutdownOnVmExit();
        java.lang.String str96 = atomikosProperties80.logBaseDir;
        atomikosProperties80.checkpointInterval = 0L;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 9 + "'", int27 == 9);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 50 + "'", int47 == 50);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 500L + "'", long54 == 500L);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals(obj78.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection79);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(properties89);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10000L + "'", long94 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test7514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7514");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.maxTimeout = (-1);
        atomikosProperties0.setCheckpointInterval((long) 9);
        atomikosProperties0.maxActives = 'a';
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.service = "";
        atomikosProperties0.enableLogging = false;
        java.lang.String str17 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test7515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7515");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        long long13 = atomikosProperties0.getMaxTimeout();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.enableLogging = true;
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Set<java.lang.String> strSet21 = properties19.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test7516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7516");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.transactionManagerUniqueName = "hi!";
        atomikosProperties0.setMaxActives((int) (short) 10);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        java.util.Properties properties20 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties23 = atomikosProperties22.asProperties();
        atomikosProperties22.checkpointInterval = 1L;
        boolean boolean26 = atomikosProperties22.forceShutdownOnVmExit;
        java.lang.Object obj27 = properties20.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties31 = atomikosProperties30.asProperties();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties31.keys();
        java.lang.Object obj36 = properties31.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj41 = properties38.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties43 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean45 = atomikosProperties44.forceShutdownOnVmExit;
        atomikosProperties44.setSerialJtaTransactions(true);
        java.lang.String str48 = atomikosProperties44.logBaseName;
        atomikosProperties44.service = "tmlog";
        boolean boolean51 = properties43.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties52 = new java.util.Properties(properties43);
        boolean boolean53 = properties20.containsKey((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setService("");
        boolean boolean58 = atomikosProperties55.isEnableLogging();
        java.util.Properties properties59 = atomikosProperties55.asProperties();
        boolean boolean60 = atomikosProperties55.isThreadedTwoPhaseCommit();
        java.util.Properties properties61 = atomikosProperties55.asProperties();
        atomikosProperties0.set(properties20, "tmlog", (java.lang.Object) properties61);
        java.util.Properties properties63 = new java.util.Properties(properties61);
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.keys();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (-1.0d) + "'", obj41, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNotNull(objEnumeration65);
    }

    @Test
    public void test7517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7517");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = new java.util.Properties(properties3);
        java.lang.String str8 = properties3.getProperty("hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = atomikosProperties12.enableLogging;
        atomikosProperties12.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        long long21 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.maxTimeout = (-1);
        java.util.Properties properties24 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long26 = atomikosProperties25.defaultJtaTimeout;
        boolean boolean27 = atomikosProperties25.enableLogging;
        atomikosProperties25.setSerialJtaTransactions(true);
        java.util.Properties properties30 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties24.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        boolean boolean38 = atomikosProperties33.forceShutdownOnVmExit;
        int int39 = atomikosProperties33.maxActives;
        java.lang.String str40 = atomikosProperties33.logBaseName;
        atomikosProperties33.setForceShutdownOnVmExit(true);
        java.util.Properties properties43 = atomikosProperties33.asProperties();
        boolean boolean44 = atomikosProperties33.isForceShutdownOnVmExit();
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        boolean boolean46 = properties10.replace((java.lang.Object) (byte) 1, (java.lang.Object) properties24, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties47 = new java.util.Properties(properties10);
        boolean boolean48 = properties3.equals((java.lang.Object) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties3.elements();
        java.lang.String str51 = properties3.getProperty("");
        java.util.Set<java.lang.String> strSet52 = properties3.stringPropertyNames();
        java.util.Properties properties53 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties55 = atomikosProperties54.asProperties();
        atomikosProperties54.checkpointInterval = 1L;
        java.lang.String str58 = atomikosProperties54.getService();
        java.lang.String str59 = atomikosProperties54.getLogBaseName();
        java.lang.Object obj60 = properties53.remove((java.lang.Object) atomikosProperties54);
        java.lang.String str61 = atomikosProperties54.logBaseName;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
    }

    @Test
    public void test7518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7518");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        long long7 = atomikosProperties0.checkpointInterval;
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}";
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.service = "";
        atomikosProperties0.setMaxTimeout((long) 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}" + "'", str11, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}");
    }

    @Test
    public void test7519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7519");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties24 = new java.util.Properties(properties15);
        java.util.Properties properties25 = new java.util.Properties(properties15);
        java.lang.Object obj26 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setService("");
        atomikosProperties27.setSerialJtaTransactions(true);
        java.util.Properties properties32 = atomikosProperties27.asProperties();
        properties32.clear();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties38 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties38.keys();
        boolean boolean42 = properties38.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long45 = atomikosProperties44.defaultJtaTimeout;
        boolean boolean46 = atomikosProperties44.enableLogging;
        atomikosProperties44.setSerialJtaTransactions(true);
        java.lang.Object obj49 = properties38.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean50 = properties32.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setService("");
        atomikosProperties51.setSerialJtaTransactions(true);
        java.util.Properties properties56 = atomikosProperties51.asProperties();
        properties56.clear();
        java.lang.Object obj59 = properties32.put((java.lang.Object) properties56, (java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet60 = properties32.stringPropertyNames();
        java.util.Properties properties61 = new java.util.Properties(properties32);
        boolean boolean62 = properties15.contains((java.lang.Object) properties32);
        java.io.OutputStream outputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream63, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test7520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7520");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.transactionManagerUniqueName = "hi!";
        atomikosProperties0.setMaxActives((int) (short) 10);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setService("");
        atomikosProperties14.setSerialJtaTransactions(true);
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        properties19.clear();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties25.keys();
        boolean boolean29 = properties25.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long32 = atomikosProperties31.defaultJtaTimeout;
        boolean boolean33 = atomikosProperties31.enableLogging;
        atomikosProperties31.setSerialJtaTransactions(true);
        java.lang.Object obj36 = properties25.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean37 = properties19.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        properties43.clear();
        java.lang.Object obj46 = properties19.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties19.elements();
        java.util.Set<java.lang.String> strSet48 = properties19.stringPropertyNames();
        java.lang.Object obj50 = properties13.put((java.lang.Object) strSet48, (java.lang.Object) (-1.0d));
        java.util.Set<java.lang.String> strSet51 = properties13.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties13.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean54 = atomikosProperties53.forceShutdownOnVmExit;
        atomikosProperties53.setSerialJtaTransactions(true);
        java.lang.String str57 = atomikosProperties53.logBaseName;
        atomikosProperties53.service = "tmlog";
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        long long61 = atomikosProperties53.checkpointInterval;
        boolean boolean62 = atomikosProperties53.isEnableLogging();
        java.util.Properties properties63 = atomikosProperties53.asProperties();
        boolean boolean64 = atomikosProperties53.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setService("");
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        long long70 = atomikosProperties65.getCheckpointInterval();
        boolean boolean71 = atomikosProperties65.threadedTwoPhaseCommit;
        atomikosProperties65.transactionManagerUniqueName = "tmlog";
        boolean boolean74 = atomikosProperties65.isSerialJtaTransactions();
        boolean boolean75 = atomikosProperties65.isEnableLogging();
        long long76 = atomikosProperties65.getDefaultJtaTimeout();
        java.lang.String str77 = atomikosProperties65.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setService("");
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        long long83 = atomikosProperties78.getCheckpointInterval();
        boolean boolean84 = atomikosProperties78.threadedTwoPhaseCommit;
        atomikosProperties78.transactionManagerUniqueName = "tmlog";
        boolean boolean87 = atomikosProperties78.isSerialJtaTransactions();
        java.util.Properties properties88 = atomikosProperties78.asProperties();
        boolean boolean89 = properties13.replace((java.lang.Object) boolean64, (java.lang.Object) atomikosProperties65, (java.lang.Object) properties88);
        java.lang.String str92 = properties88.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, []=1.0}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}" + "'", str92, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
    }

    @Test
    public void test7521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7521");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        boolean boolean42 = atomikosProperties27.enableLogging;
        atomikosProperties27.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties27.forceShutdownOnVmExit = true;
        atomikosProperties27.maxActives = (byte) 1;
        java.lang.String str49 = atomikosProperties27.service;
        long long50 = atomikosProperties27.getMaxTimeout();
        boolean boolean51 = atomikosProperties27.serialJtaTransactions;
        java.lang.String str52 = atomikosProperties27.getLogBaseName();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 300000L + "'", long50 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
    }

    @Test
    public void test7522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7522");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean6 = properties3.isEmpty();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean11 = atomikosProperties10.enableLogging;
        atomikosProperties10.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setService("");
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        long long19 = atomikosProperties14.getCheckpointInterval();
        atomikosProperties14.maxTimeout = (-1);
        java.util.Properties properties22 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long24 = atomikosProperties23.defaultJtaTimeout;
        boolean boolean25 = atomikosProperties23.enableLogging;
        atomikosProperties23.setSerialJtaTransactions(true);
        java.util.Properties properties28 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties22.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean32 = atomikosProperties31.forceShutdownOnVmExit;
        atomikosProperties31.setSerialJtaTransactions(true);
        java.lang.String str35 = atomikosProperties31.logBaseName;
        boolean boolean36 = atomikosProperties31.forceShutdownOnVmExit;
        int int37 = atomikosProperties31.maxActives;
        java.lang.String str38 = atomikosProperties31.logBaseName;
        atomikosProperties31.setForceShutdownOnVmExit(true);
        java.util.Properties properties41 = atomikosProperties31.asProperties();
        boolean boolean42 = atomikosProperties31.isForceShutdownOnVmExit();
        java.util.Properties properties43 = atomikosProperties31.asProperties();
        boolean boolean44 = properties8.replace((java.lang.Object) (byte) 1, (java.lang.Object) properties22, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties45 = new java.util.Properties(properties8);
        java.lang.Object obj46 = properties45.clone();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties50 = atomikosProperties49.asProperties();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties50.keys();
        java.lang.Object obj55 = properties50.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection56 = properties50.values();
        java.util.Properties properties57 = new java.util.Properties();
        java.lang.Object obj60 = properties57.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.lang.Object obj62 = properties3.put((java.lang.Object) properties45, (java.lang.Object) properties50);
        java.util.Properties properties63 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean65 = atomikosProperties64.forceShutdownOnVmExit;
        atomikosProperties64.setSerialJtaTransactions(true);
        java.lang.String str68 = atomikosProperties64.logBaseName;
        boolean boolean69 = atomikosProperties64.forceShutdownOnVmExit;
        int int70 = atomikosProperties64.maxActives;
        atomikosProperties64.setService("hi!");
        java.util.Properties properties73 = atomikosProperties64.asProperties();
        java.util.Properties properties74 = new java.util.Properties(properties73);
        boolean boolean75 = properties45.containsValue((java.lang.Object) properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.keys();
        java.util.Properties properties77 = new java.util.Properties(properties73);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 500L + "'", long19 == 500L);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + (-1.0d) + "'", obj60, (-1.0d));
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objEnumeration76);
    }

    @Test
    public void test7523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7523");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        int int3 = atomikosProperties0.getMaxActives();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str5 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test7524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7524");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str17 = atomikosProperties10.logBaseName;
        java.lang.Object obj18 = properties3.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties10);
        atomikosProperties5.enableLogging = true;
        atomikosProperties5.setThreadedTwoPhaseCommit(false);
        atomikosProperties5.maxActives = (short) -1;
        java.lang.String str25 = atomikosProperties5.getLogBaseName();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
    }

    @Test
    public void test7525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7525");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet6 = properties1.stringPropertyNames();
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test7526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7526");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean6 = atomikosProperties0.enableLogging;
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setLogBaseDir("");
        long long12 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setLogBaseName("{{}=1}");
        java.lang.String str15 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7527");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setLogBaseName("hi!");
        int int22 = atomikosProperties15.getMaxActives();
        atomikosProperties15.setCheckpointInterval((long) (short) -1);
        atomikosProperties15.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties15.serialJtaTransactions = false;
        long long29 = atomikosProperties15.defaultJtaTimeout;
        atomikosProperties15.setMaxTimeout(500L);
        java.util.Properties properties32 = atomikosProperties15.asProperties();
        java.lang.String str33 = atomikosProperties15.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str33, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7528");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.keys();
        java.lang.Object obj15 = properties10.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj20 = properties17.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.keys();
        java.lang.Object obj31 = properties26.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj36 = properties33.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        atomikosProperties0.set(properties10, "", (java.lang.Object) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean40 = atomikosProperties39.forceShutdownOnVmExit;
        atomikosProperties39.setSerialJtaTransactions(true);
        java.lang.String str43 = atomikosProperties39.logBaseName;
        atomikosProperties39.service = "tmlog";
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        boolean boolean48 = properties46.isEmpty();
        int int49 = properties46.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setService("");
        boolean boolean53 = atomikosProperties50.isEnableLogging();
        java.util.Properties properties54 = atomikosProperties50.asProperties();
        properties54.clear();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties59 = atomikosProperties58.asProperties();
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties59.keys();
        java.lang.Object obj63 = properties54.put((java.lang.Object) properties59, (java.lang.Object) (byte) 0);
        boolean boolean64 = properties59.isEmpty();
        boolean boolean65 = properties59.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties59.entrySet();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties70 = atomikosProperties69.asProperties();
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties70.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setService("");
        atomikosProperties73.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean79 = atomikosProperties78.forceShutdownOnVmExit;
        atomikosProperties78.setSerialJtaTransactions(true);
        boolean boolean82 = properties70.remove((java.lang.Object) atomikosProperties73, (java.lang.Object) true);
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet85 = properties46.entrySet();
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1.0d) + "'", obj20, (-1.0d));
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1.0d) + "'", obj36, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objEntrySet85);
    }

    @Test
    public void test7529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7529");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        long long11 = atomikosProperties6.getCheckpointInterval();
        atomikosProperties6.setMaxTimeout(0L);
        atomikosProperties6.forceShutdownOnVmExit = false;
        atomikosProperties6.setEnableLogging(false);
        java.lang.String str18 = atomikosProperties6.logBaseDir;
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties23 = atomikosProperties6.asProperties();
        boolean boolean24 = atomikosProperties6.forceShutdownOnVmExit;
        boolean boolean25 = properties1.contains((java.lang.Object) boolean24);
        java.util.Properties properties26 = new java.util.Properties(properties1);
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties31 = atomikosProperties30.asProperties();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Properties properties34 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties36 = atomikosProperties35.asProperties();
        java.util.Properties properties37 = atomikosProperties35.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        boolean boolean41 = atomikosProperties38.isEnableLogging();
        java.util.Properties properties42 = atomikosProperties38.asProperties();
        java.lang.Object obj43 = properties31.getOrDefault((java.lang.Object) properties37, (java.lang.Object) atomikosProperties38);
        java.lang.String str44 = atomikosProperties38.logBaseName;
        atomikosProperties38.setLogBaseDir("");
        atomikosProperties38.maxActives = 10;
        atomikosProperties38.setCheckpointInterval(300000L);
        boolean boolean51 = properties27.contains((java.lang.Object) 300000L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test7530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7530");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        int int9 = atomikosProperties0.maxActives;
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test7531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7531");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties34 = atomikosProperties31.asProperties();
        boolean boolean35 = properties28.contains((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties39 = atomikosProperties38.asProperties();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        boolean boolean43 = properties39.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.lang.Object obj45 = properties13.replace((java.lang.Object) properties34, (java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = atomikosProperties46.forceShutdownOnVmExit;
        atomikosProperties46.setSerialJtaTransactions(true);
        java.lang.String str50 = atomikosProperties46.logBaseName;
        boolean boolean51 = atomikosProperties46.forceShutdownOnVmExit;
        int int52 = atomikosProperties46.maxActives;
        java.lang.String str53 = atomikosProperties46.logBaseName;
        atomikosProperties46.setForceShutdownOnVmExit(true);
        java.lang.Object obj56 = properties34.remove((java.lang.Object) atomikosProperties46);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties60 = atomikosProperties59.asProperties();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Collection<java.lang.Object> objCollection62 = properties58.values();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) atomikosProperties46, (java.lang.Object) properties58);
        atomikosProperties46.forceShutdownOnVmExit = false;
        long long66 = atomikosProperties46.maxTimeout;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
    }

    @Test
    public void test7532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7532");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        boolean boolean3 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setCheckpointInterval(0L);
        boolean boolean6 = atomikosProperties0.enableLogging;
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setMaxActives((int) (short) 1);
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        long long12 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test7533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7533");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str22 = atomikosProperties15.logBaseDir;
        atomikosProperties15.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean25 = atomikosProperties15.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test7534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7534");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        java.util.Properties properties11 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setService("");
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        long long18 = atomikosProperties13.getCheckpointInterval();
        boolean boolean19 = atomikosProperties13.threadedTwoPhaseCommit;
        atomikosProperties4.set(properties11, "tmlog", (java.lang.Object) atomikosProperties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties24 = atomikosProperties21.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean26 = atomikosProperties25.forceShutdownOnVmExit;
        atomikosProperties25.setSerialJtaTransactions(true);
        java.lang.String str29 = atomikosProperties25.logBaseName;
        atomikosProperties25.service = "tmlog";
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        java.lang.String str35 = atomikosProperties33.getLogBaseDir();
        java.lang.Object obj36 = properties24.getOrDefault((java.lang.Object) atomikosProperties25, (java.lang.Object) str35);
        long long37 = atomikosProperties25.getDefaultJtaTimeout();
        atomikosProperties25.setLogBaseName("{}");
        int int40 = atomikosProperties25.maxActives;
        java.lang.Object obj41 = properties3.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) atomikosProperties25);
        atomikosProperties25.maxTimeout = 9L;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test7535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7535");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setEnableLogging(false);
        boolean boolean12 = atomikosProperties0.enableLogging;
        java.lang.String str13 = atomikosProperties0.logBaseName;
        java.lang.String str14 = atomikosProperties0.service;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.enableLogging = true;
        java.lang.String str19 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test7536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7536");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        java.lang.Object obj15 = properties11.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj18 = properties11.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test7537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7537");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        long long2 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.checkpointInterval = 300000L;
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.defaultJtaTimeout = (byte) 100;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 500L + "'", long2 == 500L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test7538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7538");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        int int3 = atomikosProperties0.maxActives;
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        boolean boolean12 = properties8.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.Object obj19 = properties8.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.service = "tmlog";
        atomikosProperties0.set(properties8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties22);
        boolean boolean32 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.maxActives = 10;
        atomikosProperties0.enableLogging = true;
        java.lang.String str37 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str38 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test7539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7539");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        java.lang.Object obj9 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        long long12 = atomikosProperties10.getDefaultJtaTimeout();
        long long13 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.defaultJtaTimeout = (short) 0;
        int int18 = atomikosProperties10.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setService("");
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        properties24.clear();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties30 = atomikosProperties29.asProperties();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        boolean boolean34 = properties30.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long37 = atomikosProperties36.defaultJtaTimeout;
        boolean boolean38 = atomikosProperties36.enableLogging;
        atomikosProperties36.setSerialJtaTransactions(true);
        java.lang.Object obj41 = properties30.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean42 = properties24.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.lang.Object obj51 = properties46.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties52 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setService("");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.util.Properties properties59 = atomikosProperties54.asProperties();
        properties59.clear();
        boolean boolean61 = properties24.replace((java.lang.Object) properties46, (java.lang.Object) 0.0d, (java.lang.Object) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties24.elements();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties66 = atomikosProperties65.asProperties();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties66.keys();
        java.lang.Object obj71 = properties66.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection72 = properties66.values();
        boolean boolean73 = properties24.containsKey((java.lang.Object) properties66);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties77 = atomikosProperties76.asProperties();
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj83 = properties79.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean84 = properties8.replace((java.lang.Object) int18, (java.lang.Object) boolean73, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean86 = atomikosProperties85.forceShutdownOnVmExit;
        boolean boolean87 = atomikosProperties85.isSerialJtaTransactions();
        boolean boolean88 = atomikosProperties85.enableLogging;
        atomikosProperties85.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean91 = properties8.contains((java.lang.Object) atomikosProperties85);
        atomikosProperties85.setSerialJtaTransactions(true);
        java.util.Properties properties94 = atomikosProperties85.asProperties();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(properties94);
    }

    @Test
    public void test7540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7540");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.maxTimeout = 100L;
        long long13 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test7541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7541");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.enableLogging = true;
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.maxActives = 10;
        boolean boolean14 = atomikosProperties0.enableLogging;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test7542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7542");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        properties7.clear();
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        properties7.clear();
        java.util.Properties properties13 = new java.util.Properties(properties7);
        java.lang.Object obj14 = properties7.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        boolean boolean22 = properties18.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet31 = properties30.keySet();
        boolean boolean32 = properties24.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties24.elements();
        boolean boolean35 = properties18.remove((java.lang.Object) properties24, (java.lang.Object) 50);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties39 = atomikosProperties38.asProperties();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties45 = atomikosProperties42.asProperties();
        boolean boolean46 = properties39.contains((java.lang.Object) properties45);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties50 = atomikosProperties49.asProperties();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties50.keys();
        boolean boolean54 = properties50.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.lang.Object obj56 = properties24.replace((java.lang.Object) properties45, (java.lang.Object) properties55);
        properties55.clear();
        boolean boolean58 = properties55.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setService("");
        atomikosProperties59.setSerialJtaTransactions(true);
        atomikosProperties59.setEnableLogging(false);
        java.lang.String str66 = atomikosProperties59.logBaseName;
        int int67 = atomikosProperties59.maxActives;
        atomikosProperties59.setEnableLogging(false);
        java.util.Properties properties70 = atomikosProperties59.asProperties();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties74 = atomikosProperties73.asProperties();
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setService("");
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setService("");
        atomikosProperties81.setSerialJtaTransactions(true);
        atomikosProperties81.setEnableLogging(false);
        java.lang.String str88 = atomikosProperties81.logBaseName;
        java.lang.Object obj89 = properties74.replace((java.lang.Object) atomikosProperties76, (java.lang.Object) atomikosProperties81);
        java.util.Properties properties90 = atomikosProperties81.asProperties();
        atomikosProperties81.setLogBaseName("");
        boolean boolean93 = properties7.replace((java.lang.Object) properties55, (java.lang.Object) atomikosProperties59, (java.lang.Object) "");
        long long94 = atomikosProperties59.maxTimeout;
        java.lang.String str95 = atomikosProperties59.getLogBaseDir();
        atomikosProperties59.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "tmlog" + "'", str88, "tmlog");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 300000L + "'", long94 == 300000L);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test7543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7543");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long10 = atomikosProperties9.defaultJtaTimeout;
        boolean boolean11 = atomikosProperties9.enableLogging;
        atomikosProperties9.setSerialJtaTransactions(true);
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        java.util.Properties properties15 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        atomikosProperties17.checkpointInterval = 1L;
        boolean boolean21 = atomikosProperties17.forceShutdownOnVmExit;
        java.lang.Object obj22 = properties15.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Enumeration<?> wildcardEnumeration27 = properties24.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties31 = atomikosProperties28.asProperties();
        boolean boolean32 = properties3.replace((java.lang.Object) atomikosProperties17, (java.lang.Object) wildcardEnumeration27, (java.lang.Object) atomikosProperties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setService("");
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        long long38 = atomikosProperties33.getCheckpointInterval();
        boolean boolean39 = atomikosProperties33.threadedTwoPhaseCommit;
        atomikosProperties33.transactionManagerUniqueName = "tmlog";
        boolean boolean42 = atomikosProperties33.isSerialJtaTransactions();
        atomikosProperties33.checkpointInterval = (byte) 10;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        boolean boolean48 = atomikosProperties45.isEnableLogging();
        java.util.Properties properties49 = atomikosProperties45.asProperties();
        properties49.clear();
        java.util.Set<java.lang.Object> objSet51 = properties49.keySet();
        java.util.Properties properties52 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Set<java.lang.Object> objSet54 = properties52.keySet();
        java.lang.Object obj55 = properties3.getOrDefault((java.lang.Object) atomikosProperties33, (java.lang.Object) properties52);
        long long56 = atomikosProperties33.maxTimeout;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 500L + "'", long38 == 500L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
    }

    @Test
    public void test7544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7544");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        java.util.Properties properties36 = atomikosProperties34.asProperties();
        java.lang.Object obj37 = properties13.remove((java.lang.Object) atomikosProperties34);
        properties13.clear();
        java.util.Properties properties39 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setService("");
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setMaxTimeout(1L);
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        long long48 = atomikosProperties40.checkpointInterval;
        boolean boolean49 = atomikosProperties40.enableLogging;
        java.util.Properties properties50 = atomikosProperties40.asProperties();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties54 = atomikosProperties53.asProperties();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.util.Properties properties57 = new java.util.Properties(properties54);
        java.util.Enumeration<?> wildcardEnumeration58 = properties57.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setService("");
        atomikosProperties59.setSerialJtaTransactions(true);
        atomikosProperties59.setEnableLogging(false);
        java.lang.String str66 = atomikosProperties59.logBaseName;
        int int67 = atomikosProperties59.maxActives;
        atomikosProperties59.setEnableLogging(false);
        java.util.Properties properties70 = atomikosProperties59.asProperties();
        java.lang.Object obj71 = properties57.remove((java.lang.Object) properties70);
        int int72 = properties57.size();
        java.lang.Object obj73 = properties13.put((java.lang.Object) atomikosProperties40, (java.lang.Object) properties57);
        long long74 = atomikosProperties40.maxTimeout;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 500L + "'", long48 == 500L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(wildcardEnumeration58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
    }

    @Test
    public void test7545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7545");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties24 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean26 = atomikosProperties25.forceShutdownOnVmExit;
        atomikosProperties25.setSerialJtaTransactions(true);
        java.lang.String str29 = atomikosProperties25.logBaseName;
        atomikosProperties25.service = "tmlog";
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        long long33 = atomikosProperties25.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setService("");
        atomikosProperties34.setSerialJtaTransactions(true);
        atomikosProperties34.setEnableLogging(false);
        java.lang.Object obj41 = properties15.put((java.lang.Object) atomikosProperties25, (java.lang.Object) false);
        atomikosProperties25.forceShutdownOnVmExit = true;
        atomikosProperties25.setMaxActives(0);
        atomikosProperties25.maxActives = (short) 10;
        atomikosProperties25.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties25.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties52 = atomikosProperties25.asProperties();
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties52.entrySet();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(objEntrySet54);
    }

    @Test
    public void test7546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7546");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Enumeration<?> wildcardEnumeration6 = properties3.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.lang.String str8 = properties3.toString();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties12 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        boolean boolean16 = properties12.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.lang.Object obj25 = properties20.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        boolean boolean27 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties28 = new java.util.Properties(properties12);
        java.lang.Object obj29 = properties28.clone();
        java.util.Collection<java.lang.Object> objCollection30 = properties28.values();
        java.lang.Object obj31 = properties3.get((java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setService("");
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        long long37 = atomikosProperties32.getCheckpointInterval();
        atomikosProperties32.setMaxTimeout(0L);
        atomikosProperties32.forceShutdownOnVmExit = false;
        int int42 = atomikosProperties32.maxActives;
        atomikosProperties32.setEnableLogging(true);
        boolean boolean45 = properties28.equals((java.lang.Object) atomikosProperties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = atomikosProperties46.enableLogging;
        atomikosProperties46.setMaxActives((int) (byte) 1);
        atomikosProperties46.setMaxActives(10);
        boolean boolean52 = properties28.contains((java.lang.Object) atomikosProperties46);
        java.util.Properties properties53 = new java.util.Properties(properties28);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.storeToXML(outputStream54, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test7547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7547");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        long long13 = atomikosProperties0.getMaxTimeout();
        int int14 = atomikosProperties0.maxActives;
        atomikosProperties0.setLogBaseName("");
        boolean boolean17 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean20 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.checkpointInterval = 500L;
        java.lang.String str23 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test7548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7548");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.defaultJtaTimeout = (short) 0;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties12 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        java.lang.Object obj17 = properties12.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        java.util.Set<java.lang.String> strSet19 = properties12.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties12.elements();
        java.util.Properties properties21 = new java.util.Properties(properties12);
        int int22 = properties21.size();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties23.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        long long28 = atomikosProperties26.getDefaultJtaTimeout();
        atomikosProperties26.setCheckpointInterval(0L);
        atomikosProperties26.serialJtaTransactions = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setService("");
        boolean boolean36 = atomikosProperties33.isEnableLogging();
        java.util.Properties properties37 = atomikosProperties33.asProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        atomikosProperties33.enableLogging = false;
        java.lang.String str42 = atomikosProperties33.service;
        atomikosProperties33.forceShutdownOnVmExit = false;
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean47 = atomikosProperties33.isEnableLogging();
        atomikosProperties33.setLogBaseName("{}");
        atomikosProperties33.serialJtaTransactions = false;
        atomikosProperties33.setSerialJtaTransactions(true);
        atomikosProperties33.forceShutdownOnVmExit = false;
        boolean boolean56 = atomikosProperties33.isThreadedTwoPhaseCommit();
        java.lang.Object obj57 = properties23.putIfAbsent((java.lang.Object) atomikosProperties26, (java.lang.Object) boolean56);
        boolean boolean58 = properties8.contains((java.lang.Object) properties23);
        java.io.InputStream inputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.loadFromXML(inputStream59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test7549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7549");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setMaxTimeout(100L);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        boolean boolean15 = properties11.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties19 = atomikosProperties18.asProperties();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.lang.Object obj24 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        boolean boolean26 = properties11.containsKey((java.lang.Object) properties19);
        java.util.Properties properties27 = new java.util.Properties(properties11);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties31 = atomikosProperties30.asProperties();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties31.keys();
        java.lang.Object obj36 = properties31.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj41 = properties38.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setService("");
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setService("");
        atomikosProperties53.setSerialJtaTransactions(true);
        atomikosProperties53.setEnableLogging(false);
        java.lang.String str60 = atomikosProperties53.logBaseName;
        java.lang.Object obj61 = properties46.replace((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = properties31.contains((java.lang.Object) properties46);
        java.lang.String str63 = properties46.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setLogBaseDir("");
        atomikosProperties64.setMaxTimeout(100L);
        long long69 = atomikosProperties64.getDefaultJtaTimeout();
        java.lang.Object obj70 = properties11.putIfAbsent((java.lang.Object) properties46, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean73 = atomikosProperties72.forceShutdownOnVmExit;
        atomikosProperties72.setSerialJtaTransactions(true);
        java.lang.String str76 = atomikosProperties72.logBaseName;
        boolean boolean77 = atomikosProperties72.forceShutdownOnVmExit;
        int int78 = atomikosProperties72.maxActives;
        java.lang.String str79 = atomikosProperties72.logBaseName;
        atomikosProperties72.setForceShutdownOnVmExit(true);
        java.util.Properties properties82 = atomikosProperties72.asProperties();
        boolean boolean83 = atomikosProperties72.isForceShutdownOnVmExit();
        atomikosProperties0.set(properties46, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties72);
        atomikosProperties72.setSerialJtaTransactions(true);
        atomikosProperties72.setDefaultJtaTimeout(52L);
        atomikosProperties72.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tmlog={}, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (-1.0d) + "'", obj41, (-1.0d));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str63, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10000L + "'", long69 == 10000L);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test7550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7550");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        boolean boolean17 = properties13.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        boolean boolean21 = atomikosProperties19.enableLogging;
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.Object obj24 = properties13.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setService("");
        boolean boolean28 = atomikosProperties25.isEnableLogging();
        java.util.Properties properties29 = atomikosProperties25.asProperties();
        atomikosProperties25.setSerialJtaTransactions(false);
        java.lang.String str32 = atomikosProperties25.getLogBaseName();
        atomikosProperties25.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        long long35 = atomikosProperties25.getDefaultJtaTimeout();
        java.lang.Object obj36 = properties3.put((java.lang.Object) 100L, (java.lang.Object) atomikosProperties25);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration37 = properties3.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Long cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test7551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7551");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str22 = atomikosProperties15.logBaseDir;
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setEnableLogging(false);
        java.lang.String str31 = atomikosProperties24.logBaseName;
        java.lang.String str32 = atomikosProperties24.getLogBaseName();
        boolean boolean33 = properties23.contains((java.lang.Object) atomikosProperties24);
        atomikosProperties24.threadedTwoPhaseCommit = false;
        long long36 = atomikosProperties24.maxTimeout;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
    }

    @Test
    public void test7552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7552");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean6 = atomikosProperties5.forceShutdownOnVmExit;
        atomikosProperties5.setSerialJtaTransactions(true);
        java.lang.String str9 = atomikosProperties5.logBaseName;
        atomikosProperties5.service = "tmlog";
        atomikosProperties5.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setService("");
        atomikosProperties15.setSerialJtaTransactions(true);
        atomikosProperties15.setEnableLogging(false);
        java.lang.String str22 = atomikosProperties15.logBaseName;
        int int23 = atomikosProperties15.maxActives;
        atomikosProperties15.setEnableLogging(false);
        java.util.Properties properties26 = atomikosProperties15.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setService("");
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties33 = atomikosProperties28.asProperties();
        properties33.clear();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties38 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties38.keys();
        boolean boolean42 = properties38.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties43 = new java.util.Properties(properties38);
        java.lang.Object obj44 = properties43.clone();
        boolean boolean45 = properties33.equals((java.lang.Object) properties43);
        java.lang.Object obj46 = properties33.clone();
        boolean boolean47 = properties1.replace((java.lang.Object) properties14, (java.lang.Object) properties26, obj46);
        java.util.Properties properties48 = new java.util.Properties(properties1);
        java.util.Properties properties49 = new java.util.Properties(properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setService("");
        atomikosProperties50.setSerialJtaTransactions(true);
        atomikosProperties50.setEnableLogging(false);
        atomikosProperties50.logBaseName = "tmlog";
        atomikosProperties50.serialJtaTransactions = false;
        atomikosProperties50.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setService("");
        atomikosProperties63.logBaseDir = "hi!";
        atomikosProperties63.setMaxTimeout(500L);
        atomikosProperties63.maxTimeout = (-1L);
        atomikosProperties63.serialJtaTransactions = true;
        boolean boolean74 = atomikosProperties63.serialJtaTransactions;
        java.util.Properties properties75 = atomikosProperties63.asProperties();
        java.lang.Object obj76 = properties49.getOrDefault((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}", (java.lang.Object) properties75);
        java.util.Properties properties77 = new java.util.Properties(properties49);
        java.io.OutputStream outputStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties77.storeToXML(outputStream78, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=500, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=hi!}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNotNull(obj76);
// flaky:         org.junit.Assert.assertEquals(obj76.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7553");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
    }

    @Test
    public void test7554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7554");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setMaxTimeout(0L);
        atomikosProperties9.setTransactionManagerUniqueName("tmlog");
        atomikosProperties9.setMaxActives(11);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test7555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7555");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        boolean boolean6 = atomikosProperties0.enableLogging;
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}";
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setService("");
        atomikosProperties21.setSerialJtaTransactions(true);
        atomikosProperties21.setEnableLogging(false);
        java.lang.String str28 = atomikosProperties21.logBaseName;
        java.lang.Object obj29 = properties14.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) atomikosProperties21);
        atomikosProperties16.maxActives = (-1);
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.defaultJtaTimeout = 100;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean37 = atomikosProperties36.forceShutdownOnVmExit;
        atomikosProperties36.setSerialJtaTransactions(true);
        java.lang.String str40 = atomikosProperties36.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties42 = atomikosProperties41.asProperties();
        java.util.Properties properties43 = atomikosProperties41.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        long long50 = atomikosProperties45.getCheckpointInterval();
        boolean boolean51 = atomikosProperties45.threadedTwoPhaseCommit;
        atomikosProperties36.set(properties43, "tmlog", (java.lang.Object) atomikosProperties45);
        atomikosProperties45.setMaxTimeout(0L);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean57 = atomikosProperties56.forceShutdownOnVmExit;
        atomikosProperties56.checkpointInterval = 300000L;
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties63 = atomikosProperties62.asProperties();
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties63.keys();
        boolean boolean67 = properties63.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties71 = atomikosProperties70.asProperties();
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet76 = properties75.keySet();
        boolean boolean77 = properties69.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties69.elements();
        boolean boolean80 = properties63.remove((java.lang.Object) properties69, (java.lang.Object) 50);
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties85 = atomikosProperties84.asProperties();
        properties83.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties85);
        java.util.Properties properties87 = new java.util.Properties(properties85);
        java.util.Collection<java.lang.Object> objCollection88 = properties85.values();
        atomikosProperties56.set(properties69, "{}", (java.lang.Object) objCollection88);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties69.elements();
        boolean boolean91 = properties55.equals((java.lang.Object) objEnumeration90);
        java.lang.Object obj92 = properties10.replace((java.lang.Object) 100, (java.lang.Object) properties55);
        java.util.Collection<java.lang.Object> objCollection93 = properties10.values();
        java.lang.Object obj96 = properties10.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 500L + "'", long50 == 500L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNotNull(objCollection88);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(objCollection93);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test7556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7556");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.enableLogging;
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.checkpointInterval = (short) 1;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.String str11 = properties8.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7557");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout(1L);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str9 = atomikosProperties0.service;
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test7558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7558");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties12 = atomikosProperties11.asProperties();
        long long13 = atomikosProperties11.getDefaultJtaTimeout();
        long long14 = atomikosProperties11.getDefaultJtaTimeout();
        boolean boolean15 = atomikosProperties11.serialJtaTransactions;
        boolean boolean16 = atomikosProperties11.isForceShutdownOnVmExit();
        boolean boolean17 = atomikosProperties11.isSerialJtaTransactions();
        atomikosProperties11.defaultJtaTimeout = (-1L);
        boolean boolean20 = atomikosProperties11.isSerialJtaTransactions();
        java.lang.Object obj21 = properties7.putIfAbsent((java.lang.Object) 10.0f, (java.lang.Object) boolean20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.service = "tmlog";
        atomikosProperties22.threadedTwoPhaseCommit = true;
        atomikosProperties22.forceShutdownOnVmExit = false;
        java.util.Properties properties35 = atomikosProperties22.asProperties();
        boolean boolean36 = properties7.containsValue((java.lang.Object) atomikosProperties22);
        java.io.Writer writer37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(writer37, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test7559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7559");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        boolean boolean17 = properties9.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties9.elements();
        boolean boolean20 = properties3.remove((java.lang.Object) properties9, (java.lang.Object) 50);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties30 = atomikosProperties27.asProperties();
        boolean boolean31 = properties24.contains((java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.elements();
        java.util.Properties properties33 = new java.util.Properties(properties30);
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.lang.Object obj35 = properties3.get((java.lang.Object) properties33);
        java.io.Reader reader36 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.load(reader36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test7560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7560");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.util.Enumeration<?> wildcardEnumeration10 = properties7.propertyNames();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream11, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
    }

    @Test
    public void test7561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7561");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test7562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7562");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        java.util.Set<java.lang.String> strSet18 = properties11.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties11.elements();
        java.util.Properties properties20 = new java.util.Properties(properties11);
        int int21 = properties20.size();
        boolean boolean22 = properties7.equals((java.lang.Object) int21);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test7563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7563");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.forceShutdownOnVmExit = false;
        int int10 = atomikosProperties0.maxActives;
        java.lang.String str11 = atomikosProperties0.getService();
        boolean boolean12 = atomikosProperties0.enableLogging;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 52);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test7564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7564");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.lang.Object obj23 = properties3.setProperty("tmlog", "tmlog");
        java.lang.String str24 = properties3.toString();
        java.util.Collection<java.lang.Object> objCollection25 = properties3.values();
        java.util.Set<java.lang.String> strSet26 = properties3.stringPropertyNames();
        java.util.Properties properties27 = new java.util.Properties(properties3);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj23);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}" + "'", str24, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}");
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test7565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7565");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.setSerialJtaTransactions(false);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test7566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7566");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties24 = new java.util.Properties(properties15);
        java.util.Properties properties25 = new java.util.Properties(properties15);
        java.util.Set<java.lang.String> strSet26 = properties15.stringPropertyNames();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test7567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7567");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.lang.String str19 = properties11.toString();
        boolean boolean20 = properties11.isEmpty();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test7568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7568");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.lang.String str16 = properties3.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties17.getCheckpointInterval();
        atomikosProperties17.maxTimeout = (-1);
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long27 = atomikosProperties26.defaultJtaTimeout;
        boolean boolean28 = atomikosProperties26.enableLogging;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.util.Properties properties31 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties25.elements();
        java.util.Properties properties34 = new java.util.Properties(properties25);
        java.lang.Object obj35 = properties3.get((java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setService("");
        boolean boolean39 = atomikosProperties36.isEnableLogging();
        atomikosProperties36.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setService("");
        boolean boolean45 = atomikosProperties42.isEnableLogging();
        atomikosProperties42.setLogBaseName("tmlog");
        java.lang.Object obj48 = properties3.put((java.lang.Object) atomikosProperties36, (java.lang.Object) "tmlog");
        atomikosProperties36.setMaxTimeout((long) 9);
        atomikosProperties36.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties53 = atomikosProperties36.asProperties();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(properties53);
    }

    @Test
    public void test7569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7569");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties7.entrySet();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties12 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setService("");
        atomikosProperties15.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setSerialJtaTransactions(true);
        boolean boolean24 = properties12.remove((java.lang.Object) atomikosProperties15, (java.lang.Object) true);
        atomikosProperties15.setForceShutdownOnVmExit(false);
        java.lang.String str27 = atomikosProperties15.service;
        long long28 = atomikosProperties15.getCheckpointInterval();
        java.lang.Object obj29 = properties7.remove((java.lang.Object) atomikosProperties15);
        java.lang.Object obj32 = properties7.setProperty("", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.PrintStream printStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test7570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7570");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        atomikosProperties0.setMaxTimeout((long) ' ');
        int int9 = atomikosProperties0.maxActives;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        int int12 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test7571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7571");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.serialJtaTransactions = false;
        boolean boolean11 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test7572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7572");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.maxTimeout = 0L;
        atomikosProperties0.maxActives = (byte) 10;
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.maxTimeout = (short) 1;
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7573");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        boolean boolean17 = properties10.contains((java.lang.Object) properties16);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        boolean boolean25 = properties21.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        boolean boolean36 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties37 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long39 = atomikosProperties38.defaultJtaTimeout;
        boolean boolean40 = atomikosProperties38.enableLogging;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        java.util.Properties properties44 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.forceShutdownOnVmExit;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.lang.String str49 = atomikosProperties45.logBaseName;
        boolean boolean50 = atomikosProperties45.forceShutdownOnVmExit;
        int int51 = atomikosProperties45.maxActives;
        java.lang.String str52 = atomikosProperties45.logBaseName;
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        boolean boolean56 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties57 = atomikosProperties45.asProperties();
        java.lang.Object obj58 = properties21.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        java.lang.Object obj59 = properties3.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) atomikosProperties45);
        java.util.Collection<java.lang.Object> objCollection60 = properties16.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties16.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties16.entrySet();
        java.util.Properties properties63 = new java.util.Properties(properties16);
        java.util.Enumeration<?> wildcardEnumeration64 = properties63.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean66 = atomikosProperties65.enableLogging;
        atomikosProperties65.setMaxActives((int) (byte) 1);
        atomikosProperties65.enableLogging = false;
        atomikosProperties65.checkpointInterval = (short) 1;
        java.util.Properties properties73 = atomikosProperties65.asProperties();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        boolean boolean75 = properties63.isEmpty();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test7574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7574");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setService("{}");
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setMaxTimeout((long) (-1));
        atomikosProperties0.threadedTwoPhaseCommit = true;
        long long17 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.enableLogging = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
    }

    @Test
    public void test7575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7575");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Set<java.lang.String> strSet10 = properties3.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties3.elements();
        java.util.Properties properties12 = new java.util.Properties(properties3);
        int int13 = properties12.size();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties14.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        long long19 = atomikosProperties17.getDefaultJtaTimeout();
        atomikosProperties17.setCheckpointInterval(0L);
        atomikosProperties17.serialJtaTransactions = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        boolean boolean27 = atomikosProperties24.isEnableLogging();
        java.util.Properties properties28 = atomikosProperties24.asProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.enableLogging = false;
        java.lang.String str33 = atomikosProperties24.service;
        atomikosProperties24.forceShutdownOnVmExit = false;
        atomikosProperties24.setSerialJtaTransactions(false);
        boolean boolean38 = atomikosProperties24.isEnableLogging();
        atomikosProperties24.setLogBaseName("{}");
        atomikosProperties24.serialJtaTransactions = false;
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.forceShutdownOnVmExit = false;
        boolean boolean47 = atomikosProperties24.isThreadedTwoPhaseCommit();
        java.lang.Object obj48 = properties14.putIfAbsent((java.lang.Object) atomikosProperties17, (java.lang.Object) boolean47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration49 = properties14.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.springframework.boot.jta.atomikos.AtomikosProperties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test7576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7576");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.logBaseName;
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        java.lang.String str16 = atomikosProperties0.service;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test7577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7577");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setService("");
        atomikosProperties3.setSerialJtaTransactions(true);
        java.util.Properties properties8 = atomikosProperties3.asProperties();
        java.util.Properties properties9 = atomikosProperties3.asProperties();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        java.lang.Object obj18 = properties13.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection19 = properties13.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj23 = properties20.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj39 = properties36.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        atomikosProperties3.set(properties13, "", (java.lang.Object) properties29);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        boolean boolean50 = properties46.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties54 = atomikosProperties53.asProperties();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties54.keys();
        java.lang.Object obj59 = properties54.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection60 = properties54.values();
        boolean boolean61 = properties46.containsKey((java.lang.Object) properties54);
        java.util.Properties properties62 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long64 = atomikosProperties63.defaultJtaTimeout;
        boolean boolean65 = atomikosProperties63.enableLogging;
        atomikosProperties63.setSerialJtaTransactions(true);
        java.util.Properties properties68 = atomikosProperties63.asProperties();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean71 = atomikosProperties70.forceShutdownOnVmExit;
        atomikosProperties70.setSerialJtaTransactions(true);
        java.lang.String str74 = atomikosProperties70.logBaseName;
        boolean boolean75 = atomikosProperties70.forceShutdownOnVmExit;
        int int76 = atomikosProperties70.maxActives;
        java.lang.String str77 = atomikosProperties70.logBaseName;
        atomikosProperties70.setForceShutdownOnVmExit(true);
        java.util.Properties properties80 = atomikosProperties70.asProperties();
        boolean boolean81 = atomikosProperties70.isForceShutdownOnVmExit();
        java.util.Properties properties82 = atomikosProperties70.asProperties();
        java.lang.Object obj83 = properties46.replace((java.lang.Object) atomikosProperties63, (java.lang.Object) atomikosProperties70);
        boolean boolean84 = atomikosProperties63.forceShutdownOnVmExit;
        atomikosProperties0.set(properties13, "", (java.lang.Object) atomikosProperties63);
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str90 = atomikosProperties0.getService();
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1.0d) + "'", obj23, (-1.0d));
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10000L + "'", long64 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 50 + "'", int76 == 50);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test7578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7578");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.lang.String str21 = properties20.toString();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setService("");
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setMaxTimeout(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        boolean boolean38 = atomikosProperties33.forceShutdownOnVmExit;
        int int39 = atomikosProperties33.maxActives;
        java.lang.String str40 = atomikosProperties33.logBaseName;
        atomikosProperties33.setForceShutdownOnVmExit(true);
        java.util.Properties properties43 = atomikosProperties33.asProperties();
        boolean boolean44 = atomikosProperties33.isForceShutdownOnVmExit();
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        java.lang.String str48 = atomikosProperties33.logBaseName;
        boolean boolean49 = properties20.replace((java.lang.Object) properties24, (java.lang.Object) 1L, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setSerialJtaTransactions(true);
        atomikosProperties33.setDefaultJtaTimeout((long) 1);
        long long54 = atomikosProperties33.maxTimeout;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 300000L + "'", long54 == 300000L);
    }

    @Test
    public void test7579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7579");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setService("");
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        atomikosProperties13.setMaxTimeout(1L);
        java.util.Properties properties20 = atomikosProperties13.asProperties();
        long long21 = atomikosProperties13.checkpointInterval;
        boolean boolean22 = properties1.containsValue((java.lang.Object) atomikosProperties13);
        java.util.Properties properties23 = new java.util.Properties(properties1);
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objSet24);
    }

    @Test
    public void test7580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7580");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        atomikosProperties9.checkpointInterval = 1L;
        boolean boolean13 = atomikosProperties9.forceShutdownOnVmExit;
        long long14 = atomikosProperties9.defaultJtaTimeout;
        java.util.Properties properties15 = atomikosProperties9.asProperties();
        boolean boolean16 = atomikosProperties9.isForceShutdownOnVmExit();
        atomikosProperties9.maxTimeout = ' ';
        java.util.Properties properties19 = atomikosProperties9.asProperties();
        boolean boolean20 = properties8.contains((java.lang.Object) properties19);
        java.io.PrintWriter printWriter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printWriter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test7581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7581");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        boolean boolean17 = properties10.contains((java.lang.Object) properties16);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        boolean boolean25 = properties21.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        boolean boolean36 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties37 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long39 = atomikosProperties38.defaultJtaTimeout;
        boolean boolean40 = atomikosProperties38.enableLogging;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        java.util.Properties properties44 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.forceShutdownOnVmExit;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.lang.String str49 = atomikosProperties45.logBaseName;
        boolean boolean50 = atomikosProperties45.forceShutdownOnVmExit;
        int int51 = atomikosProperties45.maxActives;
        java.lang.String str52 = atomikosProperties45.logBaseName;
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        boolean boolean56 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties57 = atomikosProperties45.asProperties();
        java.lang.Object obj58 = properties21.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        java.lang.Object obj59 = properties3.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) atomikosProperties45);
        java.util.Collection<java.lang.Object> objCollection60 = properties16.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet61 = properties16.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties16.entrySet();
        java.util.Properties properties63 = new java.util.Properties(properties16);
        java.util.Enumeration<?> wildcardEnumeration64 = properties63.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean66 = atomikosProperties65.enableLogging;
        atomikosProperties65.setMaxActives((int) (byte) 1);
        atomikosProperties65.enableLogging = false;
        atomikosProperties65.checkpointInterval = (short) 1;
        java.util.Properties properties73 = atomikosProperties65.asProperties();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet75 = properties63.entrySet();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEntrySet61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNotNull(objEntrySet75);
    }

    @Test
    public void test7582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7582");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setService("");
        boolean boolean14 = atomikosProperties11.isEnableLogging();
        java.util.Properties properties15 = atomikosProperties11.asProperties();
        properties15.clear();
        java.util.Set<java.lang.Object> objSet17 = properties15.keySet();
        java.util.Properties properties18 = new java.util.Properties(properties15);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties18.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test7583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7583");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties9.asProperties();
        properties13.clear();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj22 = properties13.put((java.lang.Object) properties18, (java.lang.Object) (byte) 0);
        boolean boolean23 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean28 = properties18.containsKey((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("hi!");
        int int31 = atomikosProperties24.getMaxActives();
        boolean boolean32 = properties3.equals((java.lang.Object) int31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties34.entrySet();
        boolean boolean37 = properties3.contains((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean39 = atomikosProperties38.forceShutdownOnVmExit;
        atomikosProperties38.serialJtaTransactions = false;
        java.util.Properties properties42 = atomikosProperties38.asProperties();
        java.lang.String str43 = properties42.toString();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Properties properties45 = new java.util.Properties(properties3);
        java.io.InputStream inputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.loadFromXML(inputStream46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties42);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str43, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7584");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout(1L);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.checkpointInterval;
        java.lang.String str9 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.maxTimeout = 100L;
        int int12 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test7585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7585");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long14 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test7586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7586");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        long long7 = atomikosProperties0.checkpointInterval;
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        int int9 = atomikosProperties0.getMaxActives();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.enableLogging = true;
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.enableLogging = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test7587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7587");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        java.util.Properties properties34 = atomikosProperties0.asProperties();
        java.lang.String str35 = properties34.toString();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7588");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        boolean boolean9 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties19 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.lang.String str24 = atomikosProperties20.logBaseName;
        atomikosProperties20.service = "tmlog";
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.forceShutdownOnVmExit;
        java.lang.String str30 = atomikosProperties28.getLogBaseDir();
        java.lang.Object obj31 = properties19.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) str30);
        java.lang.Object obj32 = properties4.put((java.lang.Object) atomikosProperties6, (java.lang.Object) atomikosProperties20);
        java.util.Properties properties33 = atomikosProperties20.asProperties();
        java.util.Properties properties34 = atomikosProperties20.asProperties();
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean37 = atomikosProperties36.forceShutdownOnVmExit;
        atomikosProperties36.setSerialJtaTransactions(true);
        java.lang.String str40 = atomikosProperties36.logBaseName;
        boolean boolean41 = atomikosProperties36.forceShutdownOnVmExit;
        int int42 = atomikosProperties36.maxActives;
        atomikosProperties36.setService("hi!");
        atomikosProperties36.setService("{}");
        java.lang.String str47 = atomikosProperties36.getLogBaseName();
        atomikosProperties36.setDefaultJtaTimeout(0L);
        atomikosProperties36.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean52 = atomikosProperties36.enableLogging;
        java.lang.String str53 = atomikosProperties36.getService();
        boolean boolean54 = properties34.contains((java.lang.Object) str53);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test7589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7589");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Set<java.lang.String> strSet4 = properties3.stringPropertyNames();
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Set<java.lang.Object> objSet6 = properties3.keySet();
        java.lang.Object obj9 = properties3.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(objSet6);
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test7590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7590");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.transactionManagerUniqueName = "";
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.lang.String str22 = atomikosProperties0.logBaseDir;
        java.lang.String str23 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test7591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7591");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean4 = atomikosProperties0.serialJtaTransactions;
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test7592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7592");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.service;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long6 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
    }

    @Test
    public void test7593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7593");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setService("");
        atomikosProperties23.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.forceShutdownOnVmExit;
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean32 = properties20.remove((java.lang.Object) atomikosProperties23, (java.lang.Object) true);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        properties9.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test7594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7594");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        int int3 = atomikosProperties0.maxActives;
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        boolean boolean12 = properties8.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.Object obj19 = properties8.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.service = "tmlog";
        atomikosProperties0.set(properties8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties22);
        atomikosProperties22.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties34 = atomikosProperties22.asProperties();
        atomikosProperties22.maxActives = 0;
        java.lang.String str37 = atomikosProperties22.logBaseName;
        atomikosProperties22.setTransactionManagerUniqueName("{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
    }

    @Test
    public void test7595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7595");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.service;
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.maxTimeout = 500L;
        boolean boolean17 = atomikosProperties0.threadedTwoPhaseCommit;
        long long18 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test7596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7596");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setSerialJtaTransactions(true);
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.logBaseName = "tmlog";
        int int16 = atomikosProperties7.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setSerialJtaTransactions(true);
        atomikosProperties17.setEnableLogging(false);
        atomikosProperties17.logBaseName = "tmlog";
        atomikosProperties17.maxActives = 1;
        atomikosProperties17.setEnableLogging(true);
        java.lang.String str30 = atomikosProperties17.service;
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        long long33 = atomikosProperties17.getDefaultJtaTimeout();
        boolean boolean34 = properties6.remove((java.lang.Object) atomikosProperties7, (java.lang.Object) long33);
        java.lang.String str35 = atomikosProperties7.getLogBaseName();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties39 = atomikosProperties38.asProperties();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties45 = atomikosProperties42.asProperties();
        boolean boolean46 = properties39.contains((java.lang.Object) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.elements();
        java.lang.Object obj50 = properties45.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setService("");
        atomikosProperties51.setSerialJtaTransactions(true);
        atomikosProperties51.setEnableLogging(false);
        atomikosProperties51.logBaseName = "tmlog";
        atomikosProperties51.enableLogging = false;
        int int62 = atomikosProperties51.getMaxActives();
        boolean boolean63 = properties45.containsValue((java.lang.Object) atomikosProperties51);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties68 = atomikosProperties67.asProperties();
        properties66.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties68.keys();
        java.util.Collection<java.lang.Object> objCollection71 = properties68.values();
        atomikosProperties7.set(properties45, "hi!", (java.lang.Object) objCollection71);
        long long73 = atomikosProperties7.checkpointInterval;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 50 + "'", int62 == 50);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 500L + "'", long73 == 500L);
    }

    @Test
    public void test7597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7597");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties23 = atomikosProperties22.asProperties();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.lang.Object obj28 = properties23.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj33 = properties30.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties38 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setService("");
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setEnableLogging(false);
        java.lang.String str52 = atomikosProperties45.logBaseName;
        java.lang.Object obj53 = properties38.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) atomikosProperties45);
        boolean boolean54 = properties23.contains((java.lang.Object) properties38);
        java.lang.String str55 = properties38.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setLogBaseDir("");
        atomikosProperties56.setMaxTimeout(100L);
        long long61 = atomikosProperties56.getDefaultJtaTimeout();
        java.lang.Object obj62 = properties3.putIfAbsent((java.lang.Object) properties38, (java.lang.Object) atomikosProperties56);
        java.lang.String str63 = atomikosProperties56.service;
        boolean boolean64 = atomikosProperties56.forceShutdownOnVmExit;
        atomikosProperties56.setLogBaseName("tmlog");
        atomikosProperties56.checkpointInterval = 1L;
        atomikosProperties56.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties56.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1.0d) + "'", obj33, (-1.0d));
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str55, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test7598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7598");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = (byte) -1;
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseDir = "tmlog";
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.defaultJtaTimeout = 50;
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test7599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7599");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        properties5.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean8 = atomikosProperties7.forceShutdownOnVmExit;
        atomikosProperties7.setSerialJtaTransactions(true);
        java.lang.String str11 = atomikosProperties7.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        java.util.Properties properties14 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        long long21 = atomikosProperties16.getCheckpointInterval();
        boolean boolean22 = atomikosProperties16.threadedTwoPhaseCommit;
        atomikosProperties7.set(properties14, "tmlog", (java.lang.Object) atomikosProperties16);
        boolean boolean24 = properties5.containsValue((java.lang.Object) atomikosProperties16);
        atomikosProperties16.maxTimeout = (-1L);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setForceShutdownOnVmExit(false);
        java.util.Properties properties31 = atomikosProperties16.asProperties();
        java.util.Properties properties32 = atomikosProperties16.asProperties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.lang.Object obj34 = properties32.clone();
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(obj34);
// flaky:         org.junit.Assert.assertEquals(obj34.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7600");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        int int12 = atomikosProperties4.maxActives;
        long long13 = atomikosProperties4.getCheckpointInterval();
        long long14 = atomikosProperties4.checkpointInterval;
        boolean boolean15 = properties1.containsValue((java.lang.Object) atomikosProperties4);
        long long16 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.forceShutdownOnVmExit = true;
        long long19 = atomikosProperties4.getCheckpointInterval();
        atomikosProperties4.maxTimeout = '#';
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 500L + "'", long19 == 500L);
    }

    @Test
    public void test7601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7601");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str17 = atomikosProperties10.logBaseName;
        java.lang.Object obj18 = properties3.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties10);
        java.lang.String str19 = atomikosProperties10.logBaseDir;
        boolean boolean20 = atomikosProperties10.isEnableLogging();
        boolean boolean21 = atomikosProperties10.isSerialJtaTransactions();
        atomikosProperties10.setMaxActives((int) (short) 10);
        boolean boolean24 = atomikosProperties10.threadedTwoPhaseCommit;
        atomikosProperties10.checkpointInterval = 12L;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test7602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7602");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setMaxTimeout(12L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test7603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7603");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str17 = atomikosProperties10.logBaseName;
        java.lang.Object obj18 = properties3.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties10);
        atomikosProperties5.maxActives = (-1);
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.defaultJtaTimeout = 100;
        java.util.Properties properties25 = atomikosProperties5.asProperties();
        int int26 = atomikosProperties5.maxActives;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test7604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7604");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.service;
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties15.getProperty("hi!");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        java.util.Set<java.lang.String> strSet30 = properties29.stringPropertyNames();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        properties29.clear();
        java.util.Set<java.lang.Object> objSet33 = properties29.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setService("");
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        long long40 = atomikosProperties35.getCheckpointInterval();
        atomikosProperties35.maxTimeout = (-1);
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        java.lang.Object obj44 = properties29.putIfAbsent((java.lang.Object) atomikosProperties34, (java.lang.Object) properties43);
        atomikosProperties0.set(properties15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties43);
        atomikosProperties0.setMaxActives(10);
        long long48 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str49 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 500L + "'", long40 == 500L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
    }

    @Test
    public void test7605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7605");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.lang.String str21 = properties20.toString();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setService("");
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        atomikosProperties26.setMaxTimeout(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        boolean boolean38 = atomikosProperties33.forceShutdownOnVmExit;
        int int39 = atomikosProperties33.maxActives;
        java.lang.String str40 = atomikosProperties33.logBaseName;
        atomikosProperties33.setForceShutdownOnVmExit(true);
        java.util.Properties properties43 = atomikosProperties33.asProperties();
        boolean boolean44 = atomikosProperties33.isForceShutdownOnVmExit();
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        atomikosProperties33.setSerialJtaTransactions(false);
        java.lang.String str48 = atomikosProperties33.logBaseName;
        boolean boolean49 = properties20.replace((java.lang.Object) properties24, (java.lang.Object) 1L, (java.lang.Object) atomikosProperties33);
        java.lang.Object obj52 = properties20.setProperty("{}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties20.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties20.keys();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNotNull(objEnumeration54);
    }

    @Test
    public void test7606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7606");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        boolean boolean22 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties23 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.lang.String str28 = atomikosProperties24.logBaseName;
        boolean boolean29 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.logBaseName = "tmlog";
        atomikosProperties24.enableLogging = true;
        long long34 = atomikosProperties24.getDefaultJtaTimeout();
        boolean boolean35 = atomikosProperties24.isForceShutdownOnVmExit();
        boolean boolean36 = properties2.remove((java.lang.Object) properties7, (java.lang.Object) boolean35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties40.keys();
        java.lang.Object obj45 = properties40.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection46 = properties40.values();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj50 = properties47.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties55 = atomikosProperties54.asProperties();
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setService("");
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setService("");
        atomikosProperties62.setSerialJtaTransactions(true);
        atomikosProperties62.setEnableLogging(false);
        java.lang.String str69 = atomikosProperties62.logBaseName;
        java.lang.Object obj70 = properties55.replace((java.lang.Object) atomikosProperties57, (java.lang.Object) atomikosProperties62);
        boolean boolean71 = properties40.contains((java.lang.Object) properties55);
        java.util.Properties properties72 = new java.util.Properties(properties55);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties76 = atomikosProperties75.asProperties();
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setService("");
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setService("");
        atomikosProperties83.setSerialJtaTransactions(true);
        atomikosProperties83.setEnableLogging(false);
        java.lang.String str90 = atomikosProperties83.logBaseName;
        java.lang.Object obj91 = properties76.replace((java.lang.Object) atomikosProperties78, (java.lang.Object) atomikosProperties83);
        java.lang.String str92 = atomikosProperties83.logBaseDir;
        boolean boolean93 = atomikosProperties83.isEnableLogging();
        atomikosProperties83.threadedTwoPhaseCommit = false;
        java.lang.Object obj96 = properties2.getOrDefault((java.lang.Object) properties72, (java.lang.Object) atomikosProperties83);
        java.util.Enumeration<java.lang.Object> objEnumeration97 = properties2.elements();
        java.util.Enumeration<?> wildcardEnumeration98 = properties2.propertyNames();
        java.util.Properties properties99 = new java.util.Properties(properties2);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0d) + "'", obj50, (-1.0d));
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertNotNull(objEnumeration97);
        org.junit.Assert.assertNotNull(wildcardEnumeration98);
    }

    @Test
    public void test7607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7607");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        boolean boolean16 = properties8.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties14);
        java.util.Collection<java.lang.Object> objCollection17 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setService("");
        boolean boolean21 = atomikosProperties18.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties18.asProperties();
        properties22.clear();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.lang.Object obj31 = properties22.put((java.lang.Object) properties27, (java.lang.Object) (byte) 0);
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) objCollection17, obj31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        atomikosProperties33.service = "tmlog";
        atomikosProperties33.setSerialJtaTransactions(false);
        java.util.Properties properties42 = atomikosProperties33.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties47 = atomikosProperties46.asProperties();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties47.keys();
        java.lang.Object obj52 = properties47.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection53 = properties47.values();
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj57 = properties54.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        boolean boolean60 = properties54.containsKey((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties54.elements();
        boolean boolean62 = properties54.isEmpty();
        java.lang.Object obj65 = properties54.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj66 = properties42.remove((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertEquals("'" + obj57 + "' != '" + (-1.0d) + "'", obj57, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test7608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7608");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet1 = properties0.keySet();
        java.lang.String str3 = properties0.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        boolean boolean13 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.maxActives = (byte) -1;
        boolean boolean16 = atomikosProperties4.enableLogging;
        org.junit.Assert.assertNotNull(objSet1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test7609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7609");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        long long4 = atomikosProperties0.maxTimeout;
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        java.lang.String str8 = atomikosProperties0.service;
        atomikosProperties0.checkpointInterval = 0L;
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 300000L + "'", long4 == 300000L);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test7610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7610");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties20 = new java.util.Properties(properties14);
        boolean boolean21 = properties1.contains((java.lang.Object) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties1);
        java.lang.String str23 = properties1.toString();
        java.util.Properties properties24 = new java.util.Properties(properties1);
        java.lang.String str26 = properties1.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str23, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test7611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7611");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.service;
        boolean boolean3 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.Object obj5 = properties4.clone();
        int int6 = properties4.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        boolean boolean10 = atomikosProperties7.isEnableLogging();
        java.util.Properties properties11 = atomikosProperties7.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setService("");
        boolean boolean16 = atomikosProperties13.isEnableLogging();
        java.util.Properties properties17 = atomikosProperties13.asProperties();
        atomikosProperties13.setSerialJtaTransactions(false);
        java.lang.String str20 = atomikosProperties13.getLogBaseName();
        atomikosProperties13.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties26 = atomikosProperties23.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        atomikosProperties27.service = "tmlog";
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean36 = atomikosProperties35.forceShutdownOnVmExit;
        java.lang.String str37 = atomikosProperties35.getLogBaseDir();
        java.lang.Object obj38 = properties26.getOrDefault((java.lang.Object) atomikosProperties27, (java.lang.Object) str37);
        java.lang.Object obj39 = properties11.put((java.lang.Object) atomikosProperties13, (java.lang.Object) atomikosProperties27);
        java.util.Properties properties40 = atomikosProperties27.asProperties();
        java.lang.String str41 = atomikosProperties27.getTransactionManagerUniqueName();
        java.util.Properties properties42 = atomikosProperties27.asProperties();
        atomikosProperties27.setDefaultJtaTimeout(300000L);
        atomikosProperties27.maxActives = (short) 1;
        atomikosProperties27.service = "{tmlog=}";
        java.lang.Object obj49 = properties4.remove((java.lang.Object) atomikosProperties27);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(obj5);
// flaky:         org.junit.Assert.assertEquals(obj5.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 9 + "'", int6 == 9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test7612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7612");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties9.asProperties();
        properties13.clear();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj22 = properties13.put((java.lang.Object) properties18, (java.lang.Object) (byte) 0);
        boolean boolean23 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean28 = properties18.containsKey((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("hi!");
        int int31 = atomikosProperties24.getMaxActives();
        boolean boolean32 = properties3.equals((java.lang.Object) int31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.defaultJtaTimeout = (byte) -1;
        atomikosProperties33.setSerialJtaTransactions(false);
        java.lang.Object obj38 = properties3.get((java.lang.Object) atomikosProperties33);
        atomikosProperties33.setDefaultJtaTimeout(9L);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test7613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7613");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.setMaxActives((int) '#');
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long12 = atomikosProperties0.checkpointInterval;
        java.lang.String str13 = atomikosProperties0.getService();
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test7614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7614");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        int int3 = atomikosProperties0.maxActives;
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        boolean boolean12 = properties8.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.Object obj19 = properties8.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.service = "tmlog";
        atomikosProperties0.set(properties8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties22);
        boolean boolean32 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(false);
        boolean boolean35 = atomikosProperties0.serialJtaTransactions;
        boolean boolean36 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.util.Properties properties39 = atomikosProperties0.asProperties();
        long long40 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
    }

    @Test
    public void test7615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7615");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = ' ';
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test7616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7616");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        boolean boolean6 = atomikosProperties0.enableLogging;
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}";
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objSet11);
    }

    @Test
    public void test7617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7617");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        boolean boolean13 = atomikosProperties0.enableLogging;
        atomikosProperties0.setMaxActives(9);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test7618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7618");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        java.util.Properties properties26 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setService("");
        boolean boolean30 = atomikosProperties27.isEnableLogging();
        java.util.Properties properties31 = atomikosProperties27.asProperties();
        java.lang.Object obj32 = properties20.getOrDefault((java.lang.Object) properties26, (java.lang.Object) atomikosProperties27);
        java.util.Collection<java.lang.Object> objCollection33 = properties20.values();
        java.lang.Object obj34 = properties3.getOrDefault((java.lang.Object) objSet16, (java.lang.Object) objCollection33);
        java.util.Set<java.lang.Object> objSet35 = properties3.keySet();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNotNull(obj34);
// flaky:         org.junit.Assert.assertEquals(obj34.toString(), "[true, false, 500, true, 10000, 300000, false, 50, tmlog]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[true, false, 500, true, 10000, 300000, false, 50, tmlog]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[true, false, 500, true, 10000, 300000, false, 50, tmlog]");
        org.junit.Assert.assertNotNull(objSet35);
    }

    @Test
    public void test7619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7619");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setLogBaseName("hi!");
        int int22 = atomikosProperties15.getMaxActives();
        atomikosProperties15.setCheckpointInterval((long) (short) -1);
        atomikosProperties15.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long27 = atomikosProperties15.getDefaultJtaTimeout();
        atomikosProperties15.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean30 = atomikosProperties15.isForceShutdownOnVmExit();
        java.lang.String str31 = atomikosProperties15.service;
        atomikosProperties15.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str31, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7620");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.lang.String str8 = properties6.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.forceShutdownOnVmExit;
        atomikosProperties9.checkpointInterval = 300000L;
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties16 = atomikosProperties15.asProperties();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.keys();
        boolean boolean20 = properties16.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        boolean boolean30 = properties22.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties22.elements();
        boolean boolean33 = properties16.remove((java.lang.Object) properties22, (java.lang.Object) 50);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties38 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Collection<java.lang.Object> objCollection41 = properties38.values();
        atomikosProperties9.set(properties22, "{}", (java.lang.Object) objCollection41);
        java.util.Properties properties43 = atomikosProperties9.asProperties();
        int int44 = properties43.size();
        java.lang.Object obj45 = properties43.clone();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties6);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 9 + "'", int44 == 9);
        org.junit.Assert.assertNotNull(obj45);
// flaky:         org.junit.Assert.assertEquals(obj45.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7621");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        properties3.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties3.entrySet();
        properties3.clear();
        int int11 = properties3.size();
        java.io.InputStream inputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(inputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test7622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7622");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.lang.String str21 = properties20.toString();
        java.lang.Object obj24 = properties20.setProperty("tmlog", "");
        java.lang.String str26 = properties20.getProperty("{}");
        java.io.InputStream inputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.loadFromXML(inputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test7623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7623");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = 1L;
        boolean boolean12 = atomikosProperties8.forceShutdownOnVmExit;
        java.lang.Object obj13 = properties6.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties8);
        boolean boolean14 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.forceShutdownOnVmExit = false;
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        atomikosProperties8.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test7624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7624");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties4 = atomikosProperties3.asProperties();
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties4.keys();
        boolean boolean8 = properties4.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties12 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        java.lang.Object obj17 = properties12.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        boolean boolean19 = properties4.containsKey((java.lang.Object) properties12);
        java.util.Properties properties20 = new java.util.Properties(properties4);
        java.util.Properties properties21 = new java.util.Properties(properties4);
        java.lang.String str22 = properties21.toString();
        java.lang.Object obj25 = properties21.setProperty("tmlog", "");
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Properties properties27 = new java.util.Properties(properties21);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) properties27);
        java.lang.String str29 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setService("");
        atomikosProperties31.setSerialJtaTransactions(true);
        atomikosProperties31.setEnableLogging(false);
        atomikosProperties31.service = "tmlog";
        atomikosProperties31.threadedTwoPhaseCommit = true;
        boolean boolean42 = atomikosProperties31.isForceShutdownOnVmExit();
        java.util.Properties properties43 = atomikosProperties31.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        long long46 = atomikosProperties44.getDefaultJtaTimeout();
        long long47 = atomikosProperties44.getDefaultJtaTimeout();
        atomikosProperties44.setForceShutdownOnVmExit(false);
        java.lang.Object obj50 = properties0.getOrDefault((java.lang.Object) atomikosProperties31, (java.lang.Object) atomikosProperties44);
        java.lang.Object obj53 = properties0.setProperty("{}", "hi!");
        java.util.Set<java.lang.Object> objSet54 = properties0.keySet();
        properties0.clear();
        java.lang.String str57 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str59 = properties0.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=500, com.atomikos.icatch.log_base_dir=hi!, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=hi!}");
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test7625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7625");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        properties11.clear();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties23 = atomikosProperties22.asProperties();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        boolean boolean27 = properties23.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long30 = atomikosProperties29.defaultJtaTimeout;
        boolean boolean31 = atomikosProperties29.enableLogging;
        atomikosProperties29.setSerialJtaTransactions(true);
        java.lang.Object obj34 = properties23.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        int int35 = properties23.size();
        java.lang.Object obj38 = properties23.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean39 = properties11.containsKey((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.lang.Object> objSet40 = properties11.keySet();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objSet40);
    }

    @Test
    public void test7626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7626");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        int int9 = atomikosProperties0.maxActives;
        atomikosProperties0.maxTimeout = 9L;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setService("");
        atomikosProperties14.setSerialJtaTransactions(true);
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        properties19.clear();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties24.keys();
        boolean boolean28 = properties24.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties29 = new java.util.Properties(properties24);
        java.lang.Object obj30 = properties29.clone();
        boolean boolean31 = properties19.equals((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setService("");
        atomikosProperties33.setSerialJtaTransactions(true);
        atomikosProperties33.setEnableLogging(false);
        java.lang.String str40 = atomikosProperties33.logBaseName;
        boolean boolean41 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str42 = atomikosProperties33.service;
        boolean boolean43 = atomikosProperties33.enableLogging;
        atomikosProperties0.set(properties29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setMaxTimeout(0L);
        atomikosProperties33.setForceShutdownOnVmExit(true);
        long long49 = atomikosProperties33.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
    }

    @Test
    public void test7627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7627");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.lang.String str21 = properties20.toString();
        java.lang.Object obj24 = properties20.setProperty("tmlog", "");
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Properties properties26 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setService("");
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        long long33 = atomikosProperties28.getCheckpointInterval();
        atomikosProperties28.setMaxTimeout(0L);
        atomikosProperties28.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean39 = atomikosProperties38.forceShutdownOnVmExit;
        atomikosProperties38.checkpointInterval = 300000L;
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        boolean boolean49 = properties45.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties53 = atomikosProperties52.asProperties();
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet58 = properties57.keySet();
        boolean boolean59 = properties51.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties51.elements();
        boolean boolean62 = properties45.remove((java.lang.Object) properties51, (java.lang.Object) 50);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties67 = atomikosProperties66.asProperties();
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Collection<java.lang.Object> objCollection70 = properties67.values();
        atomikosProperties38.set(properties51, "{}", (java.lang.Object) objCollection70);
        java.util.Properties properties72 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean74 = atomikosProperties73.enableLogging;
        long long75 = atomikosProperties73.getDefaultJtaTimeout();
        atomikosProperties73.setSerialJtaTransactions(false);
        boolean boolean78 = atomikosProperties73.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties82 = atomikosProperties79.asProperties();
        java.util.Properties properties83 = atomikosProperties79.asProperties();
        java.lang.Object obj84 = properties72.putIfAbsent((java.lang.Object) boolean78, (java.lang.Object) properties83);
        boolean boolean85 = properties20.remove((java.lang.Object) atomikosProperties28, (java.lang.Object) boolean78);
        java.util.Properties properties86 = new java.util.Properties(properties20);
        java.util.Properties properties87 = new java.util.Properties(properties86);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test7628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7628");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        java.util.Properties properties36 = atomikosProperties34.asProperties();
        java.lang.Object obj37 = properties13.remove((java.lang.Object) atomikosProperties34);
        properties13.clear();
        java.util.Properties properties39 = new java.util.Properties(properties13);
        int int40 = properties39.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties44 = atomikosProperties41.asProperties();
        atomikosProperties41.setSerialJtaTransactions(true);
        java.util.Properties properties47 = atomikosProperties41.asProperties();
        atomikosProperties41.logBaseName = "";
        int int50 = atomikosProperties41.getMaxActives();
        java.util.Properties properties51 = atomikosProperties41.asProperties();
        atomikosProperties41.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str54 = atomikosProperties41.transactionManagerUniqueName;
        boolean boolean55 = properties39.containsValue((java.lang.Object) atomikosProperties41);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str54, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test7629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7629");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean10 = atomikosProperties0.enableLogging;
        atomikosProperties0.defaultJtaTimeout = 1;
        java.lang.String str13 = atomikosProperties0.getService();
        java.lang.String str14 = atomikosProperties0.logBaseDir;
        java.lang.String str15 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test7630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7630");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        boolean boolean17 = properties10.contains((java.lang.Object) properties16);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        boolean boolean25 = properties21.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        boolean boolean36 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties37 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long39 = atomikosProperties38.defaultJtaTimeout;
        boolean boolean40 = atomikosProperties38.enableLogging;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        java.util.Properties properties44 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.forceShutdownOnVmExit;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.lang.String str49 = atomikosProperties45.logBaseName;
        boolean boolean50 = atomikosProperties45.forceShutdownOnVmExit;
        int int51 = atomikosProperties45.maxActives;
        java.lang.String str52 = atomikosProperties45.logBaseName;
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        boolean boolean56 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties57 = atomikosProperties45.asProperties();
        java.lang.Object obj58 = properties21.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        java.lang.Object obj59 = properties3.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) atomikosProperties45);
        java.lang.String str60 = atomikosProperties45.logBaseDir;
        long long61 = atomikosProperties45.getMaxTimeout();
        boolean boolean62 = atomikosProperties45.threadedTwoPhaseCommit;
        java.util.Properties properties63 = atomikosProperties45.asProperties();
        atomikosProperties45.threadedTwoPhaseCommit = false;
        atomikosProperties45.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(properties63);
    }

    @Test
    public void test7631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7631");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setSerialJtaTransactions(true);
        atomikosProperties7.setEnableLogging(false);
        long long14 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long17 = atomikosProperties7.checkpointInterval;
        java.lang.Object obj18 = properties4.remove((java.lang.Object) atomikosProperties7);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        boolean boolean23 = atomikosProperties20.isEnableLogging();
        java.util.Properties properties24 = atomikosProperties20.asProperties();
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setService("");
        boolean boolean29 = atomikosProperties26.isEnableLogging();
        java.util.Properties properties30 = atomikosProperties26.asProperties();
        properties30.clear();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        java.lang.Object obj39 = properties30.put((java.lang.Object) properties35, (java.lang.Object) (byte) 0);
        boolean boolean40 = properties35.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean42 = atomikosProperties41.forceShutdownOnVmExit;
        atomikosProperties41.setSerialJtaTransactions(true);
        boolean boolean45 = properties35.containsKey((java.lang.Object) atomikosProperties41);
        atomikosProperties41.setTransactionManagerUniqueName("hi!");
        java.lang.String str48 = atomikosProperties41.logBaseDir;
        atomikosProperties41.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties51 = atomikosProperties41.asProperties();
        java.util.Set<java.lang.Object> objSet52 = properties51.keySet();
        boolean boolean53 = properties4.remove((java.lang.Object) properties25, (java.lang.Object) properties51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test7632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7632");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.setSerialJtaTransactions(false);
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setService("");
        atomikosProperties14.setSerialJtaTransactions(true);
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        atomikosProperties14.forceShutdownOnVmExit = false;
        long long22 = atomikosProperties14.defaultJtaTimeout;
        java.util.Properties properties23 = atomikosProperties14.asProperties();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties28.keys();
        boolean boolean32 = properties28.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties36 = atomikosProperties35.asProperties();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties36.keys();
        java.lang.Object obj41 = properties36.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection42 = properties36.values();
        boolean boolean43 = properties28.containsKey((java.lang.Object) properties36);
        java.util.Properties properties44 = new java.util.Properties(properties28);
        java.util.Collection<java.lang.Object> objCollection45 = properties44.values();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties44.keys();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties50 = atomikosProperties49.asProperties();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Properties properties52 = new java.util.Properties(properties50);
        java.util.Collection<java.lang.Object> objCollection53 = properties50.values();
        java.util.Properties properties54 = new java.util.Properties(properties50);
        properties50.clear();
        java.util.Properties properties56 = new java.util.Properties(properties50);
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Properties properties58 = new java.util.Properties(properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean60 = atomikosProperties59.forceShutdownOnVmExit;
        atomikosProperties59.setSerialJtaTransactions(true);
        java.lang.String str63 = atomikosProperties59.logBaseName;
        atomikosProperties59.service = "tmlog";
        atomikosProperties59.setSerialJtaTransactions(false);
        boolean boolean68 = atomikosProperties59.isForceShutdownOnVmExit();
        atomikosProperties59.threadedTwoPhaseCommit = true;
        java.lang.String str71 = atomikosProperties59.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setService("");
        int int75 = atomikosProperties72.getMaxActives();
        boolean boolean76 = atomikosProperties72.serialJtaTransactions;
        boolean boolean77 = atomikosProperties72.isForceShutdownOnVmExit();
        atomikosProperties72.logBaseName = "{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        boolean boolean80 = atomikosProperties72.threadedTwoPhaseCommit;
        boolean boolean81 = properties44.replace((java.lang.Object) properties58, (java.lang.Object) atomikosProperties59, (java.lang.Object) atomikosProperties72);
        atomikosProperties59.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.set(properties23, "{tmlog=}", (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 50 + "'", int75 == 50);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test7633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7633");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives(1);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean19 = atomikosProperties18.forceShutdownOnVmExit;
        atomikosProperties18.setSerialJtaTransactions(true);
        long long22 = atomikosProperties18.getDefaultJtaTimeout();
        java.lang.String str23 = atomikosProperties18.service;
        long long24 = atomikosProperties18.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setService("");
        boolean boolean28 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.setLogBaseName("tmlog");
        long long31 = atomikosProperties25.defaultJtaTimeout;
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        java.lang.Object obj40 = properties35.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection41 = properties35.values();
        java.util.Properties properties42 = new java.util.Properties();
        java.lang.Object obj45 = properties42.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Properties properties47 = new java.util.Properties(properties35);
        java.lang.String str48 = properties35.toString();
        java.util.Enumeration<?> wildcardEnumeration49 = properties35.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setService("");
        boolean boolean54 = atomikosProperties51.isEnableLogging();
        java.util.Properties properties55 = atomikosProperties51.asProperties();
        properties55.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties55.elements();
        atomikosProperties25.set(properties35, "tmlog", (java.lang.Object) objEnumeration57);
        boolean boolean59 = atomikosProperties25.isThreadedTwoPhaseCommit();
        java.lang.Object obj60 = properties17.put((java.lang.Object) long24, (java.lang.Object) boolean59);
        java.util.Properties properties61 = new java.util.Properties(properties17);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertEquals("'" + obj45 + "' != '" + (-1.0d) + "'", obj45, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str48, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(wildcardEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
    }

    @Test
    public void test7634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7634");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        atomikosProperties0.setService("hi!");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test7635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7635");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Enumeration<?> wildcardEnumeration6 = properties3.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.lang.String str8 = properties3.toString();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties12 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        boolean boolean16 = properties12.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.lang.Object obj25 = properties20.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        boolean boolean27 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties28 = new java.util.Properties(properties12);
        java.lang.Object obj29 = properties28.clone();
        java.util.Collection<java.lang.Object> objCollection30 = properties28.values();
        java.lang.Object obj31 = properties3.get((java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setService("");
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        long long37 = atomikosProperties32.getCheckpointInterval();
        atomikosProperties32.setMaxTimeout(0L);
        atomikosProperties32.forceShutdownOnVmExit = false;
        int int42 = atomikosProperties32.maxActives;
        atomikosProperties32.setEnableLogging(true);
        boolean boolean45 = properties28.equals((java.lang.Object) atomikosProperties32);
        int int46 = properties28.size();
        java.lang.String str48 = properties28.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test7636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7636");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.maxTimeout = (-1);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long10 = atomikosProperties9.defaultJtaTimeout;
        boolean boolean11 = atomikosProperties9.enableLogging;
        atomikosProperties9.setSerialJtaTransactions(true);
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties8.elements();
        java.util.Properties properties17 = new java.util.Properties(properties8);
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.checkpointInterval = 300000L;
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        boolean boolean31 = properties27.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        boolean boolean41 = properties33.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties33.elements();
        boolean boolean44 = properties27.remove((java.lang.Object) properties33, (java.lang.Object) 50);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties49 = atomikosProperties48.asProperties();
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection52 = properties49.values();
        atomikosProperties20.set(properties33, "{}", (java.lang.Object) objCollection52);
        java.lang.String str54 = atomikosProperties20.logBaseDir;
        atomikosProperties20.serialJtaTransactions = false;
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties61 = atomikosProperties20.asProperties();
        boolean boolean62 = atomikosProperties20.threadedTwoPhaseCommit;
        java.lang.String str63 = atomikosProperties20.transactionManagerUniqueName;
        boolean boolean64 = properties18.containsKey((java.lang.Object) atomikosProperties20);
        atomikosProperties20.setMaxTimeout(35L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test7637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7637");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties34 = atomikosProperties31.asProperties();
        boolean boolean35 = properties28.contains((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties39 = atomikosProperties38.asProperties();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        boolean boolean43 = properties39.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.lang.Object obj45 = properties13.replace((java.lang.Object) properties34, (java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = atomikosProperties46.forceShutdownOnVmExit;
        atomikosProperties46.setSerialJtaTransactions(true);
        java.lang.String str50 = atomikosProperties46.logBaseName;
        boolean boolean51 = atomikosProperties46.forceShutdownOnVmExit;
        int int52 = atomikosProperties46.maxActives;
        java.lang.String str53 = atomikosProperties46.logBaseName;
        atomikosProperties46.setForceShutdownOnVmExit(true);
        java.lang.Object obj56 = properties34.remove((java.lang.Object) atomikosProperties46);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties60 = atomikosProperties59.asProperties();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Collection<java.lang.Object> objCollection62 = properties58.values();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) atomikosProperties46, (java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties65 = atomikosProperties64.asProperties();
        long long66 = atomikosProperties64.getDefaultJtaTimeout();
        atomikosProperties64.logBaseName = "tmlog";
        boolean boolean69 = atomikosProperties64.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setLogBaseDir("");
        atomikosProperties70.setMaxTimeout(100L);
        long long75 = atomikosProperties70.getDefaultJtaTimeout();
        atomikosProperties70.setSerialJtaTransactions(false);
        java.lang.Object obj78 = properties58.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosProperties70);
        atomikosProperties64.serialJtaTransactions = false;
        atomikosProperties64.service = "tmlog";
        boolean boolean83 = atomikosProperties64.isEnableLogging();
        atomikosProperties64.enableLogging = false;
        atomikosProperties64.checkpointInterval = 35L;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test7638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7638");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet12 = properties11.entrySet();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.lang.String str15 = properties13.getProperty("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEntrySet12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test7639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7639");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        java.util.Properties properties42 = atomikosProperties27.asProperties();
        boolean boolean43 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setService("");
        boolean boolean47 = atomikosProperties44.isEnableLogging();
        java.util.Properties properties48 = atomikosProperties44.asProperties();
        java.util.Properties properties49 = new java.util.Properties(properties48);
        properties48.clear();
        boolean boolean51 = properties42.contains((java.lang.Object) properties48);
        java.util.Properties properties52 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
    }

    @Test
    public void test7640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7640");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet1 = properties0.keySet();
        java.lang.String str3 = properties0.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        boolean boolean13 = atomikosProperties4.forceShutdownOnVmExit;
        long long14 = atomikosProperties4.getMaxTimeout();
        java.lang.String str15 = atomikosProperties4.logBaseDir;
        atomikosProperties4.defaultJtaTimeout = 52L;
        org.junit.Assert.assertNotNull(objSet1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test7641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7641");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        boolean boolean7 = properties3.isEmpty();
        java.io.InputStream inputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(inputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test7642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7642");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "tmlog";
        java.lang.String str8 = atomikosProperties0.getService();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        long long11 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test7643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7643");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str17 = atomikosProperties10.logBaseName;
        java.lang.Object obj18 = properties3.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties19 = atomikosProperties10.asProperties();
        atomikosProperties10.setLogBaseName("");
        java.lang.String str22 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.checkpointInterval = (byte) -1;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test7644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7644");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setService("");
        atomikosProperties4.setSerialJtaTransactions(true);
        atomikosProperties4.setEnableLogging(false);
        atomikosProperties4.logBaseName = "tmlog";
        atomikosProperties4.maxActives = 1;
        atomikosProperties4.setEnableLogging(true);
        java.lang.String str17 = atomikosProperties4.service;
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        boolean boolean25 = properties21.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet34 = properties33.keySet();
        boolean boolean35 = properties27.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties27.elements();
        boolean boolean38 = properties21.remove((java.lang.Object) properties27, (java.lang.Object) 50);
        properties21.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties21.elements();
        java.util.Collection<java.lang.Object> objCollection41 = properties21.values();
        java.lang.Object obj42 = properties3.putIfAbsent((java.lang.Object) atomikosProperties4, (java.lang.Object) objCollection41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties44 = atomikosProperties43.asProperties();
        atomikosProperties43.checkpointInterval = 1L;
        boolean boolean47 = atomikosProperties43.forceShutdownOnVmExit;
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        long long49 = atomikosProperties43.maxTimeout;
        java.lang.Object obj50 = properties3.get((java.lang.Object) atomikosProperties43);
        java.util.Properties properties51 = atomikosProperties43.asProperties();
        atomikosProperties43.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(properties51);
    }

    @Test
    public void test7645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7645");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        boolean boolean9 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties19 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.lang.String str24 = atomikosProperties20.logBaseName;
        atomikosProperties20.service = "tmlog";
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.forceShutdownOnVmExit;
        java.lang.String str30 = atomikosProperties28.getLogBaseDir();
        java.lang.Object obj31 = properties19.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) str30);
        java.lang.Object obj32 = properties4.put((java.lang.Object) atomikosProperties6, (java.lang.Object) atomikosProperties20);
        java.util.Properties properties33 = new java.util.Properties(properties4);
        java.lang.String str35 = properties33.getProperty("{}");
        java.util.Properties properties36 = new java.util.Properties(properties33);
        properties33.clear();
        java.lang.Object obj38 = properties33.clone();
        java.lang.Object obj39 = properties33.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
    }

    @Test
    public void test7646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7646");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        int int8 = atomikosProperties0.maxActives;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        long long11 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean16 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test7647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7647");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        boolean boolean17 = atomikosProperties9.forceShutdownOnVmExit;
        boolean boolean18 = atomikosProperties9.serialJtaTransactions;
        atomikosProperties9.serialJtaTransactions = true;
        atomikosProperties9.enableLogging = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test7648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7648");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Properties properties4 = new java.util.Properties(properties1);
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean9 = atomikosProperties8.forceShutdownOnVmExit;
        atomikosProperties8.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties8.logBaseName;
        atomikosProperties8.service = "tmlog";
        atomikosProperties8.setSerialJtaTransactions(false);
        boolean boolean17 = atomikosProperties8.isForceShutdownOnVmExit();
        java.lang.Object obj18 = properties7.remove((java.lang.Object) atomikosProperties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setService("");
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        properties24.clear();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties30 = atomikosProperties29.asProperties();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        boolean boolean34 = properties30.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long37 = atomikosProperties36.defaultJtaTimeout;
        boolean boolean38 = atomikosProperties36.enableLogging;
        atomikosProperties36.setSerialJtaTransactions(true);
        java.lang.Object obj41 = properties30.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean42 = properties24.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.lang.Object obj51 = properties46.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties52 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setService("");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.util.Properties properties59 = atomikosProperties54.asProperties();
        properties59.clear();
        boolean boolean61 = properties24.replace((java.lang.Object) properties46, (java.lang.Object) 0.0d, (java.lang.Object) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties24.elements();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties66 = atomikosProperties65.asProperties();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties66.keys();
        java.lang.Object obj71 = properties66.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection72 = properties66.values();
        boolean boolean73 = properties24.containsKey((java.lang.Object) properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties24.keys();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration74);
    }

    @Test
    public void test7649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7649");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str12 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7650");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxActives((int) (short) 1);
        atomikosProperties0.forceShutdownOnVmExit = false;
        int int11 = atomikosProperties0.maxActives;
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test7651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7651");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Set<java.lang.String> strSet10 = properties3.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties3.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        boolean boolean19 = properties15.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties23 = atomikosProperties22.asProperties();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.lang.Object obj28 = properties23.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        boolean boolean30 = properties15.containsKey((java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean32 = atomikosProperties31.forceShutdownOnVmExit;
        atomikosProperties31.setSerialJtaTransactions(true);
        java.lang.String str35 = atomikosProperties31.logBaseName;
        atomikosProperties31.service = "tmlog";
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        atomikosProperties31.service = "";
        java.lang.Object obj41 = properties3.replace((java.lang.Object) boolean30, (java.lang.Object) atomikosProperties31);
        atomikosProperties31.setDefaultJtaTimeout((long) (-1));
        atomikosProperties31.maxTimeout = 32L;
        atomikosProperties31.logBaseDir = "{tmlog=}";
        atomikosProperties31.maxTimeout = (byte) 1;
        java.lang.String str50 = atomikosProperties31.getTransactionManagerUniqueName();
        atomikosProperties31.defaultJtaTimeout = '4';
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test7652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7652");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        long long10 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test7653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7653");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        int int9 = atomikosProperties0.maxActives;
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test7654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7654");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        java.util.Set<java.lang.String> strSet19 = properties18.stringPropertyNames();
        java.util.Properties properties20 = new java.util.Properties(properties18);
        boolean boolean21 = properties15.contains((java.lang.Object) properties20);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = new java.util.Properties(properties25);
        java.lang.String str30 = properties25.getProperty("hi!");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean35 = atomikosProperties34.enableLogging;
        atomikosProperties34.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        long long43 = atomikosProperties38.getCheckpointInterval();
        atomikosProperties38.maxTimeout = (-1);
        java.util.Properties properties46 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long48 = atomikosProperties47.defaultJtaTimeout;
        boolean boolean49 = atomikosProperties47.enableLogging;
        atomikosProperties47.setSerialJtaTransactions(true);
        java.util.Properties properties52 = atomikosProperties47.asProperties();
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties46.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean56 = atomikosProperties55.forceShutdownOnVmExit;
        atomikosProperties55.setSerialJtaTransactions(true);
        java.lang.String str59 = atomikosProperties55.logBaseName;
        boolean boolean60 = atomikosProperties55.forceShutdownOnVmExit;
        int int61 = atomikosProperties55.maxActives;
        java.lang.String str62 = atomikosProperties55.logBaseName;
        atomikosProperties55.setForceShutdownOnVmExit(true);
        java.util.Properties properties65 = atomikosProperties55.asProperties();
        boolean boolean66 = atomikosProperties55.isForceShutdownOnVmExit();
        java.util.Properties properties67 = atomikosProperties55.asProperties();
        boolean boolean68 = properties32.replace((java.lang.Object) (byte) 1, (java.lang.Object) properties46, (java.lang.Object) atomikosProperties55);
        java.util.Properties properties69 = new java.util.Properties(properties32);
        boolean boolean70 = properties25.equals((java.lang.Object) properties32);
        java.util.Collection<java.lang.Object> objCollection71 = properties25.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setService("");
        atomikosProperties72.setSerialJtaTransactions(true);
        java.util.Properties properties77 = atomikosProperties72.asProperties();
        java.util.Properties properties78 = atomikosProperties72.asProperties();
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.transactionManagerUniqueName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setService("");
        atomikosProperties83.setSerialJtaTransactions(true);
        atomikosProperties83.setEnableLogging(false);
        atomikosProperties83.logBaseName = "tmlog";
        atomikosProperties83.maxActives = 1;
        boolean boolean94 = properties20.replace((java.lang.Object) properties25, (java.lang.Object) "", (java.lang.Object) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet95 = properties20.entrySet();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 500L + "'", long43 == 500L);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objEntrySet95);
    }

    @Test
    public void test7655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7655");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objCollection12);
    }

    @Test
    public void test7656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7656");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("tmlog");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseName("{}");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = properties9.toString();
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.lang.Object obj12 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean14 = atomikosProperties13.forceShutdownOnVmExit;
        atomikosProperties13.serialJtaTransactions = false;
        long long17 = atomikosProperties13.maxTimeout;
        java.util.Properties properties18 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setLogBaseDir("");
        atomikosProperties19.setService("");
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        boolean boolean26 = atomikosProperties19.enableLogging;
        boolean boolean27 = atomikosProperties19.isForceShutdownOnVmExit();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties31 = atomikosProperties30.asProperties();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties31.keys();
        boolean boolean35 = properties31.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties39 = atomikosProperties38.asProperties();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet44 = properties43.keySet();
        boolean boolean45 = properties37.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties37.elements();
        boolean boolean48 = properties31.remove((java.lang.Object) properties37, (java.lang.Object) 50);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties52 = atomikosProperties51.asProperties();
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Properties properties54 = new java.util.Properties(properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties58 = atomikosProperties55.asProperties();
        boolean boolean59 = properties52.contains((java.lang.Object) properties58);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties63 = atomikosProperties62.asProperties();
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties63.keys();
        boolean boolean67 = properties63.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties68 = new java.util.Properties(properties63);
        java.lang.Object obj69 = properties37.replace((java.lang.Object) properties58, (java.lang.Object) properties68);
        java.util.Properties properties70 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setService("");
        atomikosProperties72.logBaseDir = "hi!";
        atomikosProperties72.setMaxTimeout(500L);
        atomikosProperties72.maxTimeout = (-1L);
        atomikosProperties72.serialJtaTransactions = true;
        boolean boolean83 = atomikosProperties72.serialJtaTransactions;
        java.util.Properties properties84 = atomikosProperties72.asProperties();
        boolean boolean85 = atomikosProperties72.isEnableLogging();
        atomikosProperties72.setEnableLogging(false);
        boolean boolean88 = properties70.equals((java.lang.Object) atomikosProperties72);
        java.util.Enumeration<?> wildcardEnumeration89 = properties70.propertyNames();
        java.lang.Object obj90 = properties18.put((java.lang.Object) atomikosProperties19, (java.lang.Object) properties70);
        properties18.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj92 = properties11.replace(obj12, (java.lang.Object) properties18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}" + "'", str10, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration89);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test7657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7657");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean12 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.serialJtaTransactions = true;
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test7658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7658");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setService("");
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        long long16 = atomikosProperties11.getCheckpointInterval();
        atomikosProperties11.setMaxTimeout(0L);
        atomikosProperties11.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties11.defaultJtaTimeout = 9L;
        atomikosProperties11.serialJtaTransactions = true;
        java.util.Properties properties25 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.defaultJtaTimeout = (byte) -1;
        int int29 = atomikosProperties26.maxActives;
        boolean boolean30 = atomikosProperties26.isForceShutdownOnVmExit();
        boolean boolean31 = atomikosProperties26.threadedTwoPhaseCommit;
        long long32 = atomikosProperties26.defaultJtaTimeout;
        java.lang.Object obj33 = properties9.getOrDefault((java.lang.Object) properties25, (java.lang.Object) long32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setLogBaseDir("");
        atomikosProperties34.setMaxTimeout(100L);
        long long39 = atomikosProperties34.defaultJtaTimeout;
        java.lang.Object obj40 = properties25.remove((java.lang.Object) long39);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.storeToXML(outputStream41, "{[com.atomikos.icatch.enable_logging, com.atomikos.icatch.force_shutdown_on_vm_exit, com.atomikos.icatch.checkpoint_interval, com.atomikos.icatch.serial_jta_transactions, com.atomikos.icatch.default_jta_timeout, com.atomikos.icatch.max_timeout, com.atomikos.icatch.service, com.atomikos.icatch.threaded_2pc, com.atomikos.icatch.max_actives, com.atomikos.icatch.log_base_name]=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1L) + "'", obj33, (-1L));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test7659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7659");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test7660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7660");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.serialJtaTransactions = false;
        java.lang.String str11 = atomikosProperties0.logBaseName;
        int int12 = atomikosProperties0.maxActives;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.threadedTwoPhaseCommit = true;
        int int17 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
    }

    @Test
    public void test7661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7661");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        boolean boolean42 = atomikosProperties27.enableLogging;
        atomikosProperties27.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties27.forceShutdownOnVmExit = true;
        atomikosProperties27.maxActives = (byte) 1;
        atomikosProperties27.setEnableLogging(true);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test7662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7662");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str6 = atomikosProperties0.getService();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean9 = atomikosProperties8.forceShutdownOnVmExit;
        atomikosProperties8.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties8.logBaseName;
        boolean boolean13 = atomikosProperties8.forceShutdownOnVmExit;
        int int14 = atomikosProperties8.maxActives;
        java.lang.String str15 = atomikosProperties8.logBaseName;
        atomikosProperties8.transactionManagerUniqueName = "hi!";
        atomikosProperties8.setMaxActives((int) (short) 10);
        java.util.Properties properties20 = atomikosProperties8.asProperties();
        java.util.Properties properties21 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long23 = atomikosProperties22.defaultJtaTimeout;
        boolean boolean24 = atomikosProperties22.enableLogging;
        atomikosProperties22.setSerialJtaTransactions(true);
        java.util.Properties properties27 = atomikosProperties22.asProperties();
        java.util.Properties properties28 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties31 = atomikosProperties30.asProperties();
        atomikosProperties30.checkpointInterval = 1L;
        boolean boolean34 = atomikosProperties30.forceShutdownOnVmExit;
        java.lang.Object obj35 = properties28.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties30);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties39 = atomikosProperties38.asProperties();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        java.lang.Object obj44 = properties39.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection45 = properties39.values();
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj49 = properties46.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Properties properties51 = new java.util.Properties(properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean53 = atomikosProperties52.forceShutdownOnVmExit;
        atomikosProperties52.setSerialJtaTransactions(true);
        java.lang.String str56 = atomikosProperties52.logBaseName;
        atomikosProperties52.service = "tmlog";
        boolean boolean59 = properties51.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties60 = new java.util.Properties(properties51);
        boolean boolean61 = properties28.containsKey((java.lang.Object) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setService("");
        boolean boolean66 = atomikosProperties63.isEnableLogging();
        java.util.Properties properties67 = atomikosProperties63.asProperties();
        boolean boolean68 = atomikosProperties63.isThreadedTwoPhaseCommit();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        atomikosProperties8.set(properties28, "tmlog", (java.lang.Object) properties69);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties74 = atomikosProperties73.asProperties();
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        java.util.Collection<java.lang.Object> objCollection77 = properties74.values();
        java.util.Properties properties78 = new java.util.Properties(properties74);
        java.util.Properties properties79 = new java.util.Properties(properties74);
        java.lang.Object obj80 = properties7.put((java.lang.Object) properties69, (java.lang.Object) properties74);
        java.lang.String str82 = properties69.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet83 = properties69.entrySet();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + (-1.0d) + "'", obj49, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(objEntrySet83);
    }

    @Test
    public void test7663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7663");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties9.asProperties();
        properties13.clear();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj22 = properties13.put((java.lang.Object) properties18, (java.lang.Object) (byte) 0);
        boolean boolean23 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean28 = properties18.containsKey((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("hi!");
        int int31 = atomikosProperties24.getMaxActives();
        boolean boolean32 = properties3.equals((java.lang.Object) int31);
        java.util.Properties properties33 = new java.util.Properties(properties3);
        java.util.Properties properties34 = new java.util.Properties(properties3);
        java.io.OutputStream outputStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.storeToXML(outputStream35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test7664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7664");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test7665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7665");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxActives(1);
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean17 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.maxActives = (short) 1;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test7666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7666");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setService("");
        atomikosProperties25.setSerialJtaTransactions(true);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str32 = atomikosProperties25.logBaseName;
        java.lang.Object obj33 = properties18.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties25);
        boolean boolean34 = properties3.contains((java.lang.Object) properties18);
        java.util.Properties properties35 = new java.util.Properties(properties18);
        java.util.Properties properties36 = new java.util.Properties(properties18);
        java.lang.Object obj37 = properties18.clone();
        boolean boolean38 = properties18.isEmpty();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj37);
// flaky:         org.junit.Assert.assertEquals(obj37.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test7667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7667");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.io.InputStream inputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.loadFromXML(inputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test7668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7668");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Enumeration<?> wildcardEnumeration6 = properties3.propertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        int int8 = properties3.size();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 9 + "'", int8 == 9);
    }

    @Test
    public void test7669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7669");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Set<java.lang.String> strSet10 = properties3.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties3.elements();
        java.lang.String str12 = properties3.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties3.entrySet();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str12, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEntrySet13);
    }

    @Test
    public void test7670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7670");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        boolean boolean22 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties23 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.lang.String str28 = atomikosProperties24.logBaseName;
        boolean boolean29 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.logBaseName = "tmlog";
        atomikosProperties24.enableLogging = true;
        long long34 = atomikosProperties24.getDefaultJtaTimeout();
        boolean boolean35 = atomikosProperties24.isForceShutdownOnVmExit();
        boolean boolean36 = properties2.remove((java.lang.Object) properties7, (java.lang.Object) boolean35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties40.keys();
        java.lang.Object obj45 = properties40.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection46 = properties40.values();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj50 = properties47.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Properties properties52 = new java.util.Properties(properties40);
        java.lang.Object obj53 = properties52.clone();
        boolean boolean54 = properties52.isEmpty();
        boolean boolean55 = properties2.equals((java.lang.Object) properties52);
        java.lang.String str57 = properties2.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.util.Properties properties58 = new java.util.Properties(properties2);
        java.util.Collection<java.lang.Object> objCollection59 = properties58.values();
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties58.storeToXML(outputStream60, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0d) + "'", obj50, (-1.0d));
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(objCollection59);
    }

    @Test
    public void test7671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7671");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long4 = atomikosProperties3.defaultJtaTimeout;
        boolean boolean5 = atomikosProperties3.enableLogging;
        atomikosProperties3.setSerialJtaTransactions(true);
        java.util.Properties properties8 = atomikosProperties3.asProperties();
        atomikosProperties3.service = "tmlog";
        atomikosProperties3.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties16 = atomikosProperties15.asProperties();
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setService("");
        atomikosProperties19.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean28 = properties16.remove((java.lang.Object) atomikosProperties19, (java.lang.Object) true);
        java.util.Set<java.lang.String> strSet29 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setService("");
        atomikosProperties30.setSerialJtaTransactions(true);
        atomikosProperties30.setEnableLogging(false);
        atomikosProperties30.service = "tmlog";
        atomikosProperties30.threadedTwoPhaseCommit = true;
        boolean boolean41 = atomikosProperties30.isForceShutdownOnVmExit();
        java.util.Properties properties42 = atomikosProperties30.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean44 = atomikosProperties43.forceShutdownOnVmExit;
        atomikosProperties43.setSerialJtaTransactions(true);
        java.lang.String str47 = atomikosProperties43.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties49 = atomikosProperties48.asProperties();
        java.util.Properties properties50 = atomikosProperties48.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setService("");
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        long long57 = atomikosProperties52.getCheckpointInterval();
        boolean boolean58 = atomikosProperties52.threadedTwoPhaseCommit;
        atomikosProperties43.set(properties50, "tmlog", (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setLogBaseName("{}");
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties65 = atomikosProperties64.asProperties();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Properties properties67 = new java.util.Properties(properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties71 = atomikosProperties68.asProperties();
        boolean boolean72 = properties65.contains((java.lang.Object) properties71);
        atomikosProperties52.set(properties71, "tmlog", (java.lang.Object) 'a');
        java.util.Properties properties76 = atomikosProperties52.asProperties();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties80 = atomikosProperties79.asProperties();
        properties78.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties80);
        java.util.Properties properties84 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet85 = properties84.keySet();
        boolean boolean86 = properties78.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties84);
        boolean boolean87 = properties16.replace((java.lang.Object) atomikosProperties30, (java.lang.Object) properties76, (java.lang.Object) true);
        java.util.Properties properties88 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties16.elements();
        java.lang.Object obj90 = properties1.put((java.lang.Object) atomikosProperties3, (java.lang.Object) objEnumeration89);
        atomikosProperties3.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertNotNull(objSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test7672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7672");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setMaxTimeout(0L);
        java.util.Properties properties19 = atomikosProperties9.asProperties();
        java.lang.Object obj20 = properties19.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties19.entrySet();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=0, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=0, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=0, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEntrySet21);
    }

    @Test
    public void test7673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7673");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.lang.String str16 = properties3.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties17.getCheckpointInterval();
        atomikosProperties17.maxTimeout = (-1);
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long27 = atomikosProperties26.defaultJtaTimeout;
        boolean boolean28 = atomikosProperties26.enableLogging;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.util.Properties properties31 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties25.elements();
        java.util.Properties properties34 = new java.util.Properties(properties25);
        java.lang.Object obj35 = properties3.get((java.lang.Object) properties25);
        java.util.Set<java.lang.String> strSet36 = properties3.stringPropertyNames();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Properties properties43 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setService("");
        atomikosProperties44.setSerialJtaTransactions(true);
        atomikosProperties44.setEnableLogging(false);
        atomikosProperties44.logBaseName = "tmlog";
        int int53 = atomikosProperties44.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setService("");
        atomikosProperties54.setSerialJtaTransactions(true);
        atomikosProperties54.setEnableLogging(false);
        atomikosProperties54.logBaseName = "tmlog";
        atomikosProperties54.maxActives = 1;
        atomikosProperties54.setEnableLogging(true);
        java.lang.String str67 = atomikosProperties54.service;
        atomikosProperties54.setCheckpointInterval((long) (byte) 0);
        long long70 = atomikosProperties54.getDefaultJtaTimeout();
        boolean boolean71 = properties43.remove((java.lang.Object) atomikosProperties44, (java.lang.Object) long70);
        boolean boolean72 = properties3.containsValue((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setForceShutdownOnVmExit(false);
        long long75 = atomikosProperties44.getDefaultJtaTimeout();
        atomikosProperties44.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 50 + "'", int53 == 50);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
    }

    @Test
    public void test7674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7674");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        boolean boolean17 = atomikosProperties9.forceShutdownOnVmExit;
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.logBaseName = "";
        boolean boolean22 = atomikosProperties9.isThreadedTwoPhaseCommit();
        atomikosProperties9.enableLogging = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test7675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7675");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        boolean boolean22 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties23 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.lang.String str28 = atomikosProperties24.logBaseName;
        boolean boolean29 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.logBaseName = "tmlog";
        atomikosProperties24.enableLogging = true;
        long long34 = atomikosProperties24.getDefaultJtaTimeout();
        boolean boolean35 = atomikosProperties24.isForceShutdownOnVmExit();
        boolean boolean36 = properties2.remove((java.lang.Object) properties7, (java.lang.Object) boolean35);
        java.util.Properties properties37 = new java.util.Properties(properties7);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        boolean boolean45 = properties41.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties46 = new java.util.Properties(properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean48 = atomikosProperties47.forceShutdownOnVmExit;
        atomikosProperties47.setSerialJtaTransactions(true);
        java.lang.String str51 = atomikosProperties47.logBaseName;
        boolean boolean52 = atomikosProperties47.forceShutdownOnVmExit;
        atomikosProperties47.enableLogging = false;
        boolean boolean55 = atomikosProperties47.isForceShutdownOnVmExit();
        boolean boolean56 = properties46.containsValue((java.lang.Object) atomikosProperties47);
        java.util.Properties properties57 = new java.util.Properties(properties46);
        java.util.Enumeration<?> wildcardEnumeration58 = properties46.propertyNames();
        boolean boolean59 = properties7.containsValue((java.lang.Object) wildcardEnumeration58);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test7676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7676");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        atomikosProperties27.maxActives = (short) -1;
        java.lang.Class<?> wildcardClass44 = atomikosProperties27.getClass();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test7677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7677");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        atomikosProperties6.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.setSerialJtaTransactions(true);
        boolean boolean15 = properties3.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) true);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties19 = atomikosProperties18.asProperties();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        boolean boolean23 = properties19.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.lang.Object obj32 = properties27.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection33 = properties27.values();
        boolean boolean34 = properties19.containsKey((java.lang.Object) properties27);
        java.util.Properties properties35 = new java.util.Properties(properties19);
        java.lang.Object obj36 = properties35.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties39 = atomikosProperties38.asProperties();
        long long40 = atomikosProperties38.getDefaultJtaTimeout();
        atomikosProperties38.setCheckpointInterval(0L);
        atomikosProperties38.enableLogging = false;
        atomikosProperties38.setCheckpointInterval(52L);
        atomikosProperties6.set(properties35, "{}", (java.lang.Object) 52L);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties51 = atomikosProperties50.asProperties();
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Enumeration<?> wildcardEnumeration54 = properties51.propertyNames();
        java.util.Properties properties55 = new java.util.Properties(properties51);
        java.util.Enumeration<?> wildcardEnumeration56 = properties51.propertyNames();
        java.lang.Object obj57 = properties35.remove((java.lang.Object) wildcardEnumeration56);
        java.lang.Object obj58 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean60 = atomikosProperties59.forceShutdownOnVmExit;
        atomikosProperties59.setSerialJtaTransactions(true);
        java.lang.String str63 = atomikosProperties59.logBaseName;
        boolean boolean64 = atomikosProperties59.forceShutdownOnVmExit;
        java.lang.String str65 = atomikosProperties59.getLogBaseDir();
        atomikosProperties59.threadedTwoPhaseCommit = false;
        java.util.Properties properties68 = atomikosProperties59.asProperties();
        java.lang.String str70 = properties68.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj71 = properties68.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = properties35.getOrDefault(obj58, obj71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(obj71);
// flaky:         org.junit.Assert.assertEquals(obj71.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7678");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        java.util.Properties properties9 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        boolean boolean13 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.lang.Object obj15 = properties3.getOrDefault((java.lang.Object) properties9, (java.lang.Object) atomikosProperties10);
        java.lang.String str17 = properties9.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Properties properties24 = new java.util.Properties(properties21);
        java.util.Enumeration<?> wildcardEnumeration25 = properties24.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setService("");
        atomikosProperties26.setSerialJtaTransactions(true);
        atomikosProperties26.setEnableLogging(false);
        java.lang.String str33 = atomikosProperties26.logBaseName;
        int int34 = atomikosProperties26.maxActives;
        atomikosProperties26.setEnableLogging(false);
        java.util.Properties properties37 = atomikosProperties26.asProperties();
        java.lang.Object obj38 = properties24.remove((java.lang.Object) properties37);
        java.util.Set<java.lang.Object> objSet39 = properties37.keySet();
        java.util.Properties properties40 = new java.util.Properties(properties37);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties40.entrySet();
        boolean boolean42 = properties9.contains((java.lang.Object) properties40);
        boolean boolean43 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setService("");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        long long49 = atomikosProperties44.getCheckpointInterval();
        atomikosProperties44.setMaxTimeout(0L);
        long long52 = atomikosProperties44.defaultJtaTimeout;
        java.lang.String str53 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str56 = atomikosProperties44.getService();
        atomikosProperties44.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean60 = atomikosProperties59.forceShutdownOnVmExit;
        atomikosProperties59.setSerialJtaTransactions(true);
        java.lang.String str63 = atomikosProperties59.logBaseName;
        boolean boolean64 = atomikosProperties59.forceShutdownOnVmExit;
        int int65 = atomikosProperties59.maxActives;
        atomikosProperties59.setService("hi!");
        java.util.Properties properties68 = atomikosProperties59.asProperties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties68.entrySet();
        boolean boolean71 = properties9.remove((java.lang.Object) false, (java.lang.Object) objEntrySet70);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 500L + "'", long49 == 500L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 10000L + "'", long52 == 10000L);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test7679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7679");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        long long10 = atomikosProperties5.getCheckpointInterval();
        atomikosProperties5.maxTimeout = (-1);
        java.util.Properties properties13 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties13.elements();
        java.util.Properties properties22 = new java.util.Properties(properties13);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties28.keys();
        boolean boolean32 = properties28.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties36 = atomikosProperties35.asProperties();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties36.keys();
        java.lang.Object obj41 = properties36.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection42 = properties36.values();
        boolean boolean43 = properties28.containsKey((java.lang.Object) properties36);
        java.util.Properties properties44 = new java.util.Properties(properties28);
        java.util.Properties properties45 = new java.util.Properties(properties28);
        java.lang.Object obj48 = properties28.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setService("");
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        long long54 = atomikosProperties49.getCheckpointInterval();
        atomikosProperties49.setMaxTimeout(0L);
        atomikosProperties49.forceShutdownOnVmExit = false;
        java.lang.Object obj59 = properties28.get((java.lang.Object) atomikosProperties49);
        java.lang.String str61 = properties28.getProperty("hi!");
        java.util.Properties properties62 = new java.util.Properties(properties28);
        atomikosProperties0.set(properties23, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}", (java.lang.Object) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setService("");
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        long long69 = atomikosProperties64.getCheckpointInterval();
        atomikosProperties64.maxTimeout = (-1);
        atomikosProperties64.setCheckpointInterval((long) 9);
        atomikosProperties64.maxActives = 'a';
        java.lang.String str76 = atomikosProperties64.getTransactionManagerUniqueName();
        boolean boolean77 = properties62.contains((java.lang.Object) atomikosProperties64);
        atomikosProperties64.logBaseName = "";
        atomikosProperties64.setDefaultJtaTimeout((long) (short) 0);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 500L + "'", long54 == 500L);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 500L + "'", long69 == 500L);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test7680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7680");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        properties5.clear();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        boolean boolean15 = properties11.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long18 = atomikosProperties17.defaultJtaTimeout;
        boolean boolean19 = atomikosProperties17.enableLogging;
        atomikosProperties17.setSerialJtaTransactions(true);
        java.lang.Object obj22 = properties11.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean23 = properties5.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.lang.Object obj32 = properties27.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties33 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setService("");
        atomikosProperties35.setSerialJtaTransactions(true);
        java.util.Properties properties40 = atomikosProperties35.asProperties();
        properties40.clear();
        boolean boolean42 = properties5.replace((java.lang.Object) properties27, (java.lang.Object) 0.0d, (java.lang.Object) properties40);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet51 = properties50.keySet();
        boolean boolean52 = properties44.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties44.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setService("");
        boolean boolean57 = atomikosProperties54.isEnableLogging();
        atomikosProperties54.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj60 = properties44.get((java.lang.Object) atomikosProperties54);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties44.elements();
        boolean boolean62 = properties5.contains((java.lang.Object) objEnumeration61);
        int int63 = properties5.size();
        int int64 = properties5.size();
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test7681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7681");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.String str15 = properties10.toString();
        java.util.Enumeration<?> wildcardEnumeration16 = properties10.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties10.elements();
        java.util.Set<java.lang.Object> objSet18 = properties10.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean20 = atomikosProperties19.forceShutdownOnVmExit;
        boolean boolean21 = atomikosProperties19.isSerialJtaTransactions();
        boolean boolean22 = atomikosProperties19.enableLogging;
        atomikosProperties19.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean25 = atomikosProperties19.threadedTwoPhaseCommit;
        boolean boolean26 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setService("");
        boolean boolean32 = atomikosProperties29.isEnableLogging();
        java.util.Properties properties33 = atomikosProperties29.asProperties();
        properties33.clear();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties38 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties38.keys();
        java.lang.Object obj42 = properties33.put((java.lang.Object) properties38, (java.lang.Object) (byte) 0);
        boolean boolean43 = properties38.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean45 = atomikosProperties44.forceShutdownOnVmExit;
        atomikosProperties44.setSerialJtaTransactions(true);
        boolean boolean48 = properties38.containsKey((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setTransactionManagerUniqueName("hi!");
        java.lang.String str51 = atomikosProperties44.getService();
        java.lang.String str52 = atomikosProperties44.getTransactionManagerUniqueName();
        boolean boolean53 = atomikosProperties44.enableLogging;
        atomikosProperties44.setCheckpointInterval((long) '4');
        atomikosProperties44.logBaseDir = "hi!";
        atomikosProperties44.maxTimeout = 1L;
        java.lang.String str60 = atomikosProperties44.logBaseName;
        int int61 = atomikosProperties44.maxActives;
        java.lang.Object obj62 = properties10.getOrDefault((java.lang.Object) atomikosProperties19, (java.lang.Object) int61);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 50 + "'", int61 == 50);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + 50 + "'", obj62, 50);
    }

    @Test
    public void test7682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7682");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        long long42 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties43 = atomikosProperties27.asProperties();
        long long44 = atomikosProperties27.defaultJtaTimeout;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
    }

    @Test
    public void test7683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7683");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.maxTimeout = (-1);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration9 = properties8.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties14 = atomikosProperties11.asProperties();
        atomikosProperties11.setSerialJtaTransactions(true);
        java.util.Properties properties17 = atomikosProperties11.asProperties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties8.entrySet();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objEntrySet20);
    }

    @Test
    public void test7684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7684");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        long long13 = atomikosProperties0.getMaxTimeout();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setCheckpointInterval(10L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test7685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7685");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        java.lang.Object obj9 = properties8.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.setSerialJtaTransactions(true);
        java.lang.String str15 = atomikosProperties11.logBaseName;
        boolean boolean16 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.logBaseName = "tmlog";
        atomikosProperties11.enableLogging = true;
        long long21 = atomikosProperties11.getDefaultJtaTimeout();
        boolean boolean22 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.String str23 = atomikosProperties11.getTransactionManagerUniqueName();
        java.util.Properties properties24 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        atomikosProperties25.checkpointInterval = 1L;
        boolean boolean29 = atomikosProperties25.forceShutdownOnVmExit;
        java.lang.String str30 = atomikosProperties25.getLogBaseName();
        boolean boolean31 = atomikosProperties25.enableLogging;
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        boolean boolean33 = atomikosProperties25.serialJtaTransactions;
        boolean boolean34 = properties8.remove((java.lang.Object) atomikosProperties11, (java.lang.Object) atomikosProperties25);
        boolean boolean35 = atomikosProperties11.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test7686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7686");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.keys();
        boolean boolean14 = properties10.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        boolean boolean25 = properties10.containsKey((java.lang.Object) properties18);
        java.util.Properties properties26 = new java.util.Properties(properties10);
        java.util.Properties properties27 = new java.util.Properties(properties10);
        java.lang.String str28 = properties27.toString();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setService("");
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean41 = atomikosProperties40.forceShutdownOnVmExit;
        atomikosProperties40.setSerialJtaTransactions(true);
        java.lang.String str44 = atomikosProperties40.logBaseName;
        boolean boolean45 = atomikosProperties40.forceShutdownOnVmExit;
        int int46 = atomikosProperties40.maxActives;
        java.lang.String str47 = atomikosProperties40.logBaseName;
        atomikosProperties40.setForceShutdownOnVmExit(true);
        java.util.Properties properties50 = atomikosProperties40.asProperties();
        boolean boolean51 = atomikosProperties40.isForceShutdownOnVmExit();
        java.util.Properties properties52 = atomikosProperties40.asProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.String str55 = atomikosProperties40.logBaseName;
        boolean boolean56 = properties27.replace((java.lang.Object) properties31, (java.lang.Object) 1L, (java.lang.Object) atomikosProperties40);
        int int57 = atomikosProperties40.maxActives;
        atomikosProperties40.setForceShutdownOnVmExit(false);
        boolean boolean60 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties3.remove((java.lang.Object) boolean60);
        java.util.Properties properties62 = new java.util.Properties(properties3);
        java.util.Set<java.lang.Object> objSet63 = properties3.keySet();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 50 + "'", int57 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet63);
    }

    @Test
    public void test7687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7687");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        boolean boolean17 = properties9.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties9.elements();
        boolean boolean20 = properties3.remove((java.lang.Object) properties9, (java.lang.Object) 50);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties30 = atomikosProperties27.asProperties();
        boolean boolean31 = properties24.contains((java.lang.Object) properties30);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        boolean boolean39 = properties35.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.lang.Object obj41 = properties9.replace((java.lang.Object) properties30, (java.lang.Object) properties40);
        properties40.clear();
        java.lang.Object obj43 = null;
        boolean boolean44 = properties40.equals(obj43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.logBaseDir = "hi!";
        atomikosProperties45.setMaxTimeout(500L);
        atomikosProperties45.logBaseName = "hi!";
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) -1);
        java.lang.String str56 = atomikosProperties45.logBaseName;
        boolean boolean57 = properties40.containsKey((java.lang.Object) atomikosProperties45);
        atomikosProperties45.setCheckpointInterval((long) 1);
        atomikosProperties45.maxActives = 100;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test7688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7688");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setService("");
        atomikosProperties25.setSerialJtaTransactions(true);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str32 = atomikosProperties25.logBaseName;
        java.lang.Object obj33 = properties18.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties25);
        boolean boolean34 = properties3.contains((java.lang.Object) properties18);
        properties18.clear();
        java.util.Properties properties36 = new java.util.Properties(properties18);
        java.io.OutputStream outputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.storeToXML(outputStream37, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test7689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7689");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str10 = atomikosProperties0.logBaseName;
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test7690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7690");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean6 = atomikosProperties5.forceShutdownOnVmExit;
        atomikosProperties5.setSerialJtaTransactions(true);
        java.lang.String str9 = atomikosProperties5.logBaseName;
        atomikosProperties5.service = "tmlog";
        atomikosProperties5.setSerialJtaTransactions(false);
        java.util.Properties properties14 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setService("");
        atomikosProperties15.setSerialJtaTransactions(true);
        atomikosProperties15.setEnableLogging(false);
        java.lang.String str22 = atomikosProperties15.logBaseName;
        int int23 = atomikosProperties15.maxActives;
        atomikosProperties15.setEnableLogging(false);
        java.util.Properties properties26 = atomikosProperties15.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setService("");
        atomikosProperties28.setSerialJtaTransactions(true);
        java.util.Properties properties33 = atomikosProperties28.asProperties();
        properties33.clear();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties38 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties38.keys();
        boolean boolean42 = properties38.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties43 = new java.util.Properties(properties38);
        java.lang.Object obj44 = properties43.clone();
        boolean boolean45 = properties33.equals((java.lang.Object) properties43);
        java.lang.Object obj46 = properties33.clone();
        boolean boolean47 = properties1.replace((java.lang.Object) properties14, (java.lang.Object) properties26, obj46);
        java.util.Properties properties48 = new java.util.Properties(properties1);
        java.util.Properties properties49 = new java.util.Properties(properties1);
        java.lang.String str51 = properties49.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties52 = new java.util.Properties(properties49);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test7691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7691");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = atomikosProperties12.forceShutdownOnVmExit;
        java.lang.String str14 = atomikosProperties12.getLogBaseDir();
        java.lang.Object obj15 = properties3.getOrDefault((java.lang.Object) atomikosProperties4, (java.lang.Object) str14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        boolean boolean21 = atomikosProperties16.forceShutdownOnVmExit;
        int int22 = atomikosProperties16.maxActives;
        java.lang.String str23 = atomikosProperties16.logBaseName;
        atomikosProperties16.setForceShutdownOnVmExit(true);
        java.util.Properties properties26 = atomikosProperties16.asProperties();
        boolean boolean27 = atomikosProperties16.isForceShutdownOnVmExit();
        java.util.Properties properties28 = atomikosProperties16.asProperties();
        java.lang.String str29 = atomikosProperties16.getLogBaseName();
        atomikosProperties16.enableLogging = false;
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        boolean boolean41 = properties33.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties33.entrySet();
        boolean boolean43 = properties3.remove((java.lang.Object) false, (java.lang.Object) properties33);
        java.util.Collection<java.lang.Object> objCollection44 = properties33.values();
        java.lang.Object obj45 = properties33.clone();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(obj45);
// flaky:         org.junit.Assert.assertEquals(obj45.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7692");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.setDefaultJtaTimeout((long) 52);
        atomikosProperties0.setService("");
        long long18 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 52L + "'", long18 == 52L);
    }

    @Test
    public void test7693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7693");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        int int12 = atomikosProperties4.maxActives;
        long long13 = atomikosProperties4.getCheckpointInterval();
        long long14 = atomikosProperties4.checkpointInterval;
        boolean boolean15 = properties1.containsValue((java.lang.Object) atomikosProperties4);
        boolean boolean16 = atomikosProperties4.serialJtaTransactions;
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test7694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7694");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean12 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        long long15 = atomikosProperties0.getMaxTimeout();
        long long16 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.maxTimeout = 0L;
        atomikosProperties0.setMaxActives(1);
        atomikosProperties0.setMaxTimeout(1L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
    }

    @Test
    public void test7695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7695");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setMaxActives(0);
        atomikosProperties0.threadedTwoPhaseCommit = false;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test7696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7696");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.logBaseDir = "hi!";
        atomikosProperties0.setMaxTimeout(500L);
        atomikosProperties0.maxTimeout = (-1L);
        atomikosProperties0.serialJtaTransactions = true;
        boolean boolean11 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str12 = atomikosProperties0.logBaseName;
        atomikosProperties0.checkpointInterval = (byte) 100;
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test7697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7697");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        int int12 = atomikosProperties4.maxActives;
        long long13 = atomikosProperties4.getCheckpointInterval();
        long long14 = atomikosProperties4.checkpointInterval;
        boolean boolean15 = properties1.containsValue((java.lang.Object) atomikosProperties4);
        int int16 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties17.getCheckpointInterval();
        atomikosProperties17.maxTimeout = (-1);
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Enumeration<?> wildcardEnumeration32 = properties29.propertyNames();
        boolean boolean33 = properties25.containsKey((java.lang.Object) wildcardEnumeration32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long35 = atomikosProperties34.defaultJtaTimeout;
        boolean boolean36 = atomikosProperties34.enableLogging;
        atomikosProperties34.setSerialJtaTransactions(true);
        java.util.Properties properties39 = atomikosProperties34.asProperties();
        java.util.Properties properties40 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties43 = atomikosProperties42.asProperties();
        atomikosProperties42.checkpointInterval = 1L;
        boolean boolean46 = atomikosProperties42.forceShutdownOnVmExit;
        java.lang.Object obj47 = properties40.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties42);
        boolean boolean48 = atomikosProperties42.isSerialJtaTransactions();
        java.util.Properties properties49 = atomikosProperties42.asProperties();
        boolean boolean50 = properties25.containsValue((java.lang.Object) atomikosProperties42);
        boolean boolean51 = properties1.equals((java.lang.Object) atomikosProperties42);
        int int52 = atomikosProperties42.getMaxActives();
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
    }

    @Test
    public void test7698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7698");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setLogBaseName("hi!");
        int int22 = atomikosProperties15.getMaxActives();
        atomikosProperties15.setCheckpointInterval((long) (short) -1);
        atomikosProperties15.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties15.serialJtaTransactions = false;
        long long29 = atomikosProperties15.defaultJtaTimeout;
        long long30 = atomikosProperties15.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
    }

    @Test
    public void test7699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7699");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setService("");
        atomikosProperties25.setSerialJtaTransactions(true);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str32 = atomikosProperties25.logBaseName;
        java.lang.Object obj33 = properties18.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties25);
        boolean boolean34 = properties3.contains((java.lang.Object) properties18);
        java.lang.String str35 = properties18.toString();
        java.util.Set<java.lang.Object> objSet36 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties18.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        long long43 = atomikosProperties38.getCheckpointInterval();
        atomikosProperties38.setMaxTimeout(0L);
        atomikosProperties38.forceShutdownOnVmExit = false;
        atomikosProperties38.setEnableLogging(false);
        atomikosProperties38.setEnableLogging(false);
        java.util.Properties properties52 = atomikosProperties38.asProperties();
        boolean boolean53 = properties18.equals((java.lang.Object) atomikosProperties38);
        java.util.Set<java.lang.String> strSet54 = properties18.stringPropertyNames();
        java.lang.String str55 = properties18.toString();
        java.io.InputStream inputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.load(inputStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 500L + "'", long43 == 500L);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strSet54);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str55, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7700");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Set<java.lang.String> strSet10 = properties3.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties3.elements();
        java.util.Properties properties12 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean14 = atomikosProperties13.forceShutdownOnVmExit;
        atomikosProperties13.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties13.logBaseName;
        boolean boolean18 = atomikosProperties13.forceShutdownOnVmExit;
        int int19 = atomikosProperties13.maxActives;
        java.lang.String str20 = atomikosProperties13.logBaseName;
        atomikosProperties13.serialJtaTransactions = true;
        java.lang.String str23 = atomikosProperties13.getLogBaseName();
        java.lang.String str24 = atomikosProperties13.logBaseName;
        java.lang.Object obj25 = properties3.remove((java.lang.Object) str24);
        java.io.Reader reader26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(reader26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test7701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7701");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        boolean boolean22 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties23 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long25 = atomikosProperties24.defaultJtaTimeout;
        boolean boolean26 = atomikosProperties24.enableLogging;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.util.Properties properties29 = atomikosProperties24.asProperties();
        java.util.Properties properties30 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean32 = atomikosProperties31.forceShutdownOnVmExit;
        atomikosProperties31.setSerialJtaTransactions(true);
        java.lang.String str35 = atomikosProperties31.logBaseName;
        boolean boolean36 = atomikosProperties31.forceShutdownOnVmExit;
        int int37 = atomikosProperties31.maxActives;
        java.lang.String str38 = atomikosProperties31.logBaseName;
        atomikosProperties31.setForceShutdownOnVmExit(true);
        java.util.Properties properties41 = atomikosProperties31.asProperties();
        boolean boolean42 = atomikosProperties31.isForceShutdownOnVmExit();
        java.util.Properties properties43 = atomikosProperties31.asProperties();
        java.lang.Object obj44 = properties7.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) atomikosProperties31);
        java.util.Properties properties45 = new java.util.Properties(properties7);
        java.util.Enumeration<?> wildcardEnumeration46 = properties45.propertyNames();
        properties45.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setService("");
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        long long54 = atomikosProperties49.getCheckpointInterval();
        atomikosProperties49.forceShutdownOnVmExit = true;
        atomikosProperties49.setSerialJtaTransactions(true);
        java.util.Properties properties59 = atomikosProperties49.asProperties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Set<java.lang.String> strSet61 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties63 = atomikosProperties62.asProperties();
        atomikosProperties62.checkpointInterval = 1L;
        boolean boolean66 = atomikosProperties62.forceShutdownOnVmExit;
        java.lang.String str67 = atomikosProperties62.getLogBaseName();
        boolean boolean68 = atomikosProperties62.enableLogging;
        java.util.Properties properties69 = atomikosProperties62.asProperties();
        java.util.Properties properties70 = new java.util.Properties(properties69);
        boolean boolean71 = properties60.contains((java.lang.Object) properties70);
        atomikosProperties0.set(properties45, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties70);
        java.lang.String str74 = properties45.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tmlog={}, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(wildcardEnumeration46);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 500L + "'", long54 == 500L);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tmlog" + "'", str67, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test7702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7702");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.service;
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties15.getProperty("hi!");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        java.util.Set<java.lang.String> strSet30 = properties29.stringPropertyNames();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        properties29.clear();
        java.util.Set<java.lang.Object> objSet33 = properties29.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setService("");
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        long long40 = atomikosProperties35.getCheckpointInterval();
        atomikosProperties35.maxTimeout = (-1);
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        java.lang.Object obj44 = properties29.putIfAbsent((java.lang.Object) atomikosProperties34, (java.lang.Object) properties43);
        atomikosProperties0.set(properties15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties43);
        boolean boolean46 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int47 = atomikosProperties0.maxActives;
        java.util.Properties properties48 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 500L + "'", long40 == 500L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 50 + "'", int47 == 50);
        org.junit.Assert.assertNotNull(properties48);
    }

    @Test
    public void test7703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7703");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        boolean boolean9 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties19 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.lang.String str24 = atomikosProperties20.logBaseName;
        atomikosProperties20.service = "tmlog";
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.forceShutdownOnVmExit;
        java.lang.String str30 = atomikosProperties28.getLogBaseDir();
        java.lang.Object obj31 = properties19.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) str30);
        java.lang.Object obj32 = properties4.put((java.lang.Object) atomikosProperties6, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setMaxTimeout((long) 35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test7704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7704");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        properties5.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean8 = atomikosProperties7.forceShutdownOnVmExit;
        atomikosProperties7.setSerialJtaTransactions(true);
        java.lang.String str11 = atomikosProperties7.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        java.util.Properties properties14 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        long long21 = atomikosProperties16.getCheckpointInterval();
        boolean boolean22 = atomikosProperties16.threadedTwoPhaseCommit;
        atomikosProperties7.set(properties14, "tmlog", (java.lang.Object) atomikosProperties16);
        boolean boolean24 = properties5.containsValue((java.lang.Object) atomikosProperties16);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean27 = atomikosProperties26.forceShutdownOnVmExit;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.lang.String str30 = atomikosProperties26.logBaseName;
        boolean boolean31 = atomikosProperties26.forceShutdownOnVmExit;
        int int32 = atomikosProperties26.maxActives;
        java.lang.String str33 = atomikosProperties26.logBaseName;
        atomikosProperties26.setForceShutdownOnVmExit(true);
        java.util.Properties properties36 = atomikosProperties26.asProperties();
        boolean boolean37 = atomikosProperties26.isForceShutdownOnVmExit();
        java.util.Properties properties38 = atomikosProperties26.asProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setCheckpointInterval((long) 'a');
        atomikosProperties26.transactionManagerUniqueName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setEnableLogging(false);
        atomikosProperties45.logBaseName = "tmlog";
        atomikosProperties45.maxActives = 1;
        atomikosProperties45.setEnableLogging(true);
        long long58 = atomikosProperties45.getMaxTimeout();
        java.lang.String str59 = atomikosProperties45.getTransactionManagerUniqueName();
        atomikosProperties45.setService("hi!");
        java.lang.String str62 = atomikosProperties45.logBaseName;
        java.lang.Object obj63 = properties25.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) str62);
        java.util.Properties properties64 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setService("");
        boolean boolean68 = atomikosProperties65.isEnableLogging();
        java.util.Properties properties69 = atomikosProperties65.asProperties();
        properties69.clear();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties74 = atomikosProperties73.asProperties();
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties74.keys();
        java.lang.Object obj78 = properties69.put((java.lang.Object) properties74, (java.lang.Object) (byte) 0);
        boolean boolean79 = properties74.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean81 = atomikosProperties80.forceShutdownOnVmExit;
        atomikosProperties80.setSerialJtaTransactions(true);
        boolean boolean84 = properties74.containsKey((java.lang.Object) atomikosProperties80);
        atomikosProperties80.setTransactionManagerUniqueName("hi!");
        java.lang.String str87 = atomikosProperties80.logBaseDir;
        java.util.Properties properties88 = atomikosProperties80.asProperties();
        java.lang.Object obj89 = properties64.remove((java.lang.Object) properties88);
        java.lang.String str91 = properties64.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "tmlog" + "'", obj63, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test7705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7705");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.maxTimeout;
        java.lang.String str7 = atomikosProperties0.getService();
        long long8 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test7706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7706");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.logBaseDir = "hi!";
        atomikosProperties0.setMaxTimeout(500L);
        atomikosProperties0.maxTimeout = (-1L);
        atomikosProperties0.serialJtaTransactions = true;
        boolean boolean11 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        boolean boolean20 = atomikosProperties17.isEnableLogging();
        java.util.Properties properties21 = atomikosProperties17.asProperties();
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.enableLogging = false;
        java.lang.String str26 = atomikosProperties17.logBaseName;
        boolean boolean27 = atomikosProperties17.isForceShutdownOnVmExit();
        atomikosProperties17.checkpointInterval = (short) -1;
        int int30 = atomikosProperties17.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties32 = atomikosProperties31.asProperties();
        atomikosProperties31.checkpointInterval = 1L;
        boolean boolean35 = atomikosProperties31.forceShutdownOnVmExit;
        long long36 = atomikosProperties31.defaultJtaTimeout;
        java.util.Properties properties37 = atomikosProperties31.asProperties();
        boolean boolean38 = atomikosProperties31.isForceShutdownOnVmExit();
        atomikosProperties31.maxTimeout = ' ';
        java.util.Properties properties41 = atomikosProperties31.asProperties();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        boolean boolean51 = properties43.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties49);
        java.util.Properties properties52 = new java.util.Properties(properties49);
        java.lang.String str54 = properties49.getProperty("");
        int int55 = properties49.size();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties57 = new java.util.Properties(properties49);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties61 = atomikosProperties60.asProperties();
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Properties properties63 = new java.util.Properties(properties61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties65 = atomikosProperties64.asProperties();
        java.util.Set<java.lang.String> strSet66 = properties65.stringPropertyNames();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        properties65.clear();
        java.util.Set<java.lang.Object> objSet69 = properties65.keySet();
        properties65.clear();
        java.util.Properties properties71 = new java.util.Properties(properties65);
        java.lang.String str72 = properties65.toString();
        properties65.clear();
        java.util.Set<java.lang.Object> objSet74 = properties65.keySet();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Properties properties76 = new java.util.Properties(properties75);
        boolean boolean77 = properties65.containsKey((java.lang.Object) properties76);
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.lang.Object obj79 = properties16.putIfAbsent((java.lang.Object) int30, (java.lang.Object) properties49);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{}" + "'", str72, "{}");
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test7707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7707");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test7708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7708");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setMaxTimeout(100L);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (short) 100);
        long long10 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
    }

    @Test
    public void test7709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        int int3 = atomikosProperties0.maxActives;
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        boolean boolean12 = properties8.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.Object obj19 = properties8.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.service = "tmlog";
        atomikosProperties0.set(properties8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties22);
        java.lang.String str32 = atomikosProperties22.logBaseName;
        java.lang.String str33 = atomikosProperties22.getLogBaseDir();
        atomikosProperties22.setMaxActives(1);
        java.lang.String str36 = atomikosProperties22.logBaseName;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
    }

    @Test
    public void test7710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7710");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setService("");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test7711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7711");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet1 = properties0.keySet();
        java.lang.String str3 = properties0.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        boolean boolean13 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.logBaseDir = "tmlog";
        atomikosProperties4.setEnableLogging(false);
        org.junit.Assert.assertNotNull(objSet1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test7712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7712");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet1 = properties0.keySet();
        java.lang.String str3 = properties0.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        boolean boolean13 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.logBaseDir = "tmlog";
        boolean boolean16 = atomikosProperties4.threadedTwoPhaseCommit;
        atomikosProperties4.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean19 = atomikosProperties4.forceShutdownOnVmExit;
        org.junit.Assert.assertNotNull(objSet1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test7713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7713");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj14 = properties9.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection15 = properties9.values();
        java.util.Set<java.lang.String> strSet16 = properties9.stringPropertyNames();
        boolean boolean17 = properties5.contains((java.lang.Object) properties9);
        java.util.Properties properties18 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setService("");
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        long long24 = atomikosProperties19.getCheckpointInterval();
        atomikosProperties19.setMaxTimeout(0L);
        atomikosProperties19.forceShutdownOnVmExit = false;
        atomikosProperties19.setEnableLogging(false);
        boolean boolean31 = atomikosProperties19.enableLogging;
        java.lang.String str32 = atomikosProperties19.logBaseName;
        java.lang.String str33 = atomikosProperties19.service;
        boolean boolean34 = properties5.equals((java.lang.Object) atomikosProperties19);
        java.util.Properties properties35 = atomikosProperties19.asProperties();
        atomikosProperties19.setMaxActives((int) (short) -1);
        atomikosProperties19.maxActives = 50;
        java.util.Properties properties40 = atomikosProperties19.asProperties();
        atomikosProperties19.setDefaultJtaTimeout(500L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties40);
    }

    @Test
    public void test7714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7714");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        boolean boolean17 = atomikosProperties9.forceShutdownOnVmExit;
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.serialJtaTransactions = false;
        atomikosProperties9.setSerialJtaTransactions(true);
        java.lang.String str24 = atomikosProperties9.getService();
        java.util.Properties properties25 = atomikosProperties9.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.Object obj27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = properties25.contains(obj27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
    }

    @Test
    public void test7715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7715");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.serialJtaTransactions = false;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout((long) 1);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        boolean boolean15 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test7716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7716");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.list(printStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test7717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7717");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        boolean boolean10 = properties6.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        boolean boolean21 = properties6.containsKey((java.lang.Object) properties14);
        java.lang.Object obj22 = properties1.get((java.lang.Object) properties6);
        java.lang.Object obj23 = properties1.clone();
        java.io.PrintStream printStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals(obj23.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7718");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        long long13 = atomikosProperties0.getMaxTimeout();
        int int14 = atomikosProperties0.maxActives;
        atomikosProperties0.setLogBaseName("");
        boolean boolean17 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setService("tmlog");
        long long22 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
    }

    @Test
    public void test7719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7719");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean10 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test7720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7720");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setService("{}");
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setMaxTimeout((long) (-1));
        atomikosProperties0.maxTimeout = 97;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
    }

    @Test
    public void test7721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7721");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setLogBaseName("{}");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties22 = atomikosProperties21.asProperties();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties28 = atomikosProperties25.asProperties();
        boolean boolean29 = properties22.contains((java.lang.Object) properties28);
        atomikosProperties9.set(properties28, "tmlog", (java.lang.Object) 'a');
        java.util.Properties properties33 = atomikosProperties9.asProperties();
        long long34 = atomikosProperties9.maxTimeout;
        java.lang.String str35 = atomikosProperties9.service;
        java.util.Properties properties36 = atomikosProperties9.asProperties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties44 = atomikosProperties43.asProperties();
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties44.keys();
        boolean boolean48 = properties44.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties52 = atomikosProperties51.asProperties();
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        java.lang.Object obj57 = properties52.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        boolean boolean59 = properties44.containsKey((java.lang.Object) properties52);
        java.util.Properties properties60 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean62 = atomikosProperties61.forceShutdownOnVmExit;
        atomikosProperties61.setSerialJtaTransactions(true);
        java.lang.String str65 = atomikosProperties61.logBaseName;
        boolean boolean66 = atomikosProperties61.forceShutdownOnVmExit;
        atomikosProperties61.logBaseName = "tmlog";
        atomikosProperties61.enableLogging = true;
        long long71 = atomikosProperties61.getDefaultJtaTimeout();
        boolean boolean72 = atomikosProperties61.isForceShutdownOnVmExit();
        boolean boolean73 = properties39.remove((java.lang.Object) properties44, (java.lang.Object) boolean72);
        java.lang.String str74 = properties44.toString();
        java.lang.Object obj75 = properties36.remove((java.lang.Object) str74);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties36.entrySet();
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.store(outputStream77, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 10000L + "'", long71 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str74, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEntrySet76);
    }

    @Test
    public void test7722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7722");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj3 = properties0.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        java.util.Properties properties4 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        atomikosProperties5.checkpointInterval = 1L;
        boolean boolean9 = atomikosProperties5.forceShutdownOnVmExit;
        long long10 = atomikosProperties5.defaultJtaTimeout;
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        atomikosProperties5.maxTimeout = '4';
        atomikosProperties5.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties5.maxActives = 100;
        boolean boolean18 = properties4.containsValue((java.lang.Object) atomikosProperties5);
        atomikosProperties5.setDefaultJtaTimeout((long) 11);
        boolean boolean21 = atomikosProperties5.serialJtaTransactions;
        java.util.Properties properties22 = atomikosProperties5.asProperties();
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNotNull(objEnumeration24);
    }

    @Test
    public void test7723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7723");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.logBaseDir = "hi!";
        atomikosProperties0.setMaxTimeout(500L);
        atomikosProperties0.maxTimeout = (-1L);
        atomikosProperties0.serialJtaTransactions = true;
        boolean boolean11 = atomikosProperties0.serialJtaTransactions;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.defaultJtaTimeout = 97L;
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        long long19 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties23 = atomikosProperties22.asProperties();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.elements();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties30 = atomikosProperties29.asProperties();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Properties properties32 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties36 = atomikosProperties33.asProperties();
        boolean boolean37 = properties30.contains((java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        boolean boolean45 = properties41.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties49 = atomikosProperties48.asProperties();
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties49.keys();
        java.lang.Object obj54 = properties49.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        boolean boolean56 = properties41.containsKey((java.lang.Object) properties49);
        java.util.Properties properties57 = new java.util.Properties(properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long59 = atomikosProperties58.defaultJtaTimeout;
        boolean boolean60 = atomikosProperties58.enableLogging;
        atomikosProperties58.setSerialJtaTransactions(true);
        java.util.Properties properties63 = atomikosProperties58.asProperties();
        java.util.Properties properties64 = atomikosProperties58.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean66 = atomikosProperties65.forceShutdownOnVmExit;
        atomikosProperties65.setSerialJtaTransactions(true);
        java.lang.String str69 = atomikosProperties65.logBaseName;
        boolean boolean70 = atomikosProperties65.forceShutdownOnVmExit;
        int int71 = atomikosProperties65.maxActives;
        java.lang.String str72 = atomikosProperties65.logBaseName;
        atomikosProperties65.setForceShutdownOnVmExit(true);
        java.util.Properties properties75 = atomikosProperties65.asProperties();
        boolean boolean76 = atomikosProperties65.isForceShutdownOnVmExit();
        java.util.Properties properties77 = atomikosProperties65.asProperties();
        java.lang.Object obj78 = properties41.replace((java.lang.Object) atomikosProperties58, (java.lang.Object) atomikosProperties65);
        java.lang.Object obj79 = properties23.putIfAbsent((java.lang.Object) properties36, (java.lang.Object) atomikosProperties65);
        java.util.Collection<java.lang.Object> objCollection80 = properties36.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties36.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties36.entrySet();
        java.util.Properties properties83 = new java.util.Properties(properties36);
        java.util.Collection<java.lang.Object> objCollection84 = properties83.values();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties83.keys();
        java.util.Properties properties86 = new java.util.Properties(properties83);
        java.lang.Object obj88 = null;
        atomikosProperties0.set(properties86, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", obj88);
        java.lang.String str90 = atomikosProperties0.logBaseDir;
        java.util.Properties properties91 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 500L + "'", long19 == 500L);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10000L + "'", long59 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertNotNull(objCollection84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertNotNull(properties91);
    }

    @Test
    public void test7724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7724");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = 1L;
        boolean boolean12 = atomikosProperties8.forceShutdownOnVmExit;
        java.lang.Object obj13 = properties6.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties8);
        boolean boolean14 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.forceShutdownOnVmExit = false;
        atomikosProperties8.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}";
        atomikosProperties8.setForceShutdownOnVmExit(false);
        atomikosProperties8.maxTimeout = 300000L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test7725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7725");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.transactionManagerUniqueName = "hi!";
        atomikosProperties0.setMaxActives((int) (short) 10);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setService("");
        atomikosProperties14.setSerialJtaTransactions(true);
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        properties19.clear();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties25.keys();
        boolean boolean29 = properties25.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long32 = atomikosProperties31.defaultJtaTimeout;
        boolean boolean33 = atomikosProperties31.enableLogging;
        atomikosProperties31.setSerialJtaTransactions(true);
        java.lang.Object obj36 = properties25.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean37 = properties19.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        properties43.clear();
        java.lang.Object obj46 = properties19.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties19.elements();
        java.util.Set<java.lang.String> strSet48 = properties19.stringPropertyNames();
        java.lang.Object obj50 = properties13.put((java.lang.Object) strSet48, (java.lang.Object) (-1.0d));
        java.util.Set<java.lang.String> strSet51 = properties13.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties13.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean54 = atomikosProperties53.forceShutdownOnVmExit;
        atomikosProperties53.setSerialJtaTransactions(true);
        java.lang.String str57 = atomikosProperties53.logBaseName;
        atomikosProperties53.service = "tmlog";
        java.util.Properties properties60 = atomikosProperties53.asProperties();
        long long61 = atomikosProperties53.checkpointInterval;
        boolean boolean62 = atomikosProperties53.isEnableLogging();
        java.util.Properties properties63 = atomikosProperties53.asProperties();
        boolean boolean64 = atomikosProperties53.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setService("");
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        long long70 = atomikosProperties65.getCheckpointInterval();
        boolean boolean71 = atomikosProperties65.threadedTwoPhaseCommit;
        atomikosProperties65.transactionManagerUniqueName = "tmlog";
        boolean boolean74 = atomikosProperties65.isSerialJtaTransactions();
        boolean boolean75 = atomikosProperties65.isEnableLogging();
        long long76 = atomikosProperties65.getDefaultJtaTimeout();
        java.lang.String str77 = atomikosProperties65.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setService("");
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        long long83 = atomikosProperties78.getCheckpointInterval();
        boolean boolean84 = atomikosProperties78.threadedTwoPhaseCommit;
        atomikosProperties78.transactionManagerUniqueName = "tmlog";
        boolean boolean87 = atomikosProperties78.isSerialJtaTransactions();
        java.util.Properties properties88 = atomikosProperties78.asProperties();
        boolean boolean89 = properties13.replace((java.lang.Object) boolean64, (java.lang.Object) atomikosProperties65, (java.lang.Object) properties88);
        java.lang.String str91 = properties88.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.InputStream inputStream92 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties88.load(inputStream92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test7726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7726");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties9.asProperties();
        properties13.clear();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj22 = properties13.put((java.lang.Object) properties18, (java.lang.Object) (byte) 0);
        boolean boolean23 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean28 = properties18.containsKey((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("hi!");
        int int31 = atomikosProperties24.getMaxActives();
        boolean boolean32 = properties3.equals((java.lang.Object) int31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.defaultJtaTimeout = (byte) -1;
        atomikosProperties33.setSerialJtaTransactions(false);
        java.lang.Object obj38 = properties3.get((java.lang.Object) atomikosProperties33);
        long long39 = atomikosProperties33.maxTimeout;
        boolean boolean40 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.forceShutdownOnVmExit = false;
        java.util.Properties properties43 = atomikosProperties33.asProperties();
        atomikosProperties33.service = "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}";
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties43);
    }

    @Test
    public void test7727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7727");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.checkpointInterval = '4';
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties19 = atomikosProperties18.asProperties();
        java.util.Set<java.lang.String> strSet20 = properties19.stringPropertyNames();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet29 = properties28.stringPropertyNames();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        properties28.clear();
        java.util.Set<java.lang.Object> objSet32 = properties28.keySet();
        properties28.clear();
        java.util.Properties properties34 = new java.util.Properties(properties28);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties28.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setService("");
        boolean boolean39 = atomikosProperties36.isEnableLogging();
        java.util.Properties properties40 = atomikosProperties36.asProperties();
        atomikosProperties36.setDefaultJtaTimeout(300000L);
        atomikosProperties36.maxActives = (short) 0;
        atomikosProperties36.setForceShutdownOnVmExit(false);
        atomikosProperties36.setLogBaseDir("");
        long long49 = atomikosProperties36.maxTimeout;
        boolean boolean50 = properties19.remove((java.lang.Object) properties28, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setService("");
        atomikosProperties51.setSerialJtaTransactions(true);
        atomikosProperties51.setEnableLogging(false);
        atomikosProperties51.logBaseName = "tmlog";
        atomikosProperties51.maxActives = 1;
        atomikosProperties51.setEnableLogging(true);
        java.lang.String str64 = atomikosProperties51.service;
        atomikosProperties51.setMaxTimeout((-1L));
        java.util.Properties properties67 = atomikosProperties51.asProperties();
        java.lang.Object obj68 = properties67.clone();
        java.lang.Object obj69 = properties15.replace((java.lang.Object) properties19, (java.lang.Object) properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties15.elements();
        java.util.Properties properties71 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setService("");
        boolean boolean75 = atomikosProperties72.isEnableLogging();
        java.util.Properties properties76 = atomikosProperties72.asProperties();
        properties76.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties76.elements();
        properties76.clear();
        java.util.Properties properties80 = new java.util.Properties(properties76);
        boolean boolean81 = properties11.remove((java.lang.Object) properties71, (java.lang.Object) properties76);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNotNull(obj68);
// flaky:         org.junit.Assert.assertEquals(obj68.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test7728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7728");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setMaxTimeout(0L);
        java.util.Properties properties19 = atomikosProperties9.asProperties();
        atomikosProperties9.transactionManagerUniqueName = "{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        atomikosProperties9.maxActives = (byte) -1;
        boolean boolean24 = atomikosProperties9.enableLogging;
        java.util.Properties properties25 = atomikosProperties9.asProperties();
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.storeToXML(outputStream26, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
    }

    @Test
    public void test7729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7729");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        atomikosProperties0.maxActives = (short) 0;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.maxTimeout = (byte) 1;
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        long long14 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.maxActives = 12;
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        atomikosProperties0.setMaxTimeout((long) (byte) 100);
        java.lang.String str23 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str23, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7730");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        java.util.Properties properties9 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        boolean boolean13 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.lang.Object obj15 = properties3.getOrDefault((java.lang.Object) properties9, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties16 = new java.util.Properties(properties9);
        int int17 = properties16.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean19 = atomikosProperties18.forceShutdownOnVmExit;
        atomikosProperties18.setSerialJtaTransactions(true);
        java.lang.String str22 = atomikosProperties18.logBaseName;
        boolean boolean23 = atomikosProperties18.forceShutdownOnVmExit;
        int int24 = atomikosProperties18.maxActives;
        java.lang.String str25 = atomikosProperties18.logBaseName;
        atomikosProperties18.setForceShutdownOnVmExit(true);
        java.util.Properties properties28 = atomikosProperties18.asProperties();
        boolean boolean29 = atomikosProperties18.isForceShutdownOnVmExit();
        long long30 = atomikosProperties18.getDefaultJtaTimeout();
        java.util.Properties properties31 = atomikosProperties18.asProperties();
        boolean boolean32 = properties31.isEmpty();
        boolean boolean33 = properties16.contains((java.lang.Object) properties31);
        java.io.OutputStream outputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.save(outputStream34, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test7731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7731");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        java.lang.Object obj9 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        long long12 = atomikosProperties10.getDefaultJtaTimeout();
        long long13 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.defaultJtaTimeout = (short) 0;
        int int18 = atomikosProperties10.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setService("");
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        properties24.clear();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties30 = atomikosProperties29.asProperties();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        boolean boolean34 = properties30.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long37 = atomikosProperties36.defaultJtaTimeout;
        boolean boolean38 = atomikosProperties36.enableLogging;
        atomikosProperties36.setSerialJtaTransactions(true);
        java.lang.Object obj41 = properties30.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean42 = properties24.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        java.lang.Object obj51 = properties46.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties52 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setService("");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.util.Properties properties59 = atomikosProperties54.asProperties();
        properties59.clear();
        boolean boolean61 = properties24.replace((java.lang.Object) properties46, (java.lang.Object) 0.0d, (java.lang.Object) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties24.elements();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties66 = atomikosProperties65.asProperties();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties66.keys();
        java.lang.Object obj71 = properties66.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection72 = properties66.values();
        boolean boolean73 = properties24.containsKey((java.lang.Object) properties66);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties77 = atomikosProperties76.asProperties();
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Properties properties79 = new java.util.Properties(properties77);
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.lang.Object obj83 = properties79.setProperty("tmlog", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean84 = properties8.replace((java.lang.Object) int18, (java.lang.Object) boolean73, (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.InputStream inputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test7732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7732");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.service;
        atomikosProperties0.setMaxTimeout((-1L));
        atomikosProperties0.forceShutdownOnVmExit = true;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test7733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7733");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.lang.Object obj20 = properties19.clone();
        java.util.Properties properties21 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties23 = atomikosProperties22.asProperties();
        long long24 = atomikosProperties22.getDefaultJtaTimeout();
        long long25 = atomikosProperties22.getDefaultJtaTimeout();
        boolean boolean26 = atomikosProperties22.serialJtaTransactions;
        boolean boolean27 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.String str28 = atomikosProperties22.service;
        java.lang.String str29 = atomikosProperties22.transactionManagerUniqueName;
        java.lang.String str30 = atomikosProperties22.logBaseDir;
        java.lang.String str31 = atomikosProperties22.transactionManagerUniqueName;
        boolean boolean32 = atomikosProperties22.forceShutdownOnVmExit;
        boolean boolean33 = properties21.containsValue((java.lang.Object) boolean32);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties21.entrySet();
        java.util.Set<java.lang.Object> objSet35 = properties21.keySet();
        boolean boolean36 = properties21.isEmpty();
        java.lang.Object obj39 = properties21.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties40 = new java.util.Properties(properties21);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test7734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7734");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setMaxTimeout(0L);
        atomikosProperties9.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties9.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.lang.String str23 = atomikosProperties9.getService();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test7735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7735");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.defaultJtaTimeout = ' ';
        int int7 = atomikosProperties0.getMaxActives();
        java.lang.String str8 = atomikosProperties0.service;
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test7736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7736");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.transactionManagerUniqueName = "";
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean23 = atomikosProperties22.forceShutdownOnVmExit;
        atomikosProperties22.setSerialJtaTransactions(true);
        java.lang.String str26 = atomikosProperties22.logBaseName;
        atomikosProperties22.service = "tmlog";
        long long29 = atomikosProperties22.checkpointInterval;
        boolean boolean30 = atomikosProperties22.isForceShutdownOnVmExit();
        int int31 = atomikosProperties22.getMaxActives();
        java.util.Properties properties32 = atomikosProperties22.asProperties();
        boolean boolean33 = properties21.contains((java.lang.Object) atomikosProperties22);
        java.lang.Object obj36 = properties21.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties37 = new java.util.Properties(properties21);
        java.lang.Object obj40 = properties21.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tmlog={}, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test7737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7737");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}";
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout(10000L);
        boolean boolean16 = atomikosProperties0.enableLogging;
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test7738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7738");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        java.lang.Object obj9 = properties8.clone();
        java.util.Set<java.lang.String> strSet10 = properties8.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.checkpointInterval = 300000L;
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        boolean boolean22 = properties18.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet31 = properties30.keySet();
        boolean boolean32 = properties24.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties24.elements();
        boolean boolean35 = properties18.remove((java.lang.Object) properties24, (java.lang.Object) 50);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties42 = new java.util.Properties(properties40);
        java.util.Collection<java.lang.Object> objCollection43 = properties40.values();
        atomikosProperties11.set(properties24, "{}", (java.lang.Object) objCollection43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties24.elements();
        boolean boolean46 = properties8.containsValue((java.lang.Object) properties24);
        java.util.Enumeration<?> wildcardEnumeration47 = properties8.propertyNames();
        java.io.OutputStream outputStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(outputStream48, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration47);
    }

    @Test
    public void test7739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7739");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        int int3 = atomikosProperties0.maxActives;
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        long long6 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties12 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        boolean boolean16 = properties12.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.lang.Object obj25 = properties20.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        boolean boolean27 = properties12.containsKey((java.lang.Object) properties20);
        java.util.Properties properties28 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection29 = properties28.values();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        java.util.Set<java.lang.String> strSet34 = properties31.stringPropertyNames();
        boolean boolean35 = properties28.containsValue((java.lang.Object) strSet34);
        int int36 = properties28.size();
        java.util.Collection<java.lang.Object> objCollection37 = properties28.values();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties42 = atomikosProperties41.asProperties();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties42.keys();
        boolean boolean46 = properties42.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties50 = atomikosProperties49.asProperties();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet55 = properties54.keySet();
        boolean boolean56 = properties48.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties48.elements();
        boolean boolean59 = properties42.remove((java.lang.Object) properties48, (java.lang.Object) 50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties61 = atomikosProperties60.asProperties();
        atomikosProperties60.checkpointInterval = 1L;
        java.lang.String str64 = atomikosProperties60.getService();
        java.lang.String str65 = atomikosProperties60.getLogBaseName();
        boolean boolean66 = properties48.containsKey((java.lang.Object) atomikosProperties60);
        atomikosProperties60.setDefaultJtaTimeout((long) 0);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Properties properties71 = new java.util.Properties(properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setService("");
        atomikosProperties73.setSerialJtaTransactions(true);
        atomikosProperties73.setEnableLogging(false);
        long long80 = atomikosProperties73.getCheckpointInterval();
        atomikosProperties73.setForceShutdownOnVmExit(false);
        long long83 = atomikosProperties73.checkpointInterval;
        atomikosProperties60.set(properties70, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties73);
        atomikosProperties0.set(properties28, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 500L + "'", long80 == 500L);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 500L + "'", long83 == 500L);
    }

    @Test
    public void test7740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7740");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties23 = atomikosProperties22.asProperties();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        java.lang.Object obj28 = properties23.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection29 = properties23.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj33 = properties30.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties38 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setService("");
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setEnableLogging(false);
        java.lang.String str52 = atomikosProperties45.logBaseName;
        java.lang.Object obj53 = properties38.replace((java.lang.Object) atomikosProperties40, (java.lang.Object) atomikosProperties45);
        boolean boolean54 = properties23.contains((java.lang.Object) properties38);
        java.lang.String str55 = properties38.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setLogBaseDir("");
        atomikosProperties56.setMaxTimeout(100L);
        long long61 = atomikosProperties56.getDefaultJtaTimeout();
        java.lang.Object obj62 = properties3.putIfAbsent((java.lang.Object) properties38, (java.lang.Object) atomikosProperties56);
        java.lang.String str63 = atomikosProperties56.service;
        boolean boolean64 = atomikosProperties56.forceShutdownOnVmExit;
        java.lang.String str65 = atomikosProperties56.getService();
        atomikosProperties56.threadedTwoPhaseCommit = false;
        java.util.Properties properties68 = atomikosProperties56.asProperties();
        java.lang.String str69 = atomikosProperties56.getService();
        boolean boolean70 = atomikosProperties56.isSerialJtaTransactions();
        atomikosProperties56.setCheckpointInterval((long) 97);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertEquals("'" + obj33 + "' != '" + (-1.0d) + "'", obj33, (-1.0d));
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str55, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test7741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7741");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        boolean boolean9 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties19 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.lang.String str24 = atomikosProperties20.logBaseName;
        atomikosProperties20.service = "tmlog";
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.forceShutdownOnVmExit;
        java.lang.String str30 = atomikosProperties28.getLogBaseDir();
        java.lang.Object obj31 = properties19.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) str30);
        java.lang.Object obj32 = properties4.put((java.lang.Object) atomikosProperties6, (java.lang.Object) atomikosProperties20);
        java.util.Properties properties33 = atomikosProperties20.asProperties();
        atomikosProperties20.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str36 = atomikosProperties20.service;
        atomikosProperties20.defaultJtaTimeout = '4';
        long long39 = atomikosProperties20.defaultJtaTimeout;
        atomikosProperties20.setDefaultJtaTimeout((long) 11);
        java.lang.String str42 = atomikosProperties20.logBaseDir;
        atomikosProperties20.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 52L + "'", long39 == 52L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str42, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7742");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Properties properties2 = atomikosProperties0.asProperties();
        long long3 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.enableLogging;
        int int6 = atomikosProperties0.getMaxActives();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        long long8 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
    }

    @Test
    public void test7743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7743");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.keys();
        java.lang.Object obj31 = properties26.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj36 = properties33.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties38 = new java.util.Properties(properties26);
        java.lang.Object obj39 = properties21.get((java.lang.Object) properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties21.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties43 = atomikosProperties42.asProperties();
        long long44 = atomikosProperties42.getDefaultJtaTimeout();
        atomikosProperties42.setCheckpointInterval(0L);
        atomikosProperties42.defaultJtaTimeout = ' ';
        boolean boolean49 = atomikosProperties42.serialJtaTransactions;
        atomikosProperties42.setCheckpointInterval(0L);
        atomikosProperties42.checkpointInterval = (short) 0;
        atomikosProperties0.set(properties21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}", (java.lang.Object) atomikosProperties42);
        java.util.Set<java.lang.Object> objSet55 = properties21.keySet();
        java.io.PrintStream printStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.list(printStream56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1.0d) + "'", obj36, (-1.0d));
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet55);
    }

    @Test
    public void test7744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7744");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        java.util.Properties properties36 = atomikosProperties34.asProperties();
        java.lang.Object obj37 = properties13.remove((java.lang.Object) atomikosProperties34);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties13.keys();
        java.util.Properties properties39 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setService("");
        boolean boolean43 = atomikosProperties40.isEnableLogging();
        java.util.Properties properties44 = atomikosProperties40.asProperties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setService("");
        boolean boolean49 = atomikosProperties46.isEnableLogging();
        java.util.Properties properties50 = atomikosProperties46.asProperties();
        atomikosProperties46.setSerialJtaTransactions(false);
        java.lang.String str53 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties59 = atomikosProperties56.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean61 = atomikosProperties60.forceShutdownOnVmExit;
        atomikosProperties60.setSerialJtaTransactions(true);
        java.lang.String str64 = atomikosProperties60.logBaseName;
        atomikosProperties60.service = "tmlog";
        java.util.Properties properties67 = atomikosProperties60.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean69 = atomikosProperties68.forceShutdownOnVmExit;
        java.lang.String str70 = atomikosProperties68.getLogBaseDir();
        java.lang.Object obj71 = properties59.getOrDefault((java.lang.Object) atomikosProperties60, (java.lang.Object) str70);
        java.lang.Object obj72 = properties44.put((java.lang.Object) atomikosProperties46, (java.lang.Object) atomikosProperties60);
        boolean boolean73 = atomikosProperties46.forceShutdownOnVmExit;
        atomikosProperties46.setDefaultJtaTimeout((long) (short) 0);
        boolean boolean76 = atomikosProperties46.isEnableLogging();
        java.util.Properties properties77 = atomikosProperties46.asProperties();
        long long78 = atomikosProperties46.getDefaultJtaTimeout();
        boolean boolean79 = properties13.equals((java.lang.Object) long78);
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.util.Properties properties83 = new java.util.Properties(properties81);
        java.util.Properties properties84 = new java.util.Properties(properties83);
        java.util.Properties properties85 = new java.util.Properties(properties83);
        boolean boolean86 = properties13.containsValue((java.lang.Object) properties85);
        java.lang.Object obj87 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = properties13.contains(obj87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test7745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7745");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties9 = atomikosProperties6.asProperties();
        boolean boolean10 = properties3.contains((java.lang.Object) properties9);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj24 = properties21.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties26 = new java.util.Properties(properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setService("");
        boolean boolean30 = atomikosProperties27.isEnableLogging();
        java.util.Properties properties31 = atomikosProperties27.asProperties();
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.enableLogging = false;
        java.lang.String str36 = atomikosProperties27.service;
        atomikosProperties27.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean40 = atomikosProperties39.forceShutdownOnVmExit;
        atomikosProperties39.setSerialJtaTransactions(true);
        java.lang.String str43 = atomikosProperties39.logBaseName;
        boolean boolean44 = atomikosProperties39.forceShutdownOnVmExit;
        int int45 = atomikosProperties39.maxActives;
        java.lang.String str46 = atomikosProperties39.logBaseName;
        atomikosProperties39.setForceShutdownOnVmExit(true);
        java.util.Properties properties49 = atomikosProperties39.asProperties();
        boolean boolean50 = atomikosProperties39.isForceShutdownOnVmExit();
        java.util.Properties properties51 = atomikosProperties39.asProperties();
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setCheckpointInterval((long) 'a');
        java.lang.Object obj56 = properties14.put((java.lang.Object) atomikosProperties27, (java.lang.Object) 'a');
        boolean boolean57 = properties3.contains((java.lang.Object) properties14);
        properties14.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties14.elements();
        java.util.Properties properties60 = new java.util.Properties(properties14);
        java.lang.String str62 = properties60.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1.0d) + "'", obj24, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tmlog" + "'", str46, "tmlog");
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test7746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7746");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        properties21.clear();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        boolean boolean31 = properties27.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long34 = atomikosProperties33.defaultJtaTimeout;
        boolean boolean35 = atomikosProperties33.enableLogging;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.Object obj38 = properties27.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean39 = properties21.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties43 = atomikosProperties42.asProperties();
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties43.keys();
        java.lang.Object obj48 = properties43.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties49 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setService("");
        atomikosProperties51.setSerialJtaTransactions(true);
        java.util.Properties properties56 = atomikosProperties51.asProperties();
        properties56.clear();
        boolean boolean58 = properties21.replace((java.lang.Object) properties43, (java.lang.Object) 0.0d, (java.lang.Object) properties56);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties63 = atomikosProperties60.asProperties();
        atomikosProperties60.setSerialJtaTransactions(true);
        boolean boolean66 = atomikosProperties60.isSerialJtaTransactions();
        java.lang.Object obj67 = properties10.get((java.lang.Object) atomikosProperties60);
        int int68 = atomikosProperties60.getMaxActives();
        boolean boolean69 = atomikosProperties60.threadedTwoPhaseCommit;
        long long70 = atomikosProperties60.checkpointInterval;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
    }

    @Test
    public void test7747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7747");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties2 = atomikosProperties1.asProperties();
        atomikosProperties1.setLogBaseName("hi!");
        atomikosProperties1.setCheckpointInterval((long) ' ');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        long long12 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.maxTimeout = (-1);
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long17 = atomikosProperties16.defaultJtaTimeout;
        boolean boolean18 = atomikosProperties16.enableLogging;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties15.elements();
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) ' ', (java.lang.Object) properties15);
        java.util.Properties properties25 = new java.util.Properties(properties0);
        java.util.Properties properties26 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties30 = atomikosProperties27.asProperties();
        java.lang.String str32 = properties30.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.lang.Object> objSet33 = properties30.keySet();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.defaultJtaTimeout = (byte) -1;
        int int41 = atomikosProperties38.maxActives;
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        java.lang.Object obj50 = properties45.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        java.util.Set<java.lang.String> strSet52 = properties45.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties45.elements();
        boolean boolean54 = properties37.remove((java.lang.Object) int41, (java.lang.Object) objEnumeration53);
        java.lang.Object obj55 = properties0.getOrDefault((java.lang.Object) objSet33, (java.lang.Object) properties37);
        java.util.Properties properties56 = new java.util.Properties(properties37);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties60 = atomikosProperties59.asProperties();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties60.keys();
        boolean boolean63 = properties60.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties60.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setService("");
        boolean boolean68 = atomikosProperties65.isEnableLogging();
        java.util.Properties properties69 = atomikosProperties65.asProperties();
        properties69.clear();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties74 = atomikosProperties73.asProperties();
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties74.keys();
        java.lang.Object obj78 = properties69.put((java.lang.Object) properties74, (java.lang.Object) (byte) 0);
        boolean boolean79 = properties74.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean81 = atomikosProperties80.forceShutdownOnVmExit;
        atomikosProperties80.setSerialJtaTransactions(true);
        boolean boolean84 = properties74.containsKey((java.lang.Object) atomikosProperties80);
        java.util.Properties properties85 = new java.util.Properties(properties74);
        java.lang.Object obj86 = properties60.remove((java.lang.Object) properties85);
        java.lang.String str88 = properties85.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str89 = properties85.toString();
        java.lang.Object obj90 = properties85.clone();
        boolean boolean91 = properties37.containsValue((java.lang.Object) properties85);
        java.lang.Object obj94 = properties85.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=0, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{}" + "'", str89, "{}");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test7748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7748");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        long long4 = atomikosProperties0.maxTimeout;
        atomikosProperties0.enableLogging = true;
        boolean boolean7 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.forceShutdownOnVmExit = true;
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        java.util.Properties properties17 = new java.util.Properties(properties14);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Collection<java.lang.Object> objCollection24 = properties21.values();
        java.util.Properties properties25 = new java.util.Properties(properties21);
        java.lang.Object obj26 = properties21.clone();
        java.util.Properties properties27 = new java.util.Properties(properties21);
        java.lang.String str29 = properties21.getProperty("");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties33 = atomikosProperties32.asProperties();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties33.keys();
        java.lang.Object obj38 = properties33.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection39 = properties33.values();
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj43 = properties40.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties45 = new java.util.Properties(properties33);
        java.lang.String str46 = properties33.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setService("");
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        long long52 = atomikosProperties47.getCheckpointInterval();
        atomikosProperties47.maxTimeout = (-1);
        java.util.Properties properties55 = atomikosProperties47.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long57 = atomikosProperties56.defaultJtaTimeout;
        boolean boolean58 = atomikosProperties56.enableLogging;
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties61 = atomikosProperties56.asProperties();
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties55.elements();
        java.util.Properties properties64 = new java.util.Properties(properties55);
        java.lang.Object obj65 = properties33.get((java.lang.Object) properties55);
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj67 = properties17.get((java.lang.Object) properties21);
        java.util.Properties properties68 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setService("");
        boolean boolean73 = atomikosProperties70.isEnableLogging();
        java.util.Properties properties74 = atomikosProperties70.asProperties();
        atomikosProperties70.setSerialJtaTransactions(false);
        atomikosProperties70.enableLogging = false;
        java.lang.String str79 = atomikosProperties70.logBaseName;
        atomikosProperties70.defaultJtaTimeout = (byte) -1;
        atomikosProperties0.set(properties21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties70);
        java.lang.Class<?> wildcardClass83 = properties21.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 300000L + "'", long4 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(obj26);
// flaky:         org.junit.Assert.assertEquals(obj26.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + (-1.0d) + "'", obj43, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str46, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10000L + "'", long57 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test7749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7749");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean8 = atomikosProperties7.forceShutdownOnVmExit;
        atomikosProperties7.setSerialJtaTransactions(true);
        java.lang.String str11 = atomikosProperties7.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        java.util.Properties properties14 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        long long21 = atomikosProperties16.getCheckpointInterval();
        boolean boolean22 = atomikosProperties16.threadedTwoPhaseCommit;
        atomikosProperties7.set(properties14, "tmlog", (java.lang.Object) atomikosProperties16);
        boolean boolean24 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.checkpointInterval = 0L;
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties32 = atomikosProperties31.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties32.keys();
        java.lang.Object obj37 = properties32.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection38 = properties32.values();
        java.util.Set<java.lang.String> strSet39 = properties32.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties32.elements();
        boolean boolean41 = properties6.remove((java.lang.Object) 0L, (java.lang.Object) properties32);
        int int42 = properties32.size();
        java.lang.String str43 = properties32.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean45 = atomikosProperties44.forceShutdownOnVmExit;
        atomikosProperties44.setSerialJtaTransactions(true);
        java.lang.String str48 = atomikosProperties44.logBaseName;
        boolean boolean49 = atomikosProperties44.forceShutdownOnVmExit;
        atomikosProperties44.enableLogging = false;
        int int52 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties55 = atomikosProperties44.asProperties();
        atomikosProperties44.enableLogging = false;
        java.lang.Object obj58 = properties32.get((java.lang.Object) false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 9 + "'", int42 == 9);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str43, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test7750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7750");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        java.lang.String str6 = atomikosProperties0.logBaseName;
        long long7 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
    }

    @Test
    public void test7751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7751");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        java.lang.Object obj8 = properties7.clone();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(outputStream9, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
    }

    @Test
    public void test7752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7752");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setMaxTimeout(0L);
        atomikosProperties9.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str21 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.setCheckpointInterval((long) 50);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
    }

    @Test
    public void test7753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7753");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        long long7 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str6, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
    }

    @Test
    public void test7754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7754");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setMaxTimeout(1L);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.checkpointInterval;
        java.lang.String str9 = atomikosProperties0.transactionManagerUniqueName;
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setService("");
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        long long16 = atomikosProperties11.getCheckpointInterval();
        boolean boolean17 = atomikosProperties11.threadedTwoPhaseCommit;
        atomikosProperties11.transactionManagerUniqueName = "tmlog";
        boolean boolean20 = atomikosProperties11.forceShutdownOnVmExit;
        boolean boolean21 = atomikosProperties11.enableLogging;
        atomikosProperties11.defaultJtaTimeout = 1;
        atomikosProperties11.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties11.defaultJtaTimeout = ' ';
        long long28 = atomikosProperties11.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean30 = atomikosProperties29.forceShutdownOnVmExit;
        atomikosProperties29.setSerialJtaTransactions(true);
        java.lang.String str33 = atomikosProperties29.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        java.util.Properties properties36 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        long long43 = atomikosProperties38.getCheckpointInterval();
        boolean boolean44 = atomikosProperties38.threadedTwoPhaseCommit;
        atomikosProperties29.set(properties36, "tmlog", (java.lang.Object) atomikosProperties38);
        java.lang.String str46 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.logBaseName = "";
        atomikosProperties38.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties38.logBaseName = "";
        atomikosProperties38.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj55 = properties10.getOrDefault((java.lang.Object) long28, (java.lang.Object) atomikosProperties38);
        java.util.Properties properties56 = new java.util.Properties(properties10);
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        java.io.PrintWriter printWriter59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties57.list(printWriter59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 500L + "'", long43 == 500L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test7755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7755");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.transactionManagerUniqueName = "";
        boolean boolean11 = atomikosProperties0.enableLogging;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setService("");
        boolean boolean17 = atomikosProperties14.isEnableLogging();
        java.util.Properties properties18 = atomikosProperties14.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.util.Collection<java.lang.Object> objCollection20 = properties18.values();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Enumeration<?> wildcardEnumeration27 = properties24.propertyNames();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        java.lang.String str29 = properties24.toString();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties33 = atomikosProperties32.asProperties();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties33.keys();
        boolean boolean37 = properties33.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.lang.Object obj46 = properties41.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection47 = properties41.values();
        boolean boolean48 = properties33.containsKey((java.lang.Object) properties41);
        java.util.Properties properties49 = new java.util.Properties(properties33);
        java.lang.Object obj50 = properties49.clone();
        java.util.Collection<java.lang.Object> objCollection51 = properties49.values();
        java.lang.Object obj52 = properties24.get((java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setService("");
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        long long58 = atomikosProperties53.getCheckpointInterval();
        atomikosProperties53.setMaxTimeout(0L);
        atomikosProperties53.forceShutdownOnVmExit = false;
        int int63 = atomikosProperties53.maxActives;
        atomikosProperties53.setEnableLogging(true);
        boolean boolean66 = properties49.equals((java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean68 = atomikosProperties67.enableLogging;
        atomikosProperties67.setMaxActives((int) (byte) 1);
        atomikosProperties67.setMaxActives(10);
        boolean boolean73 = properties49.contains((java.lang.Object) atomikosProperties67);
        java.util.Properties properties74 = new java.util.Properties(properties49);
        boolean boolean75 = properties18.contains((java.lang.Object) properties49);
        java.util.Properties properties76 = new java.util.Properties(properties49);
        java.util.Properties properties77 = new java.util.Properties(properties49);
        boolean boolean78 = properties13.equals((java.lang.Object) properties49);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 500L + "'", long58 == 500L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 50 + "'", int63 == 50);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test7756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7756");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        boolean boolean16 = properties8.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties14);
        java.util.Collection<java.lang.Object> objCollection17 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setService("");
        boolean boolean21 = atomikosProperties18.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties18.asProperties();
        properties22.clear();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.lang.Object obj31 = properties22.put((java.lang.Object) properties27, (java.lang.Object) (byte) 0);
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) objCollection17, obj31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        atomikosProperties33.service = "tmlog";
        atomikosProperties33.setSerialJtaTransactions(false);
        java.util.Properties properties42 = atomikosProperties33.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Properties properties44 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.logBaseDir = "hi!";
        atomikosProperties45.setMaxTimeout(500L);
        atomikosProperties45.maxTimeout = (-1L);
        atomikosProperties45.serialJtaTransactions = true;
        boolean boolean56 = atomikosProperties45.serialJtaTransactions;
        atomikosProperties45.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean59 = properties6.containsKey((java.lang.Object) atomikosProperties45);
        atomikosProperties45.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties45.setMaxTimeout((long) (short) 10);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test7757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7757");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        boolean boolean17 = properties9.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties9.elements();
        boolean boolean20 = properties3.remove((java.lang.Object) properties9, (java.lang.Object) 50);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties30 = atomikosProperties27.asProperties();
        boolean boolean31 = properties24.contains((java.lang.Object) properties30);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        boolean boolean39 = properties35.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties40 = new java.util.Properties(properties35);
        java.lang.Object obj41 = properties9.replace((java.lang.Object) properties30, (java.lang.Object) properties40);
        properties40.clear();
        java.lang.Object obj43 = null;
        boolean boolean44 = properties40.equals(obj43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.logBaseDir = "hi!";
        atomikosProperties45.setMaxTimeout(500L);
        atomikosProperties45.logBaseName = "hi!";
        atomikosProperties45.setDefaultJtaTimeout((long) (byte) -1);
        java.lang.String str56 = atomikosProperties45.logBaseName;
        boolean boolean57 = properties40.containsKey((java.lang.Object) atomikosProperties45);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        long long60 = atomikosProperties45.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
    }

    @Test
    public void test7758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7758");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean7 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Set<java.lang.String> strSet11 = properties9.stringPropertyNames();
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.load(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test7759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7759");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties20 = new java.util.Properties(properties14);
        boolean boolean21 = properties1.contains((java.lang.Object) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties1);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj24 = properties22.clone();
        java.util.Collection<java.lang.Object> objCollection25 = properties22.values();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        java.io.Reader reader27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.load(reader27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertNotNull(objCollection25);
    }

    @Test
    public void test7760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7760");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        boolean boolean22 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties23 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.lang.String str28 = atomikosProperties24.logBaseName;
        boolean boolean29 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.logBaseName = "tmlog";
        atomikosProperties24.enableLogging = true;
        long long34 = atomikosProperties24.getDefaultJtaTimeout();
        boolean boolean35 = atomikosProperties24.isForceShutdownOnVmExit();
        boolean boolean36 = properties2.remove((java.lang.Object) properties7, (java.lang.Object) boolean35);
        java.util.Properties properties37 = new java.util.Properties(properties7);
        properties7.clear();
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj40 = properties7.remove(obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test7761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7761");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.transactionManagerUniqueName = "";
        boolean boolean11 = atomikosProperties0.enableLogging;
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.store(outputStream18, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test7762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7762");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        properties3.clear();
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties(properties3);
        java.util.Properties properties11 = new java.util.Properties(properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
    }

    @Test
    public void test7763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7763");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        long long8 = atomikosProperties0.defaultJtaTimeout;
        long long9 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean10 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.serialJtaTransactions = true;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test7764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7764");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setService("");
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        long long16 = atomikosProperties11.getCheckpointInterval();
        boolean boolean17 = atomikosProperties11.threadedTwoPhaseCommit;
        atomikosProperties11.transactionManagerUniqueName = "tmlog";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        boolean boolean23 = atomikosProperties20.isEnableLogging();
        java.util.Properties properties24 = atomikosProperties20.asProperties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setService("");
        boolean boolean29 = atomikosProperties26.isEnableLogging();
        java.util.Properties properties30 = atomikosProperties26.asProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        java.lang.String str33 = atomikosProperties26.getLogBaseName();
        atomikosProperties26.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties39 = atomikosProperties36.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean41 = atomikosProperties40.forceShutdownOnVmExit;
        atomikosProperties40.setSerialJtaTransactions(true);
        java.lang.String str44 = atomikosProperties40.logBaseName;
        atomikosProperties40.service = "tmlog";
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean49 = atomikosProperties48.forceShutdownOnVmExit;
        java.lang.String str50 = atomikosProperties48.getLogBaseDir();
        java.lang.Object obj51 = properties39.getOrDefault((java.lang.Object) atomikosProperties40, (java.lang.Object) str50);
        java.lang.Object obj52 = properties24.put((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean54 = atomikosProperties53.forceShutdownOnVmExit;
        atomikosProperties53.checkpointInterval = 300000L;
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties60 = atomikosProperties59.asProperties();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties60.keys();
        boolean boolean64 = properties60.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties68 = atomikosProperties67.asProperties();
        properties66.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet73 = properties72.keySet();
        boolean boolean74 = properties66.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties66.elements();
        boolean boolean77 = properties60.remove((java.lang.Object) properties66, (java.lang.Object) 50);
        java.util.Properties properties79 = null;
        java.util.Properties properties80 = new java.util.Properties(properties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties82 = atomikosProperties81.asProperties();
        properties80.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties82);
        java.util.Properties properties84 = new java.util.Properties(properties82);
        java.util.Collection<java.lang.Object> objCollection85 = properties82.values();
        atomikosProperties53.set(properties66, "{}", (java.lang.Object) objCollection85);
        boolean boolean87 = properties1.replace((java.lang.Object) "tmlog", (java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties88 = new java.util.Properties(properties1);
        java.util.Set<java.lang.Object> objSet89 = properties1.keySet();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objSet89);
    }

    @Test
    public void test7765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7765");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean4 = atomikosProperties0.serialJtaTransactions;
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str6 = atomikosProperties0.service;
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.lang.String str9 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean10 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        int int13 = atomikosProperties0.maxActives;
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test7766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7766");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.lang.String str16 = properties3.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties17.getCheckpointInterval();
        atomikosProperties17.maxTimeout = (-1);
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long27 = atomikosProperties26.defaultJtaTimeout;
        boolean boolean28 = atomikosProperties26.enableLogging;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.util.Properties properties31 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties25.elements();
        java.util.Properties properties34 = new java.util.Properties(properties25);
        java.lang.Object obj35 = properties3.get((java.lang.Object) properties25);
        java.util.Set<java.lang.String> strSet36 = properties3.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean38 = atomikosProperties37.forceShutdownOnVmExit;
        atomikosProperties37.setSerialJtaTransactions(true);
        java.lang.String str41 = atomikosProperties37.logBaseName;
        boolean boolean42 = atomikosProperties37.forceShutdownOnVmExit;
        int int43 = atomikosProperties37.maxActives;
        atomikosProperties37.setService("hi!");
        boolean boolean46 = atomikosProperties37.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setService("");
        atomikosProperties47.logBaseDir = "hi!";
        atomikosProperties47.setMaxTimeout(500L);
        atomikosProperties47.maxTimeout = (-1L);
        java.lang.Object obj56 = properties3.getOrDefault((java.lang.Object) boolean46, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean58 = atomikosProperties57.forceShutdownOnVmExit;
        atomikosProperties57.setSerialJtaTransactions(true);
        java.lang.String str61 = atomikosProperties57.logBaseName;
        atomikosProperties57.service = "tmlog";
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        java.util.Set<java.lang.Object> objSet65 = properties64.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties64.keys();
        java.util.Enumeration<?> wildcardEnumeration67 = properties64.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setService("");
        boolean boolean71 = atomikosProperties68.isEnableLogging();
        java.util.Properties properties72 = atomikosProperties68.asProperties();
        properties72.clear();
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties77 = atomikosProperties76.asProperties();
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties77.keys();
        java.lang.Object obj81 = properties72.put((java.lang.Object) properties77, (java.lang.Object) (byte) 0);
        boolean boolean82 = properties77.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean84 = atomikosProperties83.forceShutdownOnVmExit;
        atomikosProperties83.setSerialJtaTransactions(true);
        boolean boolean87 = properties77.containsKey((java.lang.Object) atomikosProperties83);
        atomikosProperties83.setLogBaseName("hi!");
        int int90 = atomikosProperties83.getMaxActives();
        atomikosProperties83.setCheckpointInterval((long) (short) -1);
        atomikosProperties83.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties83.setMaxActives((int) (byte) 0);
        java.lang.Object obj97 = properties3.put((java.lang.Object) wildcardEnumeration67, (java.lang.Object) (byte) 0);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(objSet65);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(wildcardEnumeration67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test7767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7767");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.logBaseName = "";
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) '4');
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.maxTimeout = (short) 10;
        atomikosProperties0.setMaxTimeout((long) 97);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test7768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setService("");
        atomikosProperties13.setSerialJtaTransactions(true);
        atomikosProperties13.setEnableLogging(false);
        java.lang.String str20 = atomikosProperties13.logBaseName;
        boolean boolean21 = atomikosProperties13.isSerialJtaTransactions();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties25.keys();
        java.lang.Object obj30 = properties25.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection31 = properties25.values();
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj35 = properties32.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setService("");
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setService("");
        atomikosProperties47.setSerialJtaTransactions(true);
        atomikosProperties47.setEnableLogging(false);
        java.lang.String str54 = atomikosProperties47.logBaseName;
        java.lang.Object obj55 = properties40.replace((java.lang.Object) atomikosProperties42, (java.lang.Object) atomikosProperties47);
        boolean boolean56 = properties25.contains((java.lang.Object) properties40);
        java.lang.String str57 = properties40.toString();
        java.util.Set<java.lang.Object> objSet58 = properties40.keySet();
        java.lang.Object obj59 = properties12.replace((java.lang.Object) atomikosProperties13, (java.lang.Object) properties40);
        atomikosProperties13.setEnableLogging(false);
        atomikosProperties13.setCheckpointInterval((long) 10);
        java.lang.String str64 = atomikosProperties13.getLogBaseDir();
        atomikosProperties13.enableLogging = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertEquals("'" + obj35 + "' != '" + (-1.0d) + "'", obj35, (-1.0d));
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str57, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test7769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7769");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        properties3.clear();
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Properties properties10 = new java.util.Properties(properties3);
        java.util.Properties properties11 = new java.util.Properties(properties3);
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.lang.String str15 = properties12.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tmlog={}, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.Object obj16 = properties12.clone();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
    }

    @Test
    public void test7770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7770");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties20 = new java.util.Properties(properties14);
        boolean boolean21 = properties1.contains((java.lang.Object) properties20);
        int int22 = properties1.size();
        java.util.Enumeration<?> wildcardEnumeration23 = properties1.propertyNames();
        java.util.Properties properties24 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties28 = atomikosProperties25.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setService("");
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        long long34 = atomikosProperties29.getCheckpointInterval();
        atomikosProperties29.forceShutdownOnVmExit = true;
        atomikosProperties29.setSerialJtaTransactions(true);
        java.util.Properties properties39 = atomikosProperties29.asProperties();
        boolean boolean40 = properties28.containsValue((java.lang.Object) properties39);
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Properties properties42 = new java.util.Properties(properties39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties39.entrySet();
        boolean boolean44 = properties1.containsKey((java.lang.Object) properties39);
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream45, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=0, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 9 + "'", int22 == 9);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 500L + "'", long34 == 500L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test7771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7771");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        int int3 = atomikosProperties0.getMaxActives();
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives((-1));
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test7772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7772");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        long long13 = atomikosProperties0.getMaxTimeout();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setLogBaseName("{}");
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.io.PrintWriter printWriter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.list(printWriter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties19);
    }

    @Test
    public void test7773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7773");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        long long8 = atomikosProperties0.defaultJtaTimeout;
        long long9 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str10 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setMaxTimeout(500L);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test7774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7774");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.lang.Object obj3 = properties1.clone();
        java.lang.String str4 = properties1.toString();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(obj3);
// flaky:         org.junit.Assert.assertEquals(obj3.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str4, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7775");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = new java.util.Properties(properties3);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection13 = properties10.values();
        java.util.Properties properties14 = new java.util.Properties(properties10);
        java.lang.Object obj15 = properties10.clone();
        java.util.Properties properties16 = new java.util.Properties(properties10);
        java.lang.String str18 = properties10.getProperty("");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties22 = atomikosProperties21.asProperties();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        java.lang.Object obj27 = properties22.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection28 = properties22.values();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj32 = properties29.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties34 = new java.util.Properties(properties22);
        java.lang.String str35 = properties22.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setService("");
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        long long41 = atomikosProperties36.getCheckpointInterval();
        atomikosProperties36.maxTimeout = (-1);
        java.util.Properties properties44 = atomikosProperties36.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long46 = atomikosProperties45.defaultJtaTimeout;
        boolean boolean47 = atomikosProperties45.enableLogging;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.util.Properties properties50 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties44.elements();
        java.util.Properties properties53 = new java.util.Properties(properties44);
        java.lang.Object obj54 = properties22.get((java.lang.Object) properties44);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj56 = properties6.get((java.lang.Object) properties10);
        java.util.Properties properties57 = new java.util.Properties(properties10);
        java.util.Properties properties58 = new java.util.Properties(properties10);
        java.util.Properties properties59 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.keys();
        java.lang.Object obj63 = properties59.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertEquals("'" + obj32 + "' != '" + (-1.0d) + "'", obj32, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 500L + "'", long41 == 500L);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test7776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7776");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        properties3.clear();
        java.util.Properties properties9 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.defaultJtaTimeout = (byte) -1;
        int int13 = atomikosProperties10.maxActives;
        boolean boolean14 = atomikosProperties10.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        java.lang.String str19 = atomikosProperties15.logBaseName;
        boolean boolean20 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.logBaseName = "tmlog";
        atomikosProperties15.setCheckpointInterval((long) 100);
        atomikosProperties15.setLogBaseName("");
        atomikosProperties15.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties29 = atomikosProperties15.asProperties();
        boolean boolean30 = properties3.remove((java.lang.Object) atomikosProperties10, (java.lang.Object) atomikosProperties15);
        java.lang.String str31 = atomikosProperties10.logBaseName;
        java.lang.String str32 = atomikosProperties10.getService();
        int int33 = atomikosProperties10.getMaxActives();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
    }

    @Test
    public void test7777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7777");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseName = "tmlog";
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long7 = atomikosProperties6.defaultJtaTimeout;
        boolean boolean8 = atomikosProperties6.enableLogging;
        atomikosProperties6.setSerialJtaTransactions(true);
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        java.util.Properties properties12 = atomikosProperties6.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        atomikosProperties14.checkpointInterval = 1L;
        boolean boolean18 = atomikosProperties14.forceShutdownOnVmExit;
        java.lang.Object obj19 = properties12.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties23 = atomikosProperties22.asProperties();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties23.keys();
        boolean boolean27 = properties23.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties28 = new java.util.Properties(properties23);
        java.lang.Object obj29 = properties28.clone();
        java.lang.Object obj30 = properties28.clone();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.keys();
        java.lang.Object obj40 = properties35.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties41 = new java.util.Properties(properties35);
        atomikosProperties14.set(properties28, "tmlog", (java.lang.Object) properties41);
        java.util.Collection<java.lang.Object> objCollection43 = properties28.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties47 = atomikosProperties44.asProperties();
        java.lang.Object obj48 = properties47.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet49 = properties47.entrySet();
        boolean boolean50 = properties5.remove((java.lang.Object) objCollection43, (java.lang.Object) objEntrySet49);
        java.lang.String str51 = properties5.toString();
        java.lang.String str54 = properties5.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objEntrySet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str51, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str54, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7778");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        properties11.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties11.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setService("");
        boolean boolean24 = atomikosProperties21.isEnableLogging();
        java.util.Properties properties25 = atomikosProperties21.asProperties();
        properties25.clear();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties30 = atomikosProperties29.asProperties();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        java.lang.Object obj34 = properties25.put((java.lang.Object) properties30, (java.lang.Object) (byte) 0);
        boolean boolean35 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean37 = atomikosProperties36.forceShutdownOnVmExit;
        atomikosProperties36.setSerialJtaTransactions(true);
        boolean boolean40 = properties30.containsKey((java.lang.Object) atomikosProperties36);
        atomikosProperties36.setTransactionManagerUniqueName("hi!");
        java.lang.String str43 = atomikosProperties36.logBaseDir;
        java.util.Properties properties44 = atomikosProperties36.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setEnableLogging(false);
        java.lang.String str52 = atomikosProperties45.logBaseName;
        java.lang.String str53 = atomikosProperties45.getLogBaseName();
        boolean boolean54 = properties44.contains((java.lang.Object) atomikosProperties45);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        java.lang.Object obj56 = properties11.get((java.lang.Object) properties55);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties60 = atomikosProperties59.asProperties();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Properties properties62 = new java.util.Properties(properties60);
        java.util.Properties properties63 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties65 = atomikosProperties64.asProperties();
        java.util.Properties properties66 = atomikosProperties64.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setService("");
        boolean boolean70 = atomikosProperties67.isEnableLogging();
        java.util.Properties properties71 = atomikosProperties67.asProperties();
        java.lang.Object obj72 = properties60.getOrDefault((java.lang.Object) properties66, (java.lang.Object) atomikosProperties67);
        java.lang.String str73 = properties60.toString();
        boolean boolean74 = properties11.contains((java.lang.Object) properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties11.keys();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(obj72);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str73, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
    }

    @Test
    public void test7779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7779");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.lang.String str11 = properties3.getProperty("");
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties15.getProperty("hi!");
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.enableLogging;
        atomikosProperties24.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setService("");
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        long long33 = atomikosProperties28.getCheckpointInterval();
        atomikosProperties28.maxTimeout = (-1);
        java.util.Properties properties36 = atomikosProperties28.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long38 = atomikosProperties37.defaultJtaTimeout;
        boolean boolean39 = atomikosProperties37.enableLogging;
        atomikosProperties37.setSerialJtaTransactions(true);
        java.util.Properties properties42 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.forceShutdownOnVmExit;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.lang.String str49 = atomikosProperties45.logBaseName;
        boolean boolean50 = atomikosProperties45.forceShutdownOnVmExit;
        int int51 = atomikosProperties45.maxActives;
        java.lang.String str52 = atomikosProperties45.logBaseName;
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        boolean boolean56 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties57 = atomikosProperties45.asProperties();
        boolean boolean58 = properties22.replace((java.lang.Object) (byte) 1, (java.lang.Object) properties36, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties59 = new java.util.Properties(properties22);
        boolean boolean60 = properties15.equals((java.lang.Object) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties15.elements();
        properties15.clear();
        java.lang.Object obj63 = properties3.remove((java.lang.Object) properties15);
        java.lang.String str65 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.io.OutputStream outputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream66, "{}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test7780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7780");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.transactionManagerUniqueName = "hi!";
        atomikosProperties0.setMaxActives((int) (short) 10);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setService("");
        atomikosProperties14.setSerialJtaTransactions(true);
        java.util.Properties properties19 = atomikosProperties14.asProperties();
        properties19.clear();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties25.keys();
        boolean boolean29 = properties25.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long32 = atomikosProperties31.defaultJtaTimeout;
        boolean boolean33 = atomikosProperties31.enableLogging;
        atomikosProperties31.setSerialJtaTransactions(true);
        java.lang.Object obj36 = properties25.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean37 = properties19.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        properties43.clear();
        java.lang.Object obj46 = properties19.put((java.lang.Object) properties43, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties19.elements();
        java.util.Set<java.lang.String> strSet48 = properties19.stringPropertyNames();
        java.lang.Object obj50 = properties13.put((java.lang.Object) strSet48, (java.lang.Object) (-1.0d));
        java.util.Collection<java.lang.Object> objCollection51 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setService("");
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        long long57 = atomikosProperties52.getCheckpointInterval();
        boolean boolean58 = atomikosProperties52.threadedTwoPhaseCommit;
        atomikosProperties52.transactionManagerUniqueName = "tmlog";
        boolean boolean61 = atomikosProperties52.forceShutdownOnVmExit;
        boolean boolean62 = atomikosProperties52.enableLogging;
        atomikosProperties52.defaultJtaTimeout = 1;
        java.lang.String str65 = atomikosProperties52.getService();
        java.lang.String str66 = atomikosProperties52.logBaseDir;
        boolean boolean67 = atomikosProperties52.isForceShutdownOnVmExit();
        atomikosProperties52.setCheckpointInterval((long) 11);
        java.lang.Object obj70 = properties13.get((java.lang.Object) atomikosProperties52);
        java.util.Set<java.lang.Object> objSet71 = properties13.keySet();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objSet71);
    }

    @Test
    public void test7781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7781");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.forceShutdownOnVmExit = true;
        org.junit.Assert.assertNotNull(properties1);
    }

    @Test
    public void test7782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7782");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.maxTimeout = 1L;
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.maxActives = (byte) -1;
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test7783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7783");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        long long8 = atomikosProperties0.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.logBaseDir = "hi!";
        atomikosProperties9.setMaxTimeout(500L);
        atomikosProperties9.maxTimeout = (-1L);
        atomikosProperties9.serialJtaTransactions = true;
        boolean boolean20 = atomikosProperties9.serialJtaTransactions;
        atomikosProperties9.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties23 = atomikosProperties9.asProperties();
        java.util.Properties properties24 = atomikosProperties9.asProperties();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties28.keys();
        boolean boolean32 = properties28.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties36 = atomikosProperties35.asProperties();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        boolean boolean42 = properties34.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties34.elements();
        boolean boolean45 = properties28.remove((java.lang.Object) properties34, (java.lang.Object) 50);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties49 = atomikosProperties48.asProperties();
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties51 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties55 = atomikosProperties52.asProperties();
        boolean boolean56 = properties49.contains((java.lang.Object) properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties55.elements();
        java.util.Properties properties58 = new java.util.Properties(properties55);
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.lang.Object obj60 = properties28.get((java.lang.Object) properties58);
        java.util.Properties properties61 = new java.util.Properties(properties58);
        java.lang.Object obj62 = properties24.get((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setService("");
        atomikosProperties64.setSerialJtaTransactions(true);
        java.util.Properties properties69 = atomikosProperties64.asProperties();
        java.util.Properties properties70 = atomikosProperties64.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.keys();
        atomikosProperties0.set(properties24, "", (java.lang.Object) objEnumeration71);
        java.lang.String str73 = atomikosProperties0.service;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test7784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7784");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.logBaseDir = "hi!";
        atomikosProperties0.setMaxTimeout(500L);
        atomikosProperties0.maxTimeout = (-1L);
        atomikosProperties0.serialJtaTransactions = true;
        boolean boolean11 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.lang.String str16 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str19 = atomikosProperties0.service;
        boolean boolean20 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test7785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7785");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.forceShutdownOnVmExit = false;
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        long long14 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
    }

    @Test
    public void test7786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7786");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}", "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test7787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7787");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean6 = properties3.isEmpty();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.keys();
        boolean boolean14 = properties10.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        boolean boolean25 = properties10.containsKey((java.lang.Object) properties18);
        java.util.Properties properties26 = new java.util.Properties(properties10);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj30 = properties26.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        java.lang.String str32 = properties26.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str33 = properties26.toString();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!}" + "'", str33, "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!}");
    }

    @Test
    public void test7788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7788");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        properties4.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setSerialJtaTransactions(true);
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.logBaseName = "tmlog";
        atomikosProperties7.serialJtaTransactions = false;
        java.util.Properties properties18 = atomikosProperties7.asProperties();
        atomikosProperties7.setTransactionManagerUniqueName("tmlog");
        java.lang.Object obj21 = properties4.remove((java.lang.Object) "tmlog");
        int int22 = properties4.size();
        java.util.Properties properties23 = new java.util.Properties(properties4);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.lang.Object obj32 = properties27.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection33 = properties27.values();
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj37 = properties34.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties42 = atomikosProperties41.asProperties();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setService("");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setService("");
        atomikosProperties49.setSerialJtaTransactions(true);
        atomikosProperties49.setEnableLogging(false);
        java.lang.String str56 = atomikosProperties49.logBaseName;
        java.lang.Object obj57 = properties42.replace((java.lang.Object) atomikosProperties44, (java.lang.Object) atomikosProperties49);
        boolean boolean58 = properties27.contains((java.lang.Object) properties42);
        properties42.clear();
        java.util.Enumeration<?> wildcardEnumeration60 = properties42.propertyNames();
        java.util.Properties properties61 = new java.util.Properties(properties42);
        java.util.Properties properties62 = new java.util.Properties(properties61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setService("");
        boolean boolean66 = atomikosProperties63.isEnableLogging();
        java.util.Properties properties67 = atomikosProperties63.asProperties();
        boolean boolean68 = atomikosProperties63.isThreadedTwoPhaseCommit();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        java.util.Properties properties70 = atomikosProperties63.asProperties();
        atomikosProperties63.forceShutdownOnVmExit = true;
        atomikosProperties63.setMaxTimeout((long) (byte) 0);
        java.lang.Object obj75 = properties4.replace((java.lang.Object) properties62, (java.lang.Object) atomikosProperties63);
        java.util.Properties properties76 = new java.util.Properties(properties4);
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties76.store(outputStream77, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertEquals("'" + obj37 + "' != '" + (-1.0d) + "'", obj37, (-1.0d));
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test7789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7789");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        long long7 = atomikosProperties0.checkpointInterval;
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str9 = atomikosProperties0.logBaseName;
        int int10 = atomikosProperties0.maxActives;
        atomikosProperties0.maxActives = (byte) 0;
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.forceShutdownOnVmExit = false;
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        int int18 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test7790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7790");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.service;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) (byte) 1);
        atomikosProperties0.maxActives = (short) 1;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test7791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7791");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setEnableLogging(false);
        boolean boolean31 = atomikosProperties24.forceShutdownOnVmExit;
        java.lang.Object obj32 = properties15.remove((java.lang.Object) boolean31);
        java.lang.String str34 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties35 = new java.util.Properties(properties15);
        java.util.Properties properties36 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean38 = atomikosProperties37.forceShutdownOnVmExit;
        atomikosProperties37.setSerialJtaTransactions(true);
        java.lang.String str41 = atomikosProperties37.logBaseName;
        boolean boolean42 = atomikosProperties37.forceShutdownOnVmExit;
        int int43 = atomikosProperties37.maxActives;
        java.lang.String str44 = atomikosProperties37.logBaseName;
        atomikosProperties37.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties37.asProperties();
        atomikosProperties37.setEnableLogging(true);
        java.lang.String str50 = atomikosProperties37.transactionManagerUniqueName;
        java.util.Properties properties51 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(properties51);
    }

    @Test
    public void test7792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7792");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setService("");
        atomikosProperties25.setSerialJtaTransactions(true);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str32 = atomikosProperties25.logBaseName;
        java.lang.Object obj33 = properties18.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties25);
        boolean boolean34 = properties3.contains((java.lang.Object) properties18);
        properties18.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean37 = atomikosProperties36.forceShutdownOnVmExit;
        atomikosProperties36.setSerialJtaTransactions(true);
        java.lang.String str40 = atomikosProperties36.logBaseName;
        boolean boolean41 = atomikosProperties36.forceShutdownOnVmExit;
        int int42 = atomikosProperties36.maxActives;
        atomikosProperties36.setService("hi!");
        java.util.Properties properties45 = atomikosProperties36.asProperties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties45.entrySet();
        java.lang.Object obj48 = properties18.get((java.lang.Object) properties45);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties52 = atomikosProperties51.asProperties();
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        java.lang.Object obj57 = properties52.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection58 = properties52.values();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj62 = properties59.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties67 = atomikosProperties66.asProperties();
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        java.util.Properties properties69 = new java.util.Properties(properties67);
        java.util.Properties properties70 = new java.util.Properties(properties67);
        java.util.Collection<java.lang.Object> objCollection71 = properties70.values();
        java.util.Enumeration<?> wildcardEnumeration72 = properties70.propertyNames();
        java.lang.Object obj73 = properties59.get((java.lang.Object) wildcardEnumeration72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setService("");
        atomikosProperties74.setThreadedTwoPhaseCommit(true);
        long long79 = atomikosProperties74.getCheckpointInterval();
        java.util.Properties properties80 = atomikosProperties74.asProperties();
        java.util.Properties properties81 = new java.util.Properties(properties80);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setService("");
        atomikosProperties82.setThreadedTwoPhaseCommit(true);
        long long87 = atomikosProperties82.getCheckpointInterval();
        atomikosProperties82.maxTimeout = (-1);
        atomikosProperties82.setCheckpointInterval((long) 9);
        atomikosProperties82.setSerialJtaTransactions(false);
        atomikosProperties82.setDefaultJtaTimeout((long) 50);
        boolean boolean96 = properties18.replace((java.lang.Object) properties59, (java.lang.Object) properties80, (java.lang.Object) atomikosProperties82);
        atomikosProperties82.serialJtaTransactions = false;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (-1.0d) + "'", obj62, (-1.0d));
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNotNull(wildcardEnumeration72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 500L + "'", long79 == 500L);
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 500L + "'", long87 == 500L);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test7793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7793");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        int int3 = atomikosProperties0.maxActives;
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        boolean boolean12 = properties8.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.Object obj19 = properties8.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.service = "tmlog";
        atomikosProperties0.set(properties8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties22);
        atomikosProperties22.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties22.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str36 = atomikosProperties22.getService();
        int int37 = atomikosProperties22.maxActives;
        atomikosProperties22.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties40 = atomikosProperties22.asProperties();
        int int41 = atomikosProperties22.getMaxActives();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str36, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
    }

    @Test
    public void test7794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7794");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str22 = atomikosProperties15.logBaseDir;
        long long23 = atomikosProperties15.maxTimeout;
        atomikosProperties15.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean26 = atomikosProperties15.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test7795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7795");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        boolean boolean17 = properties10.contains((java.lang.Object) properties16);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        boolean boolean25 = properties21.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        boolean boolean36 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties37 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long39 = atomikosProperties38.defaultJtaTimeout;
        boolean boolean40 = atomikosProperties38.enableLogging;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        java.util.Properties properties44 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.forceShutdownOnVmExit;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.lang.String str49 = atomikosProperties45.logBaseName;
        boolean boolean50 = atomikosProperties45.forceShutdownOnVmExit;
        int int51 = atomikosProperties45.maxActives;
        java.lang.String str52 = atomikosProperties45.logBaseName;
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        boolean boolean56 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties57 = atomikosProperties45.asProperties();
        java.lang.Object obj58 = properties21.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        java.lang.Object obj59 = properties3.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) atomikosProperties45);
        java.util.Properties properties60 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setService("");
        boolean boolean64 = atomikosProperties61.isEnableLogging();
        java.util.Properties properties65 = atomikosProperties61.asProperties();
        atomikosProperties61.setDefaultJtaTimeout(300000L);
        java.lang.String str68 = atomikosProperties61.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setService("");
        atomikosProperties69.setSerialJtaTransactions(true);
        atomikosProperties69.setEnableLogging(false);
        atomikosProperties69.logBaseName = "tmlog";
        atomikosProperties69.setMaxActives((int) '#');
        java.lang.Object obj80 = properties16.put((java.lang.Object) atomikosProperties61, (java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean82 = atomikosProperties81.forceShutdownOnVmExit;
        java.lang.String str83 = atomikosProperties81.getLogBaseDir();
        boolean boolean84 = properties16.containsValue((java.lang.Object) atomikosProperties81);
        java.io.InputStream inputStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.load(inputStream85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test7796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7796");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.load(inputStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test7797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7797");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        int int3 = atomikosProperties0.maxActives;
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        boolean boolean12 = properties8.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.Object obj19 = properties8.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.service = "tmlog";
        atomikosProperties0.set(properties8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties22);
        boolean boolean32 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.maxActives = 10;
        atomikosProperties0.enableLogging = true;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test7798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7798");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setEnableLogging(false);
        boolean boolean31 = atomikosProperties24.forceShutdownOnVmExit;
        java.lang.Object obj32 = properties15.remove((java.lang.Object) boolean31);
        java.lang.String str34 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties35 = new java.util.Properties(properties15);
        java.util.Properties properties36 = new java.util.Properties(properties15);
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean39 = atomikosProperties38.forceShutdownOnVmExit;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.lang.String str42 = atomikosProperties38.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties44 = atomikosProperties43.asProperties();
        java.util.Properties properties45 = atomikosProperties43.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setService("");
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        long long52 = atomikosProperties47.getCheckpointInterval();
        boolean boolean53 = atomikosProperties47.threadedTwoPhaseCommit;
        atomikosProperties38.set(properties45, "tmlog", (java.lang.Object) atomikosProperties47);
        java.lang.String str55 = atomikosProperties47.getLogBaseDir();
        atomikosProperties47.logBaseName = "";
        atomikosProperties47.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties47.logBaseName = "";
        atomikosProperties47.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean65 = atomikosProperties64.forceShutdownOnVmExit;
        atomikosProperties64.setSerialJtaTransactions(true);
        java.lang.String str68 = atomikosProperties64.logBaseName;
        boolean boolean69 = atomikosProperties64.forceShutdownOnVmExit;
        java.lang.String str70 = atomikosProperties64.getLogBaseDir();
        atomikosProperties64.setMaxActives((int) (short) 1);
        atomikosProperties64.setMaxTimeout(52L);
        java.lang.String str75 = atomikosProperties64.transactionManagerUniqueName;
        java.lang.Object obj76 = properties37.put((java.lang.Object) false, (java.lang.Object) atomikosProperties64);
        java.lang.String str77 = atomikosProperties64.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test7799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7799");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.defaultJtaTimeout = (short) 0;
        atomikosProperties0.maxTimeout = '4';
        atomikosProperties0.logBaseDir = "hi!";
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        boolean boolean17 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test7800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7800");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        atomikosProperties27.logBaseName = "{}";
        java.util.Properties properties44 = atomikosProperties27.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setEnableLogging(false);
        atomikosProperties45.logBaseName = "tmlog";
        atomikosProperties45.setMaxActives((int) '#');
        atomikosProperties45.setService("hi!");
        java.lang.Object obj58 = properties44.get((java.lang.Object) "hi!");
        java.util.Properties properties59 = new java.util.Properties(properties44);
        java.util.Properties properties60 = new java.util.Properties(properties44);
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.lang.String str62 = properties61.toString();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
    }

    @Test
    public void test7801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7801");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        atomikosProperties0.defaultJtaTimeout = 0L;
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties17.entrySet();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objEntrySet18);
    }

    @Test
    public void test7802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7802");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.defaultJtaTimeout = (short) 0;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties9.asProperties();
        atomikosProperties9.setSerialJtaTransactions(false);
        java.lang.String str16 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.checkpointInterval = (short) 100;
        atomikosProperties9.serialJtaTransactions = false;
        atomikosProperties9.setEnableLogging(false);
        atomikosProperties9.setMaxActives((int) (byte) 100);
        long long25 = atomikosProperties9.getMaxTimeout();
        java.lang.String str26 = atomikosProperties9.getLogBaseName();
        java.util.Properties properties27 = atomikosProperties9.asProperties();
        java.lang.Object obj28 = properties8.remove((java.lang.Object) properties27);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNull(obj28);
    }

    @Test
    public void test7803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7803");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.transactionManagerUniqueName;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str15 = properties14.toString();
        java.lang.String str16 = properties14.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties17.getCheckpointInterval();
        atomikosProperties17.setMaxTimeout(0L);
        long long25 = atomikosProperties17.defaultJtaTimeout;
        long long26 = atomikosProperties17.defaultJtaTimeout;
        boolean boolean27 = atomikosProperties17.threadedTwoPhaseCommit;
        atomikosProperties17.logBaseDir = "{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        long long30 = atomikosProperties17.getCheckpointInterval();
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long33 = atomikosProperties17.checkpointInterval;
        boolean boolean34 = properties14.contains((java.lang.Object) long33);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str16, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 500L + "'", long30 == 500L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test7804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7804");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.transactionManagerUniqueName = "hi!";
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        long long13 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test7805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7805");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.logBaseName;
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setService("");
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        long long16 = atomikosProperties11.getCheckpointInterval();
        atomikosProperties11.maxTimeout = (-1);
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties19.elements();
        java.util.Properties properties28 = new java.util.Properties(properties19);
        boolean boolean29 = properties19.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties34 = atomikosProperties31.asProperties();
        atomikosProperties31.setSerialJtaTransactions(true);
        java.util.Properties properties37 = atomikosProperties31.asProperties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.lang.String str40 = properties37.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties37.elements();
        atomikosProperties0.set(properties19, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, []=1.0}", (java.lang.Object) objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(objEnumeration41);
    }

    @Test
    public void test7806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7806");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long10 = atomikosProperties0.checkpointInterval;
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.service = "";
        int int14 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test7807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7807");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = 1L;
        boolean boolean12 = atomikosProperties8.forceShutdownOnVmExit;
        java.lang.Object obj13 = properties6.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties8);
        atomikosProperties8.defaultJtaTimeout = 500L;
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        java.lang.String str17 = atomikosProperties8.logBaseName;
        java.util.Properties properties18 = atomikosProperties8.asProperties();
        java.io.PrintStream printStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.list(printStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test7808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7808");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setService("");
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        long long20 = atomikosProperties15.getCheckpointInterval();
        atomikosProperties15.maxTimeout = (-1);
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long25 = atomikosProperties24.defaultJtaTimeout;
        boolean boolean26 = atomikosProperties24.enableLogging;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.util.Properties properties29 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties32 = new java.util.Properties(properties23);
        java.lang.String str34 = properties32.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 500L + "'", long20 == 500L);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test7809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7809");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer9, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test7810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7810");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        atomikosProperties6.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.setSerialJtaTransactions(true);
        boolean boolean15 = properties3.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) true);
        java.util.Set<java.lang.String> strSet16 = properties3.stringPropertyNames();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        boolean boolean24 = properties20.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet33 = properties32.keySet();
        boolean boolean34 = properties26.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties26.elements();
        boolean boolean37 = properties20.remove((java.lang.Object) properties26, (java.lang.Object) 50);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties47 = atomikosProperties44.asProperties();
        boolean boolean48 = properties41.contains((java.lang.Object) properties47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties52 = atomikosProperties51.asProperties();
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.keys();
        boolean boolean56 = properties52.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties57 = new java.util.Properties(properties52);
        java.lang.Object obj58 = properties26.replace((java.lang.Object) properties47, (java.lang.Object) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean60 = atomikosProperties59.forceShutdownOnVmExit;
        atomikosProperties59.setSerialJtaTransactions(true);
        java.lang.String str63 = atomikosProperties59.logBaseName;
        boolean boolean64 = atomikosProperties59.forceShutdownOnVmExit;
        int int65 = atomikosProperties59.maxActives;
        java.lang.String str66 = atomikosProperties59.logBaseName;
        atomikosProperties59.setForceShutdownOnVmExit(true);
        java.lang.Object obj69 = properties47.remove((java.lang.Object) atomikosProperties59);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties74 = atomikosProperties73.asProperties();
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Properties properties76 = new java.util.Properties(properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties78 = atomikosProperties77.asProperties();
        java.util.Set<java.lang.String> strSet79 = properties78.stringPropertyNames();
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        int int81 = properties76.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties76.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setService("");
        boolean boolean86 = atomikosProperties83.isEnableLogging();
        java.util.Properties properties87 = atomikosProperties83.asProperties();
        atomikosProperties83.setSerialJtaTransactions(false);
        java.lang.Object obj90 = properties76.remove((java.lang.Object) atomikosProperties83);
        java.lang.Object obj91 = properties47.remove((java.lang.Object) atomikosProperties83);
        atomikosProperties83.logBaseName = "";
        atomikosProperties83.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 9 + "'", int81 == 9);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(properties87);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test7811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7811");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.threadedTwoPhaseCommit = true;
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.logBaseDir = "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test7812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7812");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test7813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7813");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        long long7 = atomikosProperties0.checkpointInterval;
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str9 = atomikosProperties0.logBaseName;
        atomikosProperties0.serialJtaTransactions = true;
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test7814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7814");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test7815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7815");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        boolean boolean17 = properties9.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties9.elements();
        boolean boolean20 = properties3.remove((java.lang.Object) properties9, (java.lang.Object) 50);
        properties3.clear();
        java.util.Set<java.lang.Object> objSet22 = properties3.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties3.elements();
        java.util.Properties properties24 = new java.util.Properties(properties3);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties26.entrySet();
        java.util.Properties properties30 = new java.util.Properties(properties26);
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setService("");
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        long long38 = atomikosProperties33.getCheckpointInterval();
        boolean boolean39 = atomikosProperties33.threadedTwoPhaseCommit;
        atomikosProperties33.transactionManagerUniqueName = "tmlog";
        boolean boolean42 = atomikosProperties33.forceShutdownOnVmExit;
        boolean boolean43 = atomikosProperties33.enableLogging;
        atomikosProperties33.defaultJtaTimeout = 1;
        atomikosProperties33.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties33.forceShutdownOnVmExit = false;
        java.lang.Object obj50 = properties32.remove((java.lang.Object) false);
        java.util.Collection<java.lang.Object> objCollection51 = properties32.values();
        boolean boolean52 = properties3.containsKey((java.lang.Object) properties32);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 500L + "'", long38 == 500L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test7816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7816");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.lang.Object obj8 = properties3.clone();
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection10 = properties3.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.setSerialJtaTransactions(true);
        long long15 = atomikosProperties11.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties11.enableLogging;
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.lang.Object obj25 = properties20.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties26 = new java.util.Properties(properties20);
        int int27 = properties26.size();
        java.lang.Object obj28 = properties3.put((java.lang.Object) atomikosProperties11, (java.lang.Object) properties26);
        java.util.Collection<java.lang.Object> objCollection29 = properties3.values();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(obj8);
// flaky:         org.junit.Assert.assertEquals(obj8.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection29);
    }

    @Test
    public void test7817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7817");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean7 = atomikosProperties6.forceShutdownOnVmExit;
        atomikosProperties6.setSerialJtaTransactions(true);
        java.lang.String str10 = atomikosProperties6.logBaseName;
        boolean boolean11 = atomikosProperties6.forceShutdownOnVmExit;
        int int12 = atomikosProperties6.maxActives;
        java.lang.String str13 = atomikosProperties6.logBaseName;
        atomikosProperties6.transactionManagerUniqueName = "hi!";
        atomikosProperties6.setMaxActives((int) (short) 10);
        java.util.Properties properties18 = atomikosProperties6.asProperties();
        java.util.Properties properties19 = atomikosProperties6.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        properties25.clear();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties31 = atomikosProperties30.asProperties();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties31.keys();
        boolean boolean35 = properties31.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long38 = atomikosProperties37.defaultJtaTimeout;
        boolean boolean39 = atomikosProperties37.enableLogging;
        atomikosProperties37.setSerialJtaTransactions(true);
        java.lang.Object obj42 = properties31.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean43 = properties25.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setService("");
        atomikosProperties44.setSerialJtaTransactions(true);
        java.util.Properties properties49 = atomikosProperties44.asProperties();
        properties49.clear();
        java.lang.Object obj52 = properties25.put((java.lang.Object) properties49, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties25.elements();
        java.util.Set<java.lang.String> strSet54 = properties25.stringPropertyNames();
        java.lang.Object obj56 = properties19.put((java.lang.Object) strSet54, (java.lang.Object) (-1.0d));
        java.util.Set<java.lang.Object> objSet57 = properties19.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setService("");
        boolean boolean61 = atomikosProperties58.isEnableLogging();
        java.util.Properties properties62 = atomikosProperties58.asProperties();
        atomikosProperties58.setSerialJtaTransactions(false);
        java.lang.String str65 = atomikosProperties58.getLogBaseName();
        atomikosProperties58.setTransactionManagerUniqueName("");
        boolean boolean68 = properties19.contains((java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setService("");
        atomikosProperties69.setSerialJtaTransactions(true);
        java.util.Properties properties74 = atomikosProperties69.asProperties();
        java.util.Properties properties75 = atomikosProperties69.asProperties();
        atomikosProperties69.transactionManagerUniqueName = "";
        java.lang.String str78 = atomikosProperties69.getService();
        boolean boolean79 = properties19.containsValue((java.lang.Object) atomikosProperties69);
        atomikosProperties69.setDefaultJtaTimeout((long) (byte) 0);
        boolean boolean82 = properties5.containsKey((java.lang.Object) atomikosProperties69);
        java.util.Properties properties83 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties5.elements();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objEnumeration84);
    }

    @Test
    public void test7818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7818");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setService("");
        atomikosProperties14.logBaseDir = "hi!";
        atomikosProperties14.setMaxTimeout(500L);
        atomikosProperties14.logBaseName = "hi!";
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        boolean boolean25 = properties11.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean27 = atomikosProperties26.forceShutdownOnVmExit;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.lang.String str30 = atomikosProperties26.logBaseName;
        boolean boolean31 = atomikosProperties26.forceShutdownOnVmExit;
        int int32 = atomikosProperties26.maxActives;
        atomikosProperties26.setService("hi!");
        boolean boolean35 = atomikosProperties26.isThreadedTwoPhaseCommit();
        boolean boolean36 = properties11.containsKey((java.lang.Object) boolean35);
        java.util.Properties properties37 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean39 = atomikosProperties38.forceShutdownOnVmExit;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.lang.String str42 = atomikosProperties38.logBaseName;
        boolean boolean43 = atomikosProperties38.forceShutdownOnVmExit;
        int int44 = atomikosProperties38.maxActives;
        java.lang.String str45 = atomikosProperties38.logBaseName;
        atomikosProperties38.setForceShutdownOnVmExit(true);
        java.util.Properties properties48 = atomikosProperties38.asProperties();
        boolean boolean49 = atomikosProperties38.isForceShutdownOnVmExit();
        java.util.Properties properties50 = atomikosProperties38.asProperties();
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setCheckpointInterval((long) 'a');
        atomikosProperties38.transactionManagerUniqueName = "";
        atomikosProperties38.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties59 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean61 = atomikosProperties60.forceShutdownOnVmExit;
        atomikosProperties60.setSerialJtaTransactions(true);
        java.lang.String str64 = atomikosProperties60.logBaseName;
        atomikosProperties60.service = "tmlog";
        long long67 = atomikosProperties60.checkpointInterval;
        boolean boolean68 = atomikosProperties60.isForceShutdownOnVmExit();
        int int69 = atomikosProperties60.getMaxActives();
        java.util.Properties properties70 = atomikosProperties60.asProperties();
        boolean boolean71 = properties59.contains((java.lang.Object) atomikosProperties60);
        java.lang.Object obj72 = properties11.get((java.lang.Object) boolean71);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj72);
    }

    @Test
    public void test7819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7819");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties9.asProperties();
        properties13.clear();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj22 = properties13.put((java.lang.Object) properties18, (java.lang.Object) (byte) 0);
        boolean boolean23 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean28 = properties18.containsKey((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("hi!");
        int int31 = atomikosProperties24.getMaxActives();
        boolean boolean32 = properties3.equals((java.lang.Object) int31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.defaultJtaTimeout = (byte) -1;
        atomikosProperties33.setSerialJtaTransactions(false);
        java.lang.Object obj38 = properties3.get((java.lang.Object) atomikosProperties33);
        long long39 = atomikosProperties33.maxTimeout;
        atomikosProperties33.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str42 = atomikosProperties33.logBaseDir;
        int int43 = atomikosProperties33.getMaxActives();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
    }

    @Test
    public void test7820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7820");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.service;
        atomikosProperties0.setMaxTimeout((-1L));
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        long long17 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxActives(11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
    }

    @Test
    public void test7821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7821");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        long long13 = atomikosProperties0.getMaxTimeout();
        boolean boolean14 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet26 = properties25.keySet();
        boolean boolean27 = properties19.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties25);
        java.util.Set<java.lang.String> strSet28 = properties19.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long30 = atomikosProperties29.defaultJtaTimeout;
        atomikosProperties29.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties29.setForceShutdownOnVmExit(true);
        boolean boolean35 = properties17.remove((java.lang.Object) strSet28, (java.lang.Object) true);
        java.lang.String str38 = properties17.getProperty("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}" + "'", str38, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
    }

    @Test
    public void test7822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7822");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.service;
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties(properties15);
        java.lang.String str20 = properties15.getProperty("hi!");
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        java.util.Set<java.lang.String> strSet30 = properties29.stringPropertyNames();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        properties29.clear();
        java.util.Set<java.lang.Object> objSet33 = properties29.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setService("");
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        long long40 = atomikosProperties35.getCheckpointInterval();
        atomikosProperties35.maxTimeout = (-1);
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        java.lang.Object obj44 = properties29.putIfAbsent((java.lang.Object) atomikosProperties34, (java.lang.Object) properties43);
        atomikosProperties0.set(properties15, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setService("");
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        long long51 = atomikosProperties46.getCheckpointInterval();
        atomikosProperties46.forceShutdownOnVmExit = true;
        atomikosProperties46.setSerialJtaTransactions(true);
        java.util.Properties properties56 = atomikosProperties46.asProperties();
        java.lang.Object obj57 = properties15.remove((java.lang.Object) properties56);
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.storeToXML(outputStream58, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, []=1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 500L + "'", long40 == 500L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 500L + "'", long51 == 500L);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test7823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7823");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = 1L;
        boolean boolean12 = atomikosProperties8.forceShutdownOnVmExit;
        java.lang.Object obj13 = properties6.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties8);
        boolean boolean14 = atomikosProperties8.enableLogging;
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = (short) 0;
        int int18 = atomikosProperties8.getMaxActives();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
    }

    @Test
    public void test7824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7824");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.lang.String str21 = properties20.toString();
        java.lang.Object obj24 = properties20.setProperty("tmlog", "");
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Properties properties26 = new java.util.Properties(properties20);
        java.lang.String str27 = properties20.toString();
        java.io.InputStream inputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.load(inputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{tmlog=}" + "'", str27, "{tmlog=}");
    }

    @Test
    public void test7825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7825");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test7826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7826");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Enumeration<?> wildcardEnumeration6 = properties3.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean8 = atomikosProperties7.forceShutdownOnVmExit;
        atomikosProperties7.setSerialJtaTransactions(true);
        java.lang.String str11 = atomikosProperties7.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        java.util.Properties properties14 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        long long21 = atomikosProperties16.getCheckpointInterval();
        boolean boolean22 = atomikosProperties16.threadedTwoPhaseCommit;
        atomikosProperties7.set(properties14, "tmlog", (java.lang.Object) atomikosProperties16);
        java.lang.String str24 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.logBaseName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setService("");
        atomikosProperties27.setSerialJtaTransactions(true);
        atomikosProperties27.setEnableLogging(false);
        atomikosProperties27.logBaseName = "tmlog";
        atomikosProperties27.setMaxActives((int) '#');
        atomikosProperties27.setService("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setService("");
        atomikosProperties40.setSerialJtaTransactions(true);
        atomikosProperties40.setEnableLogging(false);
        atomikosProperties40.logBaseName = "tmlog";
        atomikosProperties40.maxActives = 1;
        atomikosProperties40.setEnableLogging(true);
        java.lang.String str53 = atomikosProperties40.service;
        java.lang.String str54 = atomikosProperties40.getTransactionManagerUniqueName();
        atomikosProperties40.checkpointInterval = '#';
        atomikosProperties40.setForceShutdownOnVmExit(true);
        boolean boolean59 = properties3.replace((java.lang.Object) atomikosProperties16, (java.lang.Object) atomikosProperties27, (java.lang.Object) atomikosProperties40);
        boolean boolean60 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setEnableLogging(false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test7827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7827");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.enableLogging;
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setService("{}");
        atomikosProperties0.setMaxActives((int) (byte) 100);
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.maxTimeout = 1L;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test7828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7828");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        boolean boolean17 = properties9.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties9.elements();
        boolean boolean20 = properties3.remove((java.lang.Object) properties9, (java.lang.Object) 50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setService("");
        atomikosProperties21.logBaseDir = "hi!";
        atomikosProperties21.setMaxTimeout(500L);
        atomikosProperties21.logBaseName = "hi!";
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties33 = atomikosProperties32.asProperties();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties33.keys();
        boolean boolean37 = properties33.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.lang.Object obj46 = properties41.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection47 = properties41.values();
        boolean boolean48 = properties33.containsKey((java.lang.Object) properties41);
        java.util.Properties properties49 = new java.util.Properties(properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long51 = atomikosProperties50.defaultJtaTimeout;
        boolean boolean52 = atomikosProperties50.enableLogging;
        atomikosProperties50.setSerialJtaTransactions(true);
        java.util.Properties properties55 = atomikosProperties50.asProperties();
        java.util.Properties properties56 = atomikosProperties50.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean58 = atomikosProperties57.forceShutdownOnVmExit;
        atomikosProperties57.setSerialJtaTransactions(true);
        java.lang.String str61 = atomikosProperties57.logBaseName;
        boolean boolean62 = atomikosProperties57.forceShutdownOnVmExit;
        int int63 = atomikosProperties57.maxActives;
        java.lang.String str64 = atomikosProperties57.logBaseName;
        atomikosProperties57.setForceShutdownOnVmExit(true);
        java.util.Properties properties67 = atomikosProperties57.asProperties();
        boolean boolean68 = atomikosProperties57.isForceShutdownOnVmExit();
        java.util.Properties properties69 = atomikosProperties57.asProperties();
        java.lang.Object obj70 = properties33.replace((java.lang.Object) atomikosProperties50, (java.lang.Object) atomikosProperties57);
        java.lang.Object obj71 = properties3.getOrDefault((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties57);
        java.lang.String str74 = properties3.getProperty("", "");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10000L + "'", long51 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 50 + "'", int63 == 50);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test7829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7829");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        boolean boolean17 = properties9.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties9.elements();
        boolean boolean20 = properties3.remove((java.lang.Object) properties9, (java.lang.Object) 50);
        java.util.Collection<java.lang.Object> objCollection21 = properties3.values();
        java.util.Properties properties22 = new java.util.Properties(properties3);
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.storeToXML(outputStream23, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objCollection21);
    }

    @Test
    public void test7830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7830");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.enableLogging = false;
        boolean boolean8 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long10 = atomikosProperties9.defaultJtaTimeout;
        boolean boolean11 = atomikosProperties9.enableLogging;
        atomikosProperties9.setSerialJtaTransactions(true);
        java.util.Properties properties14 = atomikosProperties9.asProperties();
        atomikosProperties9.service = "tmlog";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean20 = atomikosProperties19.forceShutdownOnVmExit;
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.String str23 = atomikosProperties19.logBaseName;
        atomikosProperties19.service = "tmlog";
        long long26 = atomikosProperties19.checkpointInterval;
        boolean boolean27 = atomikosProperties19.isForceShutdownOnVmExit();
        java.lang.String str28 = atomikosProperties19.logBaseName;
        java.lang.String str29 = atomikosProperties19.getLogBaseDir();
        atomikosProperties0.set(properties17, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}", (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str33 = atomikosProperties19.logBaseName;
        atomikosProperties19.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties19.maxActives = (short) 0;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
    }

    @Test
    public void test7831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7831");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.service;
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("tmlog");
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        boolean boolean21 = properties20.isEmpty();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test7832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7832");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties4.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setSerialJtaTransactions(true);
        atomikosProperties7.setEnableLogging(false);
        long long14 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.setForceShutdownOnVmExit(false);
        long long17 = atomikosProperties7.checkpointInterval;
        java.lang.Object obj18 = properties4.remove((java.lang.Object) atomikosProperties7);
        java.util.Properties properties19 = new java.util.Properties(properties4);
        java.lang.String str20 = properties4.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
    }

    @Test
    public void test7833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7833");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        long long13 = atomikosProperties0.getMaxTimeout();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((-1L));
        int int17 = atomikosProperties0.getMaxActives();
        java.lang.String str18 = atomikosProperties0.logBaseDir;
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=0, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.lang.String str21 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test7834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7834");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.defaultJtaTimeout = 1;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        java.lang.String str17 = atomikosProperties0.logBaseDir;
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objCollection19);
    }

    @Test
    public void test7835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7835");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        int int3 = atomikosProperties0.maxActives;
        java.lang.String str4 = atomikosProperties0.getService();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        boolean boolean12 = properties8.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        atomikosProperties14.setSerialJtaTransactions(true);
        java.lang.Object obj19 = properties8.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setEnableLogging(false);
        atomikosProperties22.service = "tmlog";
        atomikosProperties0.set(properties8, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties22);
        atomikosProperties22.service = "tmlog";
        atomikosProperties22.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties22.maxTimeout = 10;
        atomikosProperties22.maxActives = 100;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test7836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7836");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection13 = properties7.values();
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj17 = properties14.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties19 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.lang.String str24 = atomikosProperties20.logBaseName;
        atomikosProperties20.service = "tmlog";
        boolean boolean27 = properties19.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties28 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean30 = atomikosProperties29.forceShutdownOnVmExit;
        atomikosProperties29.setSerialJtaTransactions(true);
        java.lang.String str33 = atomikosProperties29.logBaseName;
        atomikosProperties29.service = "tmlog";
        java.util.Properties properties36 = atomikosProperties29.asProperties();
        long long37 = atomikosProperties29.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        atomikosProperties38.setSerialJtaTransactions(true);
        atomikosProperties38.setEnableLogging(false);
        java.lang.Object obj45 = properties19.put((java.lang.Object) atomikosProperties29, (java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setService("");
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        long long52 = atomikosProperties47.getCheckpointInterval();
        atomikosProperties47.forceShutdownOnVmExit = true;
        atomikosProperties47.setSerialJtaTransactions(true);
        java.util.Properties properties57 = atomikosProperties47.asProperties();
        atomikosProperties0.set(properties19, "", (java.lang.Object) atomikosProperties47);
        java.util.Set<java.lang.String> strSet59 = properties19.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setService("");
        int int63 = atomikosProperties60.getMaxActives();
        java.lang.String str64 = atomikosProperties60.logBaseName;
        long long65 = atomikosProperties60.getDefaultJtaTimeout();
        boolean boolean66 = atomikosProperties60.isForceShutdownOnVmExit();
        java.lang.Object obj67 = properties19.get((java.lang.Object) atomikosProperties60);
        java.util.Properties properties68 = new java.util.Properties(properties19);
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties68.entrySet();
        java.io.OutputStream outputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties68.storeToXML(outputStream71, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertEquals("'" + obj17 + "' != '" + (-1.0d) + "'", obj17, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 50 + "'", int63 == 50);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10000L + "'", long65 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(objEntrySet70);
    }

    @Test
    public void test7837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7837");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection28 = properties25.values();
        java.util.Properties properties29 = new java.util.Properties(properties25);
        properties25.clear();
        java.util.Properties properties31 = new java.util.Properties(properties25);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean35 = atomikosProperties34.forceShutdownOnVmExit;
        atomikosProperties34.setSerialJtaTransactions(true);
        java.lang.String str38 = atomikosProperties34.logBaseName;
        atomikosProperties34.service = "tmlog";
        atomikosProperties34.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties34.isForceShutdownOnVmExit();
        atomikosProperties34.threadedTwoPhaseCommit = true;
        java.lang.String str46 = atomikosProperties34.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setService("");
        int int50 = atomikosProperties47.getMaxActives();
        boolean boolean51 = atomikosProperties47.serialJtaTransactions;
        boolean boolean52 = atomikosProperties47.isForceShutdownOnVmExit();
        atomikosProperties47.logBaseName = "{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        boolean boolean55 = atomikosProperties47.threadedTwoPhaseCommit;
        boolean boolean56 = properties19.replace((java.lang.Object) properties33, (java.lang.Object) atomikosProperties34, (java.lang.Object) atomikosProperties47);
        java.util.Collection<java.lang.Object> objCollection57 = properties33.values();
        java.io.OutputStream outputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.storeToXML(outputStream58, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tmlog" + "'", str46, "tmlog");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objCollection57);
    }

    @Test
    public void test7838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7838");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.forceShutdownOnVmExit;
        atomikosProperties9.setSerialJtaTransactions(true);
        java.lang.String str13 = atomikosProperties9.logBaseName;
        atomikosProperties9.service = "tmlog";
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setMaxTimeout((long) '4');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties23 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.lang.String str28 = atomikosProperties24.logBaseName;
        atomikosProperties24.service = "tmlog";
        java.util.Properties properties31 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean33 = atomikosProperties32.forceShutdownOnVmExit;
        java.lang.String str34 = atomikosProperties32.getLogBaseDir();
        java.lang.Object obj35 = properties23.getOrDefault((java.lang.Object) atomikosProperties24, (java.lang.Object) str34);
        long long36 = atomikosProperties24.getDefaultJtaTimeout();
        atomikosProperties24.setLogBaseName("{}");
        int int39 = atomikosProperties24.maxActives;
        long long40 = atomikosProperties24.maxTimeout;
        boolean boolean41 = properties8.remove((java.lang.Object) atomikosProperties9, (java.lang.Object) long40);
        java.lang.Object obj44 = properties8.setProperty("{}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.forceShutdownOnVmExit;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.lang.String str49 = atomikosProperties45.logBaseName;
        boolean boolean50 = atomikosProperties45.forceShutdownOnVmExit;
        int int51 = atomikosProperties45.maxActives;
        java.lang.String str52 = atomikosProperties45.logBaseName;
        atomikosProperties45.transactionManagerUniqueName = "hi!";
        atomikosProperties45.setMaxActives((int) (short) 10);
        java.lang.String str57 = atomikosProperties45.getLogBaseName();
        atomikosProperties45.serialJtaTransactions = true;
        boolean boolean60 = properties8.containsValue((java.lang.Object) atomikosProperties45);
        java.util.Properties properties61 = new java.util.Properties(properties8);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test7839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7839");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection10 = properties7.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties16 = new java.util.Properties(properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties20 = atomikosProperties17.asProperties();
        boolean boolean21 = properties14.contains((java.lang.Object) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.elements();
        java.lang.Object obj25 = properties20.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "hi!");
        java.util.Set<java.lang.String> strSet26 = properties20.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setService("");
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        long long32 = atomikosProperties27.getCheckpointInterval();
        atomikosProperties27.forceShutdownOnVmExit = true;
        java.lang.String str35 = atomikosProperties27.getLogBaseName();
        java.lang.Object obj36 = properties7.put((java.lang.Object) strSet26, (java.lang.Object) atomikosProperties27);
        atomikosProperties27.setMaxTimeout((long) ' ');
        long long39 = atomikosProperties27.getMaxTimeout();
        atomikosProperties27.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 500L + "'", long32 == 500L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 32L + "'", long39 == 32L);
    }

    @Test
    public void test7840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7840");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setCheckpointInterval((long) 11);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test7841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7841");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.setLogBaseDir("");
        boolean boolean10 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.maxActives = (byte) 100;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test7842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7842");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet1 = properties0.keySet();
        java.lang.String str3 = properties0.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        boolean boolean13 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.logBaseDir = "tmlog";
        boolean boolean16 = atomikosProperties4.threadedTwoPhaseCommit;
        atomikosProperties4.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean19 = atomikosProperties4.threadedTwoPhaseCommit;
        org.junit.Assert.assertNotNull(objSet1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test7843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7843");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.service;
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.checkpointInterval = '#';
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean23 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test7844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7844");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.lang.Object obj8 = properties3.clone();
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.lang.String str11 = properties3.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setSerialJtaTransactions(true);
        java.lang.String str16 = atomikosProperties12.logBaseName;
        atomikosProperties12.service = "tmlog";
        java.util.Properties properties19 = atomikosProperties12.asProperties();
        java.util.Enumeration<?> wildcardEnumeration20 = properties19.propertyNames();
        boolean boolean21 = properties3.contains((java.lang.Object) wildcardEnumeration20);
        java.lang.Object obj22 = properties3.clone();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(obj8);
// flaky:         org.junit.Assert.assertEquals(obj8.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj22);
// flaky:         org.junit.Assert.assertEquals(obj22.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7845");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean10 = atomikosProperties0.enableLogging;
        int int11 = atomikosProperties0.maxActives;
        long long12 = atomikosProperties0.maxTimeout;
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test7846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7846");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean10 = atomikosProperties0.enableLogging;
        atomikosProperties0.defaultJtaTimeout = 1;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.transactionManagerUniqueName = "";
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet18 = properties17.stringPropertyNames();
        java.lang.Object obj19 = properties17.clone();
        java.util.Set<java.lang.String> strSet20 = properties17.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean22 = atomikosProperties21.forceShutdownOnVmExit;
        atomikosProperties21.serialJtaTransactions = false;
        atomikosProperties21.setMaxTimeout((long) (byte) 10);
        atomikosProperties21.setMaxTimeout((long) (short) -1);
        int int29 = atomikosProperties21.getMaxActives();
        boolean boolean30 = atomikosProperties21.threadedTwoPhaseCommit;
        java.lang.Object obj31 = properties17.remove((java.lang.Object) atomikosProperties21);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals(obj19.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test7847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7847");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        int int12 = properties10.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setService("");
        atomikosProperties13.setSerialJtaTransactions(true);
        atomikosProperties13.setEnableLogging(false);
        atomikosProperties13.logBaseName = "tmlog";
        atomikosProperties13.maxActives = 1;
        atomikosProperties13.setEnableLogging(true);
        java.lang.String str26 = atomikosProperties13.service;
        java.lang.String str27 = atomikosProperties13.getTransactionManagerUniqueName();
        atomikosProperties13.setService("tmlog");
        java.lang.String str30 = atomikosProperties13.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setService("");
        atomikosProperties31.setSerialJtaTransactions(true);
        java.util.Properties properties36 = atomikosProperties31.asProperties();
        properties36.clear();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        boolean boolean45 = properties41.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties46 = new java.util.Properties(properties41);
        java.lang.Object obj47 = properties46.clone();
        boolean boolean48 = properties36.equals((java.lang.Object) properties46);
        boolean boolean49 = properties36.isEmpty();
        java.lang.Object obj50 = properties10.putIfAbsent((java.lang.Object) str30, (java.lang.Object) properties36);
        java.lang.String str52 = properties10.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setService("");
        boolean boolean56 = atomikosProperties53.isEnableLogging();
        java.util.Properties properties57 = atomikosProperties53.asProperties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setService("");
        boolean boolean62 = atomikosProperties59.isEnableLogging();
        java.util.Properties properties63 = atomikosProperties59.asProperties();
        atomikosProperties59.setSerialJtaTransactions(false);
        java.lang.String str66 = atomikosProperties59.getLogBaseName();
        atomikosProperties59.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties72 = atomikosProperties69.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean74 = atomikosProperties73.forceShutdownOnVmExit;
        atomikosProperties73.setSerialJtaTransactions(true);
        java.lang.String str77 = atomikosProperties73.logBaseName;
        atomikosProperties73.service = "tmlog";
        java.util.Properties properties80 = atomikosProperties73.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean82 = atomikosProperties81.forceShutdownOnVmExit;
        java.lang.String str83 = atomikosProperties81.getLogBaseDir();
        java.lang.Object obj84 = properties72.getOrDefault((java.lang.Object) atomikosProperties73, (java.lang.Object) str83);
        java.lang.Object obj85 = properties57.put((java.lang.Object) atomikosProperties59, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties86 = new java.util.Properties(properties57);
        java.lang.String str88 = properties86.getProperty("{}");
        java.util.Properties properties89 = new java.util.Properties(properties86);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties89);
        java.lang.String str93 = properties10.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test7848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7848");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        boolean boolean19 = atomikosProperties16.isEnableLogging();
        java.util.Properties properties20 = atomikosProperties16.asProperties();
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.enableLogging = false;
        java.lang.String str25 = atomikosProperties16.service;
        atomikosProperties16.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.forceShutdownOnVmExit;
        atomikosProperties28.setSerialJtaTransactions(true);
        java.lang.String str32 = atomikosProperties28.logBaseName;
        boolean boolean33 = atomikosProperties28.forceShutdownOnVmExit;
        int int34 = atomikosProperties28.maxActives;
        java.lang.String str35 = atomikosProperties28.logBaseName;
        atomikosProperties28.setForceShutdownOnVmExit(true);
        java.util.Properties properties38 = atomikosProperties28.asProperties();
        boolean boolean39 = atomikosProperties28.isForceShutdownOnVmExit();
        java.util.Properties properties40 = atomikosProperties28.asProperties();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setCheckpointInterval((long) 'a');
        java.lang.Object obj45 = properties3.put((java.lang.Object) atomikosProperties16, (java.lang.Object) 'a');
        java.lang.String str46 = atomikosProperties16.getTransactionManagerUniqueName();
        boolean boolean47 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setForceShutdownOnVmExit(false);
        java.lang.String str50 = atomikosProperties16.service;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test7849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7849");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        boolean boolean17 = properties13.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        boolean boolean21 = atomikosProperties19.enableLogging;
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.Object obj24 = properties13.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Properties properties25 = new java.util.Properties(properties13);
        properties13.clear();
        java.util.Properties properties27 = new java.util.Properties(properties13);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties32 = atomikosProperties31.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties32.keys();
        boolean boolean35 = properties32.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties32.elements();
        atomikosProperties0.set(properties13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties32);
        java.lang.String str38 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setMaxActives(50);
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.service = "{}";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test7850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7850");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Properties properties30 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties34 = atomikosProperties31.asProperties();
        boolean boolean35 = properties28.contains((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties39 = atomikosProperties38.asProperties();
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties39.keys();
        boolean boolean43 = properties39.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties44 = new java.util.Properties(properties39);
        java.lang.Object obj45 = properties13.replace((java.lang.Object) properties34, (java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = atomikosProperties46.forceShutdownOnVmExit;
        atomikosProperties46.setSerialJtaTransactions(true);
        java.lang.String str50 = atomikosProperties46.logBaseName;
        boolean boolean51 = atomikosProperties46.forceShutdownOnVmExit;
        int int52 = atomikosProperties46.maxActives;
        java.lang.String str53 = atomikosProperties46.logBaseName;
        atomikosProperties46.setForceShutdownOnVmExit(true);
        java.lang.Object obj56 = properties34.remove((java.lang.Object) atomikosProperties46);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties60 = atomikosProperties59.asProperties();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Collection<java.lang.Object> objCollection62 = properties58.values();
        java.lang.Object obj63 = properties3.replace((java.lang.Object) atomikosProperties46, (java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties65 = atomikosProperties64.asProperties();
        long long66 = atomikosProperties64.getDefaultJtaTimeout();
        atomikosProperties64.logBaseName = "tmlog";
        boolean boolean69 = atomikosProperties64.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setLogBaseDir("");
        atomikosProperties70.setMaxTimeout(100L);
        long long75 = atomikosProperties70.getDefaultJtaTimeout();
        atomikosProperties70.setSerialJtaTransactions(false);
        java.lang.Object obj78 = properties58.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosProperties70);
        atomikosProperties64.serialJtaTransactions = false;
        atomikosProperties64.setMaxTimeout((-1L));
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test7851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7851");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        java.util.Properties properties34 = atomikosProperties0.asProperties();
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties34);
    }

    @Test
    public void test7852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7852");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties24 = new java.util.Properties(properties15);
        java.lang.String str25 = properties24.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean27 = atomikosProperties26.forceShutdownOnVmExit;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.lang.String str30 = atomikosProperties26.logBaseName;
        boolean boolean31 = atomikosProperties26.forceShutdownOnVmExit;
        int int32 = atomikosProperties26.maxActives;
        java.lang.String str33 = atomikosProperties26.logBaseName;
        atomikosProperties26.setForceShutdownOnVmExit(true);
        java.util.Properties properties36 = atomikosProperties26.asProperties();
        boolean boolean37 = atomikosProperties26.isForceShutdownOnVmExit();
        long long38 = atomikosProperties26.getDefaultJtaTimeout();
        java.util.Properties properties39 = atomikosProperties26.asProperties();
        java.util.Properties properties40 = atomikosProperties26.asProperties();
        atomikosProperties26.maxTimeout = 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setService("");
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        long long48 = atomikosProperties43.getCheckpointInterval();
        boolean boolean49 = atomikosProperties43.threadedTwoPhaseCommit;
        atomikosProperties43.transactionManagerUniqueName = "tmlog";
        boolean boolean52 = atomikosProperties43.forceShutdownOnVmExit;
        boolean boolean53 = atomikosProperties43.enableLogging;
        atomikosProperties43.defaultJtaTimeout = 1;
        atomikosProperties43.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties43.defaultJtaTimeout = ' ';
        long long60 = atomikosProperties43.getDefaultJtaTimeout();
        java.lang.String str61 = atomikosProperties43.getLogBaseDir();
        java.lang.Object obj62 = properties24.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties43);
        boolean boolean63 = atomikosProperties26.isEnableLogging();
        boolean boolean64 = atomikosProperties26.enableLogging;
        atomikosProperties26.serialJtaTransactions = true;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 500L + "'", long48 == 500L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 32L + "'", long60 == 32L);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str61, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test7853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7853");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test7854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7854");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.service;
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.lang.Object obj20 = properties17.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Set<java.lang.Object> objSet21 = properties17.keySet();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objSet21);
    }

    @Test
    public void test7855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7855");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.checkpointInterval = 9L;
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 9L + "'", long7 == 9L);
    }

    @Test
    public void test7856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7856");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.defaultJtaTimeout = ' ';
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.forceShutdownOnVmExit;
        int int9 = atomikosProperties0.maxActives;
        int int10 = atomikosProperties0.maxActives;
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test7857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7857");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        boolean boolean4 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.maxActives = 0;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test7858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7858");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = 1L;
        boolean boolean12 = atomikosProperties8.forceShutdownOnVmExit;
        java.lang.Object obj13 = properties6.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        int int17 = atomikosProperties14.maxActives;
        java.lang.String str18 = atomikosProperties14.getService();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties22 = atomikosProperties21.asProperties();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        boolean boolean26 = properties22.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long29 = atomikosProperties28.defaultJtaTimeout;
        boolean boolean30 = atomikosProperties28.enableLogging;
        atomikosProperties28.setSerialJtaTransactions(true);
        java.lang.Object obj33 = properties22.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties22.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setService("");
        atomikosProperties36.setSerialJtaTransactions(true);
        atomikosProperties36.setEnableLogging(false);
        atomikosProperties36.service = "tmlog";
        atomikosProperties14.set(properties22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties36);
        boolean boolean46 = properties6.contains((java.lang.Object) atomikosProperties36);
        java.util.Set<java.lang.String> strSet47 = properties6.stringPropertyNames();
        java.lang.String str48 = properties6.toString();
        properties6.clear();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSet47);
    }

    @Test
    public void test7859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7859");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = new java.util.Properties(properties3);
        java.lang.String str8 = properties3.getProperty("hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = atomikosProperties12.enableLogging;
        atomikosProperties12.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        long long21 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.maxTimeout = (-1);
        java.util.Properties properties24 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long26 = atomikosProperties25.defaultJtaTimeout;
        boolean boolean27 = atomikosProperties25.enableLogging;
        atomikosProperties25.setSerialJtaTransactions(true);
        java.util.Properties properties30 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties24.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        boolean boolean38 = atomikosProperties33.forceShutdownOnVmExit;
        int int39 = atomikosProperties33.maxActives;
        java.lang.String str40 = atomikosProperties33.logBaseName;
        atomikosProperties33.setForceShutdownOnVmExit(true);
        java.util.Properties properties43 = atomikosProperties33.asProperties();
        boolean boolean44 = atomikosProperties33.isForceShutdownOnVmExit();
        java.util.Properties properties45 = atomikosProperties33.asProperties();
        boolean boolean46 = properties10.replace((java.lang.Object) (byte) 1, (java.lang.Object) properties24, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties47 = new java.util.Properties(properties10);
        boolean boolean48 = properties3.equals((java.lang.Object) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties3.elements();
        java.lang.String str51 = properties3.getProperty("");
        java.util.Properties properties52 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties52.elements();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertNotNull(objEnumeration54);
    }

    @Test
    public void test7860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7860");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = atomikosProperties12.forceShutdownOnVmExit;
        java.lang.String str14 = atomikosProperties12.getLogBaseDir();
        java.lang.Object obj15 = properties3.getOrDefault((java.lang.Object) atomikosProperties4, (java.lang.Object) str14);
        long long16 = atomikosProperties4.getDefaultJtaTimeout();
        atomikosProperties4.setLogBaseName("{}");
        int int19 = atomikosProperties4.maxActives;
        atomikosProperties4.threadedTwoPhaseCommit = true;
        atomikosProperties4.enableLogging = false;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
    }

    @Test
    public void test7861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7861");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setService("");
        atomikosProperties25.setSerialJtaTransactions(true);
        atomikosProperties25.setEnableLogging(false);
        java.lang.String str32 = atomikosProperties25.logBaseName;
        java.lang.Object obj33 = properties18.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties25);
        boolean boolean34 = properties3.contains((java.lang.Object) properties18);
        java.lang.String str35 = properties18.toString();
        java.util.Set<java.lang.Object> objSet36 = properties18.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties18.keys();
        java.util.Properties properties38 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        long long41 = atomikosProperties39.getDefaultJtaTimeout();
        java.util.Properties properties42 = atomikosProperties39.asProperties();
        java.util.Properties properties43 = atomikosProperties39.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setService("");
        atomikosProperties44.setSerialJtaTransactions(true);
        atomikosProperties44.setEnableLogging(false);
        java.lang.String str51 = atomikosProperties44.logBaseName;
        boolean boolean52 = atomikosProperties44.isSerialJtaTransactions();
        boolean boolean53 = atomikosProperties44.forceShutdownOnVmExit;
        atomikosProperties44.defaultJtaTimeout = 1;
        java.util.Properties properties56 = atomikosProperties44.asProperties();
        atomikosProperties44.setEnableLogging(false);
        atomikosProperties44.logBaseName = "tmlog";
        java.lang.Object obj61 = properties18.putIfAbsent((java.lang.Object) atomikosProperties39, (java.lang.Object) atomikosProperties44);
        int int62 = atomikosProperties44.maxActives;
        atomikosProperties44.enableLogging = true;
        atomikosProperties44.logBaseDir = "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        long long67 = atomikosProperties44.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str35, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 50 + "'", int62 == 50);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 1L + "'", long67 == 1L);
    }

    @Test
    public void test7862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7862");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str22 = atomikosProperties15.getService();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties33 = atomikosProperties32.asProperties();
        java.util.Properties properties34 = atomikosProperties32.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setService("");
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        long long41 = atomikosProperties36.getCheckpointInterval();
        boolean boolean42 = atomikosProperties36.threadedTwoPhaseCommit;
        atomikosProperties27.set(properties34, "tmlog", (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties47 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean49 = atomikosProperties48.forceShutdownOnVmExit;
        atomikosProperties48.setSerialJtaTransactions(true);
        java.lang.String str52 = atomikosProperties48.logBaseName;
        atomikosProperties48.service = "tmlog";
        java.util.Properties properties55 = atomikosProperties48.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean57 = atomikosProperties56.forceShutdownOnVmExit;
        java.lang.String str58 = atomikosProperties56.getLogBaseDir();
        java.lang.Object obj59 = properties47.getOrDefault((java.lang.Object) atomikosProperties48, (java.lang.Object) str58);
        long long60 = atomikosProperties48.getDefaultJtaTimeout();
        atomikosProperties48.setLogBaseName("{}");
        int int63 = atomikosProperties48.maxActives;
        java.lang.Object obj64 = properties26.putIfAbsent((java.lang.Object) properties34, (java.lang.Object) atomikosProperties48);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties34.elements();
        boolean boolean66 = properties34.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean69 = atomikosProperties68.forceShutdownOnVmExit;
        atomikosProperties68.setSerialJtaTransactions(true);
        java.lang.String str72 = atomikosProperties68.logBaseName;
        boolean boolean73 = atomikosProperties68.forceShutdownOnVmExit;
        int int74 = atomikosProperties68.maxActives;
        java.lang.String str75 = atomikosProperties68.logBaseName;
        atomikosProperties68.setForceShutdownOnVmExit(true);
        java.util.Properties properties78 = atomikosProperties68.asProperties();
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        java.lang.String str81 = atomikosProperties68.getLogBaseName();
        boolean boolean82 = atomikosProperties68.isSerialJtaTransactions();
        atomikosProperties15.set(properties34, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties68);
        java.util.Properties properties84 = atomikosProperties15.asProperties();
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties88 = atomikosProperties87.asProperties();
        properties86.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties88);
        java.util.Properties properties90 = new java.util.Properties(properties88);
        java.util.Enumeration<?> wildcardEnumeration91 = properties88.propertyNames();
        java.util.Properties properties92 = new java.util.Properties(properties88);
        java.util.Enumeration<?> wildcardEnumeration93 = properties88.propertyNames();
        boolean boolean94 = properties84.equals((java.lang.Object) properties88);
        java.util.Properties properties95 = new java.util.Properties(properties88);
        java.util.Set<java.lang.String> strSet96 = properties88.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 500L + "'", long41 == 500L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 50 + "'", int63 == 50);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertNotNull(wildcardEnumeration91);
        org.junit.Assert.assertNotNull(wildcardEnumeration93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strSet96);
    }

    @Test
    public void test7863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7863");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.transactionManagerUniqueName = "hi!";
        boolean boolean10 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.checkpointInterval = 300000L;
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties22 = atomikosProperties21.asProperties();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        boolean boolean26 = properties22.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties30 = atomikosProperties29.asProperties();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        boolean boolean36 = properties28.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties28.elements();
        boolean boolean39 = properties22.remove((java.lang.Object) properties28, (java.lang.Object) 50);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties44 = atomikosProperties43.asProperties();
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Collection<java.lang.Object> objCollection47 = properties44.values();
        atomikosProperties15.set(properties28, "{}", (java.lang.Object) objCollection47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties50 = atomikosProperties49.asProperties();
        java.util.Properties properties51 = atomikosProperties49.asProperties();
        java.lang.Object obj52 = properties28.remove((java.lang.Object) atomikosProperties49);
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setService("");
        atomikosProperties54.setSerialJtaTransactions(true);
        atomikosProperties54.setEnableLogging(false);
        java.lang.String str61 = atomikosProperties54.logBaseName;
        int int62 = atomikosProperties54.maxActives;
        boolean boolean63 = atomikosProperties54.threadedTwoPhaseCommit;
        boolean boolean64 = atomikosProperties54.isForceShutdownOnVmExit();
        java.lang.Object obj65 = properties28.get((java.lang.Object) atomikosProperties54);
        java.util.Collection<java.lang.Object> objCollection66 = properties28.values();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Properties properties69 = new java.util.Properties(properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setService("");
        atomikosProperties70.setSerialJtaTransactions(true);
        atomikosProperties70.setEnableLogging(false);
        java.lang.String str77 = atomikosProperties70.logBaseName;
        boolean boolean78 = atomikosProperties70.isSerialJtaTransactions();
        boolean boolean79 = properties69.containsValue((java.lang.Object) boolean78);
        boolean boolean80 = properties69.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setService("");
        atomikosProperties81.setSerialJtaTransactions(true);
        java.util.Properties properties86 = atomikosProperties81.asProperties();
        java.util.Properties properties87 = atomikosProperties81.asProperties();
        long long88 = atomikosProperties81.defaultJtaTimeout;
        java.lang.Object obj89 = properties28.replace((java.lang.Object) boolean80, (java.lang.Object) long88);
        boolean boolean90 = properties14.equals((java.lang.Object) properties28);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 50 + "'", int62 == 50);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertNotNull(properties87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10000L + "'", long88 == 10000L);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test7864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7864");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        boolean boolean13 = atomikosProperties0.enableLogging;
        java.lang.String str14 = atomikosProperties0.logBaseName;
        long long15 = atomikosProperties0.maxTimeout;
        atomikosProperties0.service = "tmlog";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test7865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7865");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        atomikosProperties27.logBaseName = "{}";
        java.util.Properties properties44 = atomikosProperties27.asProperties();
        atomikosProperties27.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean47 = atomikosProperties27.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test7866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7866");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        boolean boolean17 = properties10.contains((java.lang.Object) properties16);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        boolean boolean25 = properties21.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        boolean boolean36 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties37 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long39 = atomikosProperties38.defaultJtaTimeout;
        boolean boolean40 = atomikosProperties38.enableLogging;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        java.util.Properties properties44 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.forceShutdownOnVmExit;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.lang.String str49 = atomikosProperties45.logBaseName;
        boolean boolean50 = atomikosProperties45.forceShutdownOnVmExit;
        int int51 = atomikosProperties45.maxActives;
        java.lang.String str52 = atomikosProperties45.logBaseName;
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        boolean boolean56 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties57 = atomikosProperties45.asProperties();
        java.lang.Object obj58 = properties21.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        java.lang.Object obj59 = properties3.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) atomikosProperties45);
        atomikosProperties45.setMaxTimeout((long) 100);
        atomikosProperties45.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
    }

    @Test
    public void test7867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7867");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        boolean boolean10 = properties6.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        boolean boolean21 = properties6.containsKey((java.lang.Object) properties14);
        java.lang.Object obj22 = properties1.get((java.lang.Object) properties6);
        java.lang.Object obj23 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.defaultJtaTimeout = (byte) -1;
        int int27 = atomikosProperties24.maxActives;
        boolean boolean28 = atomikosProperties24.isForceShutdownOnVmExit();
        java.lang.String str29 = atomikosProperties24.getTransactionManagerUniqueName();
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setMaxActives(0);
        atomikosProperties24.serialJtaTransactions = false;
        boolean boolean36 = atomikosProperties24.serialJtaTransactions;
        java.lang.Class<?> wildcardClass37 = atomikosProperties24.getClass();
        java.lang.Object obj38 = properties1.get((java.lang.Object) wildcardClass37);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
// flaky:         org.junit.Assert.assertEquals(obj23.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test7868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7868");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test7869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7869");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.defaultJtaTimeout = (short) 0;
        atomikosProperties0.maxTimeout = '4';
        atomikosProperties0.logBaseDir = "hi!";
        long long16 = atomikosProperties0.defaultJtaTimeout;
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.defaultJtaTimeout = 52L;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test7870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7870");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setService("");
        atomikosProperties3.setSerialJtaTransactions(true);
        java.util.Properties properties8 = atomikosProperties3.asProperties();
        java.util.Properties properties9 = atomikosProperties3.asProperties();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        java.lang.Object obj18 = properties13.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection19 = properties13.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj23 = properties20.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj39 = properties36.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        atomikosProperties3.set(properties13, "", (java.lang.Object) properties29);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        boolean boolean50 = properties46.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties54 = atomikosProperties53.asProperties();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties54.keys();
        java.lang.Object obj59 = properties54.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection60 = properties54.values();
        boolean boolean61 = properties46.containsKey((java.lang.Object) properties54);
        java.util.Properties properties62 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long64 = atomikosProperties63.defaultJtaTimeout;
        boolean boolean65 = atomikosProperties63.enableLogging;
        atomikosProperties63.setSerialJtaTransactions(true);
        java.util.Properties properties68 = atomikosProperties63.asProperties();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean71 = atomikosProperties70.forceShutdownOnVmExit;
        atomikosProperties70.setSerialJtaTransactions(true);
        java.lang.String str74 = atomikosProperties70.logBaseName;
        boolean boolean75 = atomikosProperties70.forceShutdownOnVmExit;
        int int76 = atomikosProperties70.maxActives;
        java.lang.String str77 = atomikosProperties70.logBaseName;
        atomikosProperties70.setForceShutdownOnVmExit(true);
        java.util.Properties properties80 = atomikosProperties70.asProperties();
        boolean boolean81 = atomikosProperties70.isForceShutdownOnVmExit();
        java.util.Properties properties82 = atomikosProperties70.asProperties();
        java.lang.Object obj83 = properties46.replace((java.lang.Object) atomikosProperties63, (java.lang.Object) atomikosProperties70);
        boolean boolean84 = atomikosProperties63.forceShutdownOnVmExit;
        atomikosProperties0.set(properties13, "", (java.lang.Object) atomikosProperties63);
        atomikosProperties0.setCheckpointInterval((long) 1);
        java.lang.String str88 = atomikosProperties0.getService();
        int int89 = atomikosProperties0.maxActives;
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1.0d) + "'", obj23, (-1.0d));
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10000L + "'", long64 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 50 + "'", int76 == 50);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 50 + "'", int89 == 50);
    }

    @Test
    public void test7871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7871");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.transactionManagerUniqueName = "";
        boolean boolean11 = atomikosProperties0.enableLogging;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        boolean boolean13 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.maxTimeout = 0;
        java.lang.String str16 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test7872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7872");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        boolean boolean17 = properties13.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        boolean boolean21 = atomikosProperties19.enableLogging;
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.Object obj24 = properties13.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Properties properties25 = new java.util.Properties(properties13);
        properties13.clear();
        java.util.Properties properties27 = new java.util.Properties(properties13);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties32 = atomikosProperties31.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties32.keys();
        boolean boolean35 = properties32.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties32.elements();
        atomikosProperties0.set(properties13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties32);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=0, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
    }

    @Test
    public void test7873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7873");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties24 = new java.util.Properties(properties15);
        java.lang.String str25 = properties24.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean27 = atomikosProperties26.forceShutdownOnVmExit;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.lang.String str30 = atomikosProperties26.logBaseName;
        boolean boolean31 = atomikosProperties26.forceShutdownOnVmExit;
        int int32 = atomikosProperties26.maxActives;
        java.lang.String str33 = atomikosProperties26.logBaseName;
        atomikosProperties26.setForceShutdownOnVmExit(true);
        java.util.Properties properties36 = atomikosProperties26.asProperties();
        boolean boolean37 = atomikosProperties26.isForceShutdownOnVmExit();
        long long38 = atomikosProperties26.getDefaultJtaTimeout();
        java.util.Properties properties39 = atomikosProperties26.asProperties();
        java.util.Properties properties40 = atomikosProperties26.asProperties();
        atomikosProperties26.maxTimeout = 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setService("");
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        long long48 = atomikosProperties43.getCheckpointInterval();
        boolean boolean49 = atomikosProperties43.threadedTwoPhaseCommit;
        atomikosProperties43.transactionManagerUniqueName = "tmlog";
        boolean boolean52 = atomikosProperties43.forceShutdownOnVmExit;
        boolean boolean53 = atomikosProperties43.enableLogging;
        atomikosProperties43.defaultJtaTimeout = 1;
        atomikosProperties43.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties43.defaultJtaTimeout = ' ';
        long long60 = atomikosProperties43.getDefaultJtaTimeout();
        java.lang.String str61 = atomikosProperties43.getLogBaseDir();
        java.lang.Object obj62 = properties24.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties43);
        atomikosProperties26.setDefaultJtaTimeout((long) (byte) 10);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 500L + "'", long48 == 500L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 32L + "'", long60 == 32L);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str61, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(obj62);
    }

    @Test
    public void test7874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7874");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setCheckpointInterval(12L);
        long long12 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test7875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7875");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        int int8 = atomikosProperties5.getMaxActives();
        atomikosProperties5.checkpointInterval = (byte) 0;
        atomikosProperties5.setLogBaseName("{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.enableLogging;
        atomikosProperties16.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        long long25 = atomikosProperties20.getCheckpointInterval();
        atomikosProperties20.maxTimeout = (-1);
        java.util.Properties properties28 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long30 = atomikosProperties29.defaultJtaTimeout;
        boolean boolean31 = atomikosProperties29.enableLogging;
        atomikosProperties29.setSerialJtaTransactions(true);
        java.util.Properties properties34 = atomikosProperties29.asProperties();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties28.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean38 = atomikosProperties37.forceShutdownOnVmExit;
        atomikosProperties37.setSerialJtaTransactions(true);
        java.lang.String str41 = atomikosProperties37.logBaseName;
        boolean boolean42 = atomikosProperties37.forceShutdownOnVmExit;
        int int43 = atomikosProperties37.maxActives;
        java.lang.String str44 = atomikosProperties37.logBaseName;
        atomikosProperties37.setForceShutdownOnVmExit(true);
        java.util.Properties properties47 = atomikosProperties37.asProperties();
        boolean boolean48 = atomikosProperties37.isForceShutdownOnVmExit();
        java.util.Properties properties49 = atomikosProperties37.asProperties();
        boolean boolean50 = properties14.replace((java.lang.Object) (byte) 1, (java.lang.Object) properties28, (java.lang.Object) atomikosProperties37);
        boolean boolean51 = properties28.isEmpty();
        java.lang.Object obj53 = null;
        atomikosProperties5.set(properties28, "tmlog", obj53);
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Properties properties56 = new java.util.Properties(properties4);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test7876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7876");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        java.lang.String str34 = atomikosProperties0.logBaseDir;
        atomikosProperties0.maxActives = (-1);
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean39 = atomikosProperties0.isEnableLogging();
        boolean boolean40 = atomikosProperties0.enableLogging;
        long long41 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
    }

    @Test
    public void test7877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7877");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties20 = new java.util.Properties(properties14);
        boolean boolean21 = properties1.contains((java.lang.Object) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties1);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.lang.Object obj24 = properties22.clone();
        java.util.Collection<java.lang.Object> objCollection25 = properties22.values();
        java.util.Properties properties26 = new java.util.Properties(properties22);
        java.lang.String str27 = properties26.toString();
        java.util.Set<java.lang.String> strSet28 = properties26.stringPropertyNames();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test7878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7878");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.forceShutdownOnVmExit;
        long long14 = atomikosProperties0.maxTimeout;
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test7879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7879");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        boolean boolean16 = properties8.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties14);
        java.util.Collection<java.lang.Object> objCollection17 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setService("");
        boolean boolean21 = atomikosProperties18.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties18.asProperties();
        properties22.clear();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.lang.Object obj31 = properties22.put((java.lang.Object) properties27, (java.lang.Object) (byte) 0);
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) objCollection17, obj31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        atomikosProperties33.service = "tmlog";
        atomikosProperties33.setSerialJtaTransactions(false);
        java.util.Properties properties42 = atomikosProperties33.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        atomikosProperties44.checkpointInterval = 1L;
        java.lang.String str48 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.transactionManagerUniqueName = "tmlog";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setService("");
        atomikosProperties51.setSerialJtaTransactions(true);
        atomikosProperties51.setEnableLogging(false);
        java.lang.String str58 = atomikosProperties51.logBaseName;
        int int59 = atomikosProperties51.maxActives;
        boolean boolean60 = atomikosProperties51.threadedTwoPhaseCommit;
        java.lang.Object obj61 = properties42.getOrDefault((java.lang.Object) atomikosProperties44, (java.lang.Object) atomikosProperties51);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties42.keys();
        java.util.Set<java.lang.String> strSet63 = properties42.stringPropertyNames();
        boolean boolean64 = properties42.isEmpty();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test7880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7880");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet1 = properties0.keySet();
        java.lang.String str3 = properties0.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean5 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties4.logBaseName;
        atomikosProperties4.service = "tmlog";
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        boolean boolean12 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        boolean boolean13 = atomikosProperties4.forceShutdownOnVmExit;
        atomikosProperties4.maxActives = (byte) -1;
        java.util.Properties properties16 = atomikosProperties4.asProperties();
        java.util.Enumeration<?> wildcardEnumeration17 = properties16.propertyNames();
        org.junit.Assert.assertNotNull(objSet1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(wildcardEnumeration17);
    }

    @Test
    public void test7881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7881");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Object obj10 = properties9.clone();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7882");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long6 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj21 = properties18.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setService("");
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setService("");
        atomikosProperties33.setSerialJtaTransactions(true);
        atomikosProperties33.setEnableLogging(false);
        java.lang.String str40 = atomikosProperties33.logBaseName;
        java.lang.Object obj41 = properties26.replace((java.lang.Object) atomikosProperties28, (java.lang.Object) atomikosProperties33);
        boolean boolean42 = properties11.contains((java.lang.Object) properties26);
        java.util.Properties properties43 = new java.util.Properties(properties11);
        java.util.Set<java.lang.String> strSet44 = properties11.stringPropertyNames();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.io.Reader reader46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(reader46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertEquals("'" + obj21 + "' != '" + (-1.0d) + "'", obj21, (-1.0d));
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strSet44);
    }

    @Test
    public void test7883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7883");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        boolean boolean42 = atomikosProperties27.enableLogging;
        atomikosProperties27.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties27.forceShutdownOnVmExit = true;
        atomikosProperties27.maxActives = (byte) 1;
        java.util.Properties properties49 = atomikosProperties27.asProperties();
        atomikosProperties27.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(properties49);
    }

    @Test
    public void test7884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7884");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long14 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str15 = atomikosProperties0.service;
        atomikosProperties0.checkpointInterval = 10;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.logBaseDir = "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        java.lang.String str22 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7885");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setService("");
        atomikosProperties3.setSerialJtaTransactions(true);
        java.util.Properties properties8 = atomikosProperties3.asProperties();
        java.util.Properties properties9 = atomikosProperties3.asProperties();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        java.lang.Object obj18 = properties13.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection19 = properties13.values();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj23 = properties20.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj39 = properties36.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        atomikosProperties3.set(properties13, "", (java.lang.Object) properties29);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties46.keys();
        boolean boolean50 = properties46.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties54 = atomikosProperties53.asProperties();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties54.keys();
        java.lang.Object obj59 = properties54.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection60 = properties54.values();
        boolean boolean61 = properties46.containsKey((java.lang.Object) properties54);
        java.util.Properties properties62 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long64 = atomikosProperties63.defaultJtaTimeout;
        boolean boolean65 = atomikosProperties63.enableLogging;
        atomikosProperties63.setSerialJtaTransactions(true);
        java.util.Properties properties68 = atomikosProperties63.asProperties();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean71 = atomikosProperties70.forceShutdownOnVmExit;
        atomikosProperties70.setSerialJtaTransactions(true);
        java.lang.String str74 = atomikosProperties70.logBaseName;
        boolean boolean75 = atomikosProperties70.forceShutdownOnVmExit;
        int int76 = atomikosProperties70.maxActives;
        java.lang.String str77 = atomikosProperties70.logBaseName;
        atomikosProperties70.setForceShutdownOnVmExit(true);
        java.util.Properties properties80 = atomikosProperties70.asProperties();
        boolean boolean81 = atomikosProperties70.isForceShutdownOnVmExit();
        java.util.Properties properties82 = atomikosProperties70.asProperties();
        java.lang.Object obj83 = properties46.replace((java.lang.Object) atomikosProperties63, (java.lang.Object) atomikosProperties70);
        boolean boolean84 = atomikosProperties63.forceShutdownOnVmExit;
        atomikosProperties0.set(properties13, "", (java.lang.Object) atomikosProperties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties87 = atomikosProperties86.asProperties();
        long long88 = atomikosProperties86.getDefaultJtaTimeout();
        long long89 = atomikosProperties86.getDefaultJtaTimeout();
        boolean boolean90 = atomikosProperties86.serialJtaTransactions;
        boolean boolean91 = atomikosProperties86.isSerialJtaTransactions();
        java.lang.String str92 = atomikosProperties86.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties93 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties94 = atomikosProperties93.asProperties();
        java.lang.Object obj95 = properties13.replace((java.lang.Object) atomikosProperties86, (java.lang.Object) atomikosProperties93);
        long long96 = atomikosProperties93.getCheckpointInterval();
        atomikosProperties93.setSerialJtaTransactions(true);
        java.lang.String str99 = atomikosProperties93.logBaseDir;
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + (-1.0d) + "'", obj23, (-1.0d));
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertEquals("'" + obj39 + "' != '" + (-1.0d) + "'", obj39, (-1.0d));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10000L + "'", long64 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 50 + "'", int76 == 50);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(properties87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10000L + "'", long88 == 10000L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 10000L + "'", long89 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(properties94);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 500L + "'", long96 == 500L);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test7886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7886");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str41 = atomikosProperties27.getLogBaseDir();
        long long42 = atomikosProperties27.getMaxTimeout();
        atomikosProperties27.setTransactionManagerUniqueName("tmlog");
        atomikosProperties27.setThreadedTwoPhaseCommit(false);
        atomikosProperties27.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.lang.String str49 = atomikosProperties27.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str49, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7887");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        properties7.clear();
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        properties7.clear();
        java.util.Properties properties13 = new java.util.Properties(properties7);
        java.lang.String str14 = properties7.toString();
        properties7.clear();
        java.util.Set<java.lang.Object> objSet16 = properties7.keySet();
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream17, "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNotNull(objSet16);
    }

    @Test
    public void test7888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7888");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        atomikosProperties0.setMaxTimeout((long) ' ');
        atomikosProperties0.setMaxActives(0);
        atomikosProperties0.threadedTwoPhaseCommit = false;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test7889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7889");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.util.Collection<java.lang.Object> objCollection12 = properties9.values();
        java.util.Properties properties13 = new java.util.Properties(properties9);
        properties9.clear();
        java.util.Properties properties15 = new java.util.Properties(properties9);
        java.util.Properties properties16 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties17.getCheckpointInterval();
        atomikosProperties17.maxTimeout = (-1);
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long27 = atomikosProperties26.defaultJtaTimeout;
        boolean boolean28 = atomikosProperties26.enableLogging;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.util.Properties properties31 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties25.elements();
        java.util.Properties properties34 = new java.util.Properties(properties25);
        java.util.Properties properties35 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.keys();
        boolean boolean37 = properties5.remove((java.lang.Object) properties16, (java.lang.Object) properties35);
        java.io.InputStream inputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.load(inputStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test7890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7890");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test7891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7891");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.logBaseName = "";
        int int9 = atomikosProperties0.getMaxActives();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str13 = atomikosProperties0.transactionManagerUniqueName;
        int int14 = atomikosProperties0.getMaxActives();
        java.lang.String str15 = atomikosProperties0.service;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test7892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7892");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties9.asProperties();
        properties13.clear();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj22 = properties13.put((java.lang.Object) properties18, (java.lang.Object) (byte) 0);
        boolean boolean23 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean28 = properties18.containsKey((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("hi!");
        int int31 = atomikosProperties24.getMaxActives();
        boolean boolean32 = properties3.equals((java.lang.Object) int31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties34.entrySet();
        boolean boolean37 = properties3.contains((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean39 = atomikosProperties38.forceShutdownOnVmExit;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.lang.String str42 = atomikosProperties38.logBaseName;
        boolean boolean43 = atomikosProperties38.forceShutdownOnVmExit;
        int int44 = atomikosProperties38.maxActives;
        java.lang.String str45 = atomikosProperties38.logBaseName;
        atomikosProperties38.transactionManagerUniqueName = "hi!";
        atomikosProperties38.setMaxActives((int) (short) 10);
        java.util.Properties properties50 = atomikosProperties38.asProperties();
        java.util.Properties properties51 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setService("");
        atomikosProperties52.setSerialJtaTransactions(true);
        java.util.Properties properties57 = atomikosProperties52.asProperties();
        properties57.clear();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties63 = atomikosProperties62.asProperties();
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties63.keys();
        boolean boolean67 = properties63.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long70 = atomikosProperties69.defaultJtaTimeout;
        boolean boolean71 = atomikosProperties69.enableLogging;
        atomikosProperties69.setSerialJtaTransactions(true);
        java.lang.Object obj74 = properties63.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean75 = properties57.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setService("");
        atomikosProperties76.setSerialJtaTransactions(true);
        java.util.Properties properties81 = atomikosProperties76.asProperties();
        properties81.clear();
        java.lang.Object obj84 = properties57.put((java.lang.Object) properties81, (java.lang.Object) (short) 1);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties57.elements();
        java.util.Set<java.lang.String> strSet86 = properties57.stringPropertyNames();
        java.lang.Object obj88 = properties51.put((java.lang.Object) strSet86, (java.lang.Object) (-1.0d));
        java.util.Set<java.lang.String> strSet89 = properties51.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties51.keys();
        java.util.Set<java.lang.Object> objSet91 = properties51.keySet();
        java.lang.Object obj92 = properties51.clone();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertNotNull(objSet91);
        org.junit.Assert.assertNotNull(obj92);
// flaky:         org.junit.Assert.assertEquals(obj92.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}");
    }

    @Test
    public void test7893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7893");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.service;
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.checkpointInterval = '#';
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean19 = atomikosProperties0.serialJtaTransactions;
        boolean boolean20 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.serialJtaTransactions = false;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test7894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7894");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str10 = atomikosProperties0.logBaseName;
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties12.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties17.getCheckpointInterval();
        atomikosProperties17.setMaxTimeout(0L);
        atomikosProperties17.forceShutdownOnVmExit = false;
        atomikosProperties17.setEnableLogging(false);
        java.lang.String str29 = atomikosProperties17.logBaseDir;
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties34 = atomikosProperties17.asProperties();
        boolean boolean35 = atomikosProperties17.forceShutdownOnVmExit;
        boolean boolean36 = properties12.contains((java.lang.Object) boolean35);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.util.Collection<java.lang.Object> objCollection44 = properties41.values();
        java.util.Properties properties45 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties41.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setService("");
        boolean boolean50 = atomikosProperties47.isEnableLogging();
        java.util.Properties properties51 = atomikosProperties47.asProperties();
        properties51.clear();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties56 = atomikosProperties55.asProperties();
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties56.keys();
        java.lang.Object obj60 = properties51.put((java.lang.Object) properties56, (java.lang.Object) (byte) 0);
        boolean boolean61 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean63 = atomikosProperties62.forceShutdownOnVmExit;
        atomikosProperties62.setSerialJtaTransactions(true);
        boolean boolean66 = properties56.containsKey((java.lang.Object) atomikosProperties62);
        atomikosProperties62.setLogBaseName("hi!");
        int int69 = atomikosProperties62.getMaxActives();
        boolean boolean70 = properties41.equals((java.lang.Object) int69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.defaultJtaTimeout = (byte) -1;
        atomikosProperties71.setSerialJtaTransactions(false);
        java.lang.Object obj76 = properties41.get((java.lang.Object) atomikosProperties71);
        long long77 = atomikosProperties71.maxTimeout;
        atomikosProperties71.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str80 = atomikosProperties71.logBaseDir;
        atomikosProperties0.set(properties12, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=0, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) str80);
        atomikosProperties0.checkpointInterval = 0L;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 300000L + "'", long77 == 300000L);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test7895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7895");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj4 = properties3.clone();
        java.util.Set<java.lang.String> strSet5 = properties3.stringPropertyNames();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "{}");
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test7896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7896");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        java.lang.String str17 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str20 = atomikosProperties9.getTransactionManagerUniqueName();
        java.lang.String str21 = atomikosProperties9.transactionManagerUniqueName;
        java.util.Properties properties22 = atomikosProperties9.asProperties();
        java.lang.String str23 = atomikosProperties9.logBaseDir;
        atomikosProperties9.enableLogging = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test7897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7897");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Properties properties24 = new java.util.Properties(properties22);
        java.util.Set<java.lang.String> strSet25 = properties22.stringPropertyNames();
        boolean boolean26 = properties19.containsValue((java.lang.Object) strSet25);
        int int27 = properties19.size();
        java.lang.String str28 = properties19.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.logBaseDir;
        atomikosProperties29.maxTimeout = (byte) 100;
        atomikosProperties29.setCheckpointInterval(10000L);
        atomikosProperties29.setForceShutdownOnVmExit(true);
        boolean boolean37 = properties19.contains((java.lang.Object) atomikosProperties29);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test7898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7898");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str6 = atomikosProperties0.service;
        atomikosProperties0.setCheckpointInterval((long) 50);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test7899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7899");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.service = "{}";
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test7900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7900");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.logBaseName;
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        long long17 = atomikosProperties0.defaultJtaTimeout;
        int int18 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
    }

    @Test
    public void test7901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7901");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setMaxTimeout(100L);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        boolean boolean15 = properties11.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties19 = atomikosProperties18.asProperties();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.lang.Object obj24 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        boolean boolean26 = properties11.containsKey((java.lang.Object) properties19);
        java.util.Properties properties27 = new java.util.Properties(properties11);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties31 = atomikosProperties30.asProperties();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties31.keys();
        java.lang.Object obj36 = properties31.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj41 = properties38.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setService("");
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setService("");
        atomikosProperties53.setSerialJtaTransactions(true);
        atomikosProperties53.setEnableLogging(false);
        java.lang.String str60 = atomikosProperties53.logBaseName;
        java.lang.Object obj61 = properties46.replace((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = properties31.contains((java.lang.Object) properties46);
        java.lang.String str63 = properties46.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setLogBaseDir("");
        atomikosProperties64.setMaxTimeout(100L);
        long long69 = atomikosProperties64.getDefaultJtaTimeout();
        java.lang.Object obj70 = properties11.putIfAbsent((java.lang.Object) properties46, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean73 = atomikosProperties72.forceShutdownOnVmExit;
        atomikosProperties72.setSerialJtaTransactions(true);
        java.lang.String str76 = atomikosProperties72.logBaseName;
        boolean boolean77 = atomikosProperties72.forceShutdownOnVmExit;
        int int78 = atomikosProperties72.maxActives;
        java.lang.String str79 = atomikosProperties72.logBaseName;
        atomikosProperties72.setForceShutdownOnVmExit(true);
        java.util.Properties properties82 = atomikosProperties72.asProperties();
        boolean boolean83 = atomikosProperties72.isForceShutdownOnVmExit();
        atomikosProperties0.set(properties46, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties72);
        java.io.Writer writer85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties46.store(writer85, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (-1.0d) + "'", obj41, (-1.0d));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str63, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10000L + "'", long69 == 10000L);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test7902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7902");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.logBaseDir = "hi!";
        atomikosProperties0.setMaxTimeout(500L);
        atomikosProperties0.maxTimeout = (-1L);
        atomikosProperties0.serialJtaTransactions = true;
        boolean boolean11 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.lang.String str16 = atomikosProperties0.transactionManagerUniqueName;
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 52);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test7903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7903");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.maxTimeout = (byte) 100;
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int12 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test7904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7904");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        atomikosProperties0.setService("hi!");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        long long12 = atomikosProperties0.maxTimeout;
        atomikosProperties0.defaultJtaTimeout = 50;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test7905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7905");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        atomikosProperties0.setMaxActives((int) (short) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        boolean boolean17 = properties13.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        boolean boolean21 = atomikosProperties19.enableLogging;
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.Object obj24 = properties13.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties29 = atomikosProperties26.asProperties();
        atomikosProperties26.defaultJtaTimeout = 0L;
        atomikosProperties0.set(properties13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties26);
        boolean boolean33 = properties13.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties13);
        java.io.PrintStream printStream35 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.list(printStream35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test7906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7906");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = 1L;
        boolean boolean12 = atomikosProperties8.forceShutdownOnVmExit;
        java.lang.Object obj13 = properties6.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long15 = atomikosProperties14.defaultJtaTimeout;
        boolean boolean16 = atomikosProperties14.enableLogging;
        int int17 = atomikosProperties14.maxActives;
        java.lang.String str18 = atomikosProperties14.getService();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties22 = atomikosProperties21.asProperties();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties22.keys();
        boolean boolean26 = properties22.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long29 = atomikosProperties28.defaultJtaTimeout;
        boolean boolean30 = atomikosProperties28.enableLogging;
        atomikosProperties28.setSerialJtaTransactions(true);
        java.lang.Object obj33 = properties22.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties22.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setService("");
        atomikosProperties36.setSerialJtaTransactions(true);
        atomikosProperties36.setEnableLogging(false);
        atomikosProperties36.service = "tmlog";
        atomikosProperties14.set(properties22, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties36);
        boolean boolean46 = properties6.contains((java.lang.Object) atomikosProperties36);
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean49 = atomikosProperties48.forceShutdownOnVmExit;
        atomikosProperties48.setSerialJtaTransactions(true);
        java.lang.String str52 = atomikosProperties48.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties54 = atomikosProperties53.asProperties();
        java.util.Properties properties55 = atomikosProperties53.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setService("");
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        long long62 = atomikosProperties57.getCheckpointInterval();
        boolean boolean63 = atomikosProperties57.threadedTwoPhaseCommit;
        atomikosProperties48.set(properties55, "tmlog", (java.lang.Object) atomikosProperties57);
        long long65 = atomikosProperties48.getDefaultJtaTimeout();
        boolean boolean66 = atomikosProperties48.serialJtaTransactions;
        boolean boolean67 = properties47.containsValue((java.lang.Object) boolean66);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 500L + "'", long62 == 500L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10000L + "'", long65 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test7907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7907");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str17 = atomikosProperties10.logBaseName;
        java.lang.Object obj18 = properties3.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties10);
        java.lang.String str19 = atomikosProperties10.logBaseDir;
        boolean boolean20 = atomikosProperties10.isEnableLogging();
        boolean boolean21 = atomikosProperties10.isSerialJtaTransactions();
        atomikosProperties10.setMaxActives((int) (short) 10);
        java.lang.String str24 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setLogBaseName("{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties10.maxTimeout = (short) 10;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test7908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7908");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.lang.Object obj8 = properties3.clone();
        java.util.Properties properties9 = new java.util.Properties(properties3);
        java.lang.String str11 = properties3.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean13 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setSerialJtaTransactions(true);
        java.lang.String str16 = atomikosProperties12.logBaseName;
        atomikosProperties12.service = "tmlog";
        java.util.Properties properties19 = atomikosProperties12.asProperties();
        java.util.Enumeration<?> wildcardEnumeration20 = properties19.propertyNames();
        boolean boolean21 = properties3.contains((java.lang.Object) wildcardEnumeration20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setService("");
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        long long27 = atomikosProperties22.getCheckpointInterval();
        atomikosProperties22.forceShutdownOnVmExit = true;
        atomikosProperties22.setSerialJtaTransactions(true);
        java.util.Properties properties32 = atomikosProperties22.asProperties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        int int34 = properties32.size();
        java.util.Properties properties35 = new java.util.Properties(properties32);
        boolean boolean36 = properties3.containsValue((java.lang.Object) properties32);
        java.io.OutputStream outputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.store(outputStream37, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(obj8);
// flaky:         org.junit.Assert.assertEquals(obj8.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 500L + "'", long27 == 500L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test7909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7909");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        java.util.Properties properties9 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        boolean boolean13 = atomikosProperties10.isEnableLogging();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        java.lang.Object obj15 = properties3.getOrDefault((java.lang.Object) properties9, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties16 = new java.util.Properties(properties9);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet25 = properties24.keySet();
        boolean boolean26 = properties18.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        java.util.Properties properties29 = atomikosProperties27.asProperties();
        long long30 = atomikosProperties27.defaultJtaTimeout;
        boolean boolean31 = properties24.contains((java.lang.Object) long30);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Properties properties38 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        java.util.Properties properties41 = atomikosProperties39.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setService("");
        boolean boolean45 = atomikosProperties42.isEnableLogging();
        java.util.Properties properties46 = atomikosProperties42.asProperties();
        java.lang.Object obj47 = properties35.getOrDefault((java.lang.Object) properties41, (java.lang.Object) atomikosProperties42);
        java.lang.String str48 = atomikosProperties42.logBaseName;
        atomikosProperties42.setLogBaseDir("");
        long long51 = atomikosProperties42.checkpointInterval;
        java.lang.Object obj52 = properties9.getOrDefault((java.lang.Object) long30, (java.lang.Object) long51);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties56 = atomikosProperties55.asProperties();
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties56.keys();
        java.lang.Object obj61 = properties56.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection62 = properties56.values();
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj66 = properties63.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        java.util.Properties properties68 = new java.util.Properties(properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean70 = atomikosProperties69.forceShutdownOnVmExit;
        atomikosProperties69.setSerialJtaTransactions(true);
        java.lang.String str73 = atomikosProperties69.logBaseName;
        atomikosProperties69.service = "tmlog";
        boolean boolean76 = properties68.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties77 = new java.util.Properties(properties68);
        java.util.Properties properties78 = new java.util.Properties(properties68);
        int int79 = properties68.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long81 = atomikosProperties80.defaultJtaTimeout;
        boolean boolean82 = atomikosProperties80.enableLogging;
        atomikosProperties80.setSerialJtaTransactions(true);
        java.util.Properties properties85 = atomikosProperties80.asProperties();
        java.util.Properties properties86 = atomikosProperties80.asProperties();
        atomikosProperties80.threadedTwoPhaseCommit = true;
        long long89 = atomikosProperties80.getCheckpointInterval();
        int int90 = atomikosProperties80.getMaxActives();
        boolean boolean91 = properties68.equals((java.lang.Object) atomikosProperties80);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 500L + "'", long51 == 500L);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + 500L + "'", obj52, 500L);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertEquals("'" + obj66 + "' != '" + (-1.0d) + "'", obj66, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10000L + "'", long81 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 500L + "'", long89 == 500L);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test7910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7910");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.keys();
        java.lang.Object obj15 = properties10.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj20 = properties17.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.keys();
        java.lang.Object obj31 = properties26.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection32 = properties26.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj36 = properties33.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        atomikosProperties0.set(properties10, "", (java.lang.Object) properties26);
        atomikosProperties0.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean41 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1.0d) + "'", obj20, (-1.0d));
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertEquals("'" + obj36 + "' != '" + (-1.0d) + "'", obj36, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test7911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7911");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        boolean boolean9 = atomikosProperties6.isEnableLogging();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        atomikosProperties6.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties19 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean21 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.lang.String str24 = atomikosProperties20.logBaseName;
        atomikosProperties20.service = "tmlog";
        java.util.Properties properties27 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean29 = atomikosProperties28.forceShutdownOnVmExit;
        java.lang.String str30 = atomikosProperties28.getLogBaseDir();
        java.lang.Object obj31 = properties19.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) str30);
        java.lang.Object obj32 = properties4.put((java.lang.Object) atomikosProperties6, (java.lang.Object) atomikosProperties20);
        java.util.Properties properties33 = atomikosProperties20.asProperties();
        atomikosProperties20.logBaseDir = "{}";
        atomikosProperties20.setDefaultJtaTimeout((long) 9);
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        int int40 = atomikosProperties20.getMaxActives();
        atomikosProperties20.setDefaultJtaTimeout((long) ' ');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
    }

    @Test
    public void test7912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7912");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setEnableLogging(false);
        boolean boolean31 = atomikosProperties24.forceShutdownOnVmExit;
        java.lang.Object obj32 = properties15.remove((java.lang.Object) boolean31);
        java.lang.String str34 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties35 = new java.util.Properties(properties15);
        java.util.Properties properties36 = new java.util.Properties(properties15);
        java.util.Properties properties37 = new java.util.Properties(properties15);
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test7913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7913");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setService("");
        boolean boolean6 = atomikosProperties0.enableLogging;
        long long7 = atomikosProperties0.getMaxTimeout();
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean13 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test7914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7914");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        java.util.Properties properties36 = atomikosProperties34.asProperties();
        java.lang.Object obj37 = properties13.remove((java.lang.Object) atomikosProperties34);
        properties13.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setService("");
        boolean boolean42 = atomikosProperties39.isEnableLogging();
        java.util.Properties properties43 = atomikosProperties39.asProperties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        boolean boolean48 = atomikosProperties45.isEnableLogging();
        java.util.Properties properties49 = atomikosProperties45.asProperties();
        atomikosProperties45.setSerialJtaTransactions(false);
        java.lang.String str52 = atomikosProperties45.getLogBaseName();
        atomikosProperties45.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties58 = atomikosProperties55.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean60 = atomikosProperties59.forceShutdownOnVmExit;
        atomikosProperties59.setSerialJtaTransactions(true);
        java.lang.String str63 = atomikosProperties59.logBaseName;
        atomikosProperties59.service = "tmlog";
        java.util.Properties properties66 = atomikosProperties59.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean68 = atomikosProperties67.forceShutdownOnVmExit;
        java.lang.String str69 = atomikosProperties67.getLogBaseDir();
        java.lang.Object obj70 = properties58.getOrDefault((java.lang.Object) atomikosProperties59, (java.lang.Object) str69);
        java.lang.Object obj71 = properties43.put((java.lang.Object) atomikosProperties45, (java.lang.Object) atomikosProperties59);
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties75 = atomikosProperties74.asProperties();
        properties73.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        java.util.Properties properties77 = new java.util.Properties(properties75);
        java.util.Collection<java.lang.Object> objCollection78 = properties75.values();
        java.util.Properties properties79 = new java.util.Properties(properties75);
        properties75.clear();
        java.util.Properties properties81 = new java.util.Properties(properties75);
        java.lang.Object obj82 = properties13.putIfAbsent((java.lang.Object) atomikosProperties45, (java.lang.Object) properties75);
        java.util.Properties properties83 = atomikosProperties45.asProperties();
        long long84 = atomikosProperties45.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNotNull(objCollection78);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 500L + "'", long84 == 500L);
    }

    @Test
    public void test7915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7915");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.maxTimeout = (-1);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration9 = properties8.propertyNames();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
    }

    @Test
    public void test7916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7916");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        boolean boolean16 = properties10.containsKey((java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties10.elements();
        int int18 = properties10.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean20 = atomikosProperties19.forceShutdownOnVmExit;
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.String str23 = atomikosProperties19.logBaseName;
        boolean boolean24 = atomikosProperties19.forceShutdownOnVmExit;
        atomikosProperties19.logBaseName = "tmlog";
        atomikosProperties19.enableLogging = true;
        long long29 = atomikosProperties19.getDefaultJtaTimeout();
        boolean boolean30 = atomikosProperties19.enableLogging;
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean35 = atomikosProperties19.isForceShutdownOnVmExit();
        boolean boolean36 = properties10.contains((java.lang.Object) atomikosProperties19);
        java.util.Properties properties37 = atomikosProperties19.asProperties();
        atomikosProperties19.transactionManagerUniqueName = "{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!}";
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties37);
    }

    @Test
    public void test7917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7917");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str17 = atomikosProperties10.logBaseName;
        java.lang.Object obj18 = properties3.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties10);
        atomikosProperties5.enableLogging = true;
        atomikosProperties5.setThreadedTwoPhaseCommit(false);
        atomikosProperties5.maxActives = (short) -1;
        java.util.Properties properties25 = atomikosProperties5.asProperties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.io.Writer writer27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.store(writer27, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(properties25);
    }

    @Test
    public void test7918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7918");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties19 = atomikosProperties18.asProperties();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties19.elements();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties28 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties32 = atomikosProperties29.asProperties();
        boolean boolean33 = properties26.contains((java.lang.Object) properties32);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties37 = atomikosProperties36.asProperties();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties37.keys();
        boolean boolean41 = properties37.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        java.lang.Object obj50 = properties45.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection51 = properties45.values();
        boolean boolean52 = properties37.containsKey((java.lang.Object) properties45);
        java.util.Properties properties53 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long55 = atomikosProperties54.defaultJtaTimeout;
        boolean boolean56 = atomikosProperties54.enableLogging;
        atomikosProperties54.setSerialJtaTransactions(true);
        java.util.Properties properties59 = atomikosProperties54.asProperties();
        java.util.Properties properties60 = atomikosProperties54.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean62 = atomikosProperties61.forceShutdownOnVmExit;
        atomikosProperties61.setSerialJtaTransactions(true);
        java.lang.String str65 = atomikosProperties61.logBaseName;
        boolean boolean66 = atomikosProperties61.forceShutdownOnVmExit;
        int int67 = atomikosProperties61.maxActives;
        java.lang.String str68 = atomikosProperties61.logBaseName;
        atomikosProperties61.setForceShutdownOnVmExit(true);
        java.util.Properties properties71 = atomikosProperties61.asProperties();
        boolean boolean72 = atomikosProperties61.isForceShutdownOnVmExit();
        java.util.Properties properties73 = atomikosProperties61.asProperties();
        java.lang.Object obj74 = properties37.replace((java.lang.Object) atomikosProperties54, (java.lang.Object) atomikosProperties61);
        java.lang.Object obj75 = properties19.putIfAbsent((java.lang.Object) properties32, (java.lang.Object) atomikosProperties61);
        java.util.Collection<java.lang.Object> objCollection76 = properties32.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = properties32.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean79 = atomikosProperties78.enableLogging;
        atomikosProperties78.setMaxActives((int) (byte) 1);
        java.lang.Object obj82 = properties15.replace((java.lang.Object) properties32, (java.lang.Object) atomikosProperties78);
        java.lang.Object obj83 = properties32.clone();
        int int84 = properties32.size();
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties32.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet86 = properties32.entrySet();
        java.util.Set<java.lang.String> strSet87 = properties32.stringPropertyNames();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10000L + "'", long55 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertNotNull(objEntrySet77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(obj83);
// flaky:         org.junit.Assert.assertEquals(obj83.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 9 + "'", int84 == 9);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNotNull(objEntrySet86);
        org.junit.Assert.assertNotNull(strSet87);
    }

    @Test
    public void test7919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7919");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties0.maxTimeout = 9L;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, ={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test7920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7920");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = 1L;
        boolean boolean12 = atomikosProperties8.forceShutdownOnVmExit;
        java.lang.Object obj13 = properties6.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties8);
        boolean boolean14 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.forceShutdownOnVmExit = false;
        atomikosProperties8.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}";
        atomikosProperties8.maxActives = (short) 100;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test7921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7921");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        java.util.Properties properties36 = atomikosProperties34.asProperties();
        java.lang.Object obj37 = properties13.remove((java.lang.Object) atomikosProperties34);
        properties13.clear();
        java.util.Properties properties39 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long41 = atomikosProperties40.defaultJtaTimeout;
        boolean boolean42 = atomikosProperties40.enableLogging;
        atomikosProperties40.setSerialJtaTransactions(true);
        java.util.Properties properties45 = atomikosProperties40.asProperties();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties49 = atomikosProperties48.asProperties();
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties49.keys();
        java.lang.Object obj54 = properties49.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection55 = properties49.values();
        java.util.Set<java.lang.String> strSet56 = properties49.stringPropertyNames();
        boolean boolean57 = properties45.contains((java.lang.Object) properties49);
        java.util.Properties properties58 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setService("");
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        long long64 = atomikosProperties59.getCheckpointInterval();
        atomikosProperties59.setMaxTimeout(0L);
        atomikosProperties59.forceShutdownOnVmExit = false;
        atomikosProperties59.setEnableLogging(false);
        boolean boolean71 = atomikosProperties59.enableLogging;
        java.lang.String str72 = atomikosProperties59.logBaseName;
        java.lang.String str73 = atomikosProperties59.service;
        boolean boolean74 = properties45.equals((java.lang.Object) atomikosProperties59);
        boolean boolean75 = properties39.containsValue((java.lang.Object) properties45);
        java.util.Enumeration<?> wildcardEnumeration76 = properties45.propertyNames();
        java.io.Writer writer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.store(writer77, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=35, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 500L + "'", long64 == 500L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration76);
    }

    @Test
    public void test7922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7922");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        java.lang.Object obj15 = properties1.putIfAbsent((java.lang.Object) objSet13, (java.lang.Object) 1.0f);
        java.lang.String str17 = properties1.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setService("");
        boolean boolean21 = atomikosProperties18.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties18.asProperties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        boolean boolean27 = atomikosProperties24.isEnableLogging();
        java.util.Properties properties28 = atomikosProperties24.asProperties();
        atomikosProperties24.setSerialJtaTransactions(false);
        java.lang.String str31 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties37 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean39 = atomikosProperties38.forceShutdownOnVmExit;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.lang.String str42 = atomikosProperties38.logBaseName;
        atomikosProperties38.service = "tmlog";
        java.util.Properties properties45 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean47 = atomikosProperties46.forceShutdownOnVmExit;
        java.lang.String str48 = atomikosProperties46.getLogBaseDir();
        java.lang.Object obj49 = properties37.getOrDefault((java.lang.Object) atomikosProperties38, (java.lang.Object) str48);
        java.lang.Object obj50 = properties22.put((java.lang.Object) atomikosProperties24, (java.lang.Object) atomikosProperties38);
        boolean boolean51 = properties22.isEmpty();
        java.util.Set<java.lang.String> strSet52 = properties22.stringPropertyNames();
        java.lang.Object obj53 = properties1.get((java.lang.Object) strSet52);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test7923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7923");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test7924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7924");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj8 = properties3.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection9 = properties3.values();
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj13 = properties10.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        atomikosProperties16.service = "tmlog";
        boolean boolean23 = properties15.containsValue((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setEnableLogging(false);
        boolean boolean31 = atomikosProperties24.forceShutdownOnVmExit;
        java.lang.Object obj32 = properties15.remove((java.lang.Object) boolean31);
        java.lang.String str34 = properties15.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties35 = new java.util.Properties(properties15);
        java.util.Properties properties36 = new java.util.Properties(properties15);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties40.keys();
        boolean boolean44 = properties40.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties48 = atomikosProperties47.asProperties();
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties48.keys();
        java.lang.Object obj53 = properties48.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection54 = properties48.values();
        boolean boolean55 = properties40.containsKey((java.lang.Object) properties48);
        java.util.Properties properties56 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long58 = atomikosProperties57.defaultJtaTimeout;
        boolean boolean59 = atomikosProperties57.enableLogging;
        atomikosProperties57.setSerialJtaTransactions(true);
        java.util.Properties properties62 = atomikosProperties57.asProperties();
        java.util.Properties properties63 = atomikosProperties57.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean65 = atomikosProperties64.forceShutdownOnVmExit;
        atomikosProperties64.setSerialJtaTransactions(true);
        java.lang.String str68 = atomikosProperties64.logBaseName;
        boolean boolean69 = atomikosProperties64.forceShutdownOnVmExit;
        int int70 = atomikosProperties64.maxActives;
        java.lang.String str71 = atomikosProperties64.logBaseName;
        atomikosProperties64.setForceShutdownOnVmExit(true);
        java.util.Properties properties74 = atomikosProperties64.asProperties();
        boolean boolean75 = atomikosProperties64.isForceShutdownOnVmExit();
        java.util.Properties properties76 = atomikosProperties64.asProperties();
        java.lang.Object obj77 = properties40.replace((java.lang.Object) atomikosProperties57, (java.lang.Object) atomikosProperties64);
        java.lang.String str78 = atomikosProperties64.getLogBaseDir();
        long long79 = atomikosProperties64.getMaxTimeout();
        java.lang.Object obj80 = properties15.remove((java.lang.Object) atomikosProperties64);
        boolean boolean81 = atomikosProperties64.serialJtaTransactions;
        boolean boolean82 = atomikosProperties64.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertEquals("'" + obj13 + "' != '" + (-1.0d) + "'", obj13, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 300000L + "'", long79 == 300000L);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test7925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7925");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection10 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties7.elements();
        java.lang.String str13 = properties7.getProperty("tmlog");
        java.util.Enumeration<?> wildcardEnumeration14 = properties7.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean17 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.lang.String str20 = atomikosProperties16.logBaseName;
        boolean boolean21 = atomikosProperties16.forceShutdownOnVmExit;
        atomikosProperties16.logBaseName = "tmlog";
        atomikosProperties16.enableLogging = true;
        long long26 = atomikosProperties16.getDefaultJtaTimeout();
        boolean boolean27 = atomikosProperties16.isForceShutdownOnVmExit();
        atomikosProperties16.setEnableLogging(true);
        atomikosProperties16.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties32 = atomikosProperties16.asProperties();
        boolean boolean33 = atomikosProperties16.forceShutdownOnVmExit;
        boolean boolean34 = properties7.containsKey((java.lang.Object) boolean33);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test7926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7926");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setService("");
        atomikosProperties6.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean12 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.setSerialJtaTransactions(true);
        boolean boolean15 = properties3.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) true);
        atomikosProperties6.setForceShutdownOnVmExit(false);
        long long18 = atomikosProperties6.checkpointInterval;
        java.lang.String str19 = atomikosProperties6.getTransactionManagerUniqueName();
        boolean boolean20 = atomikosProperties6.threadedTwoPhaseCommit;
        boolean boolean21 = atomikosProperties6.threadedTwoPhaseCommit;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test7927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7927");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = 300000L;
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        boolean boolean21 = properties13.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties13.elements();
        boolean boolean24 = properties7.remove((java.lang.Object) properties13, (java.lang.Object) 50);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection32 = properties29.values();
        atomikosProperties0.set(properties13, "{}", (java.lang.Object) objCollection32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        java.util.Properties properties36 = atomikosProperties34.asProperties();
        java.lang.Object obj37 = properties13.remove((java.lang.Object) atomikosProperties34);
        java.util.Set<java.lang.Object> objSet38 = properties13.keySet();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties42 = atomikosProperties41.asProperties();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties42.keys();
        java.lang.Object obj47 = properties42.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection48 = properties42.values();
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj52 = properties49.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties54 = new java.util.Properties(properties42);
        java.lang.String str55 = properties42.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setService("");
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        long long61 = atomikosProperties56.getCheckpointInterval();
        atomikosProperties56.maxTimeout = (-1);
        java.util.Properties properties64 = atomikosProperties56.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long66 = atomikosProperties65.defaultJtaTimeout;
        boolean boolean67 = atomikosProperties65.enableLogging;
        atomikosProperties65.setSerialJtaTransactions(true);
        java.util.Properties properties70 = atomikosProperties65.asProperties();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties64.elements();
        java.util.Properties properties73 = new java.util.Properties(properties64);
        java.lang.Object obj74 = properties42.get((java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setService("");
        boolean boolean78 = atomikosProperties75.isEnableLogging();
        atomikosProperties75.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setService("");
        boolean boolean84 = atomikosProperties81.isEnableLogging();
        atomikosProperties81.setLogBaseName("tmlog");
        java.lang.Object obj87 = properties42.put((java.lang.Object) atomikosProperties75, (java.lang.Object) "tmlog");
        java.lang.Object obj88 = properties13.remove((java.lang.Object) properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties42.elements();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (-1.0d) + "'", obj52, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str55, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(objEnumeration89);
    }

    @Test
    public void test7928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7928");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean4 = atomikosProperties0.serialJtaTransactions;
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str8 = atomikosProperties0.service;
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
        atomikosProperties0.defaultJtaTimeout = (byte) 10;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test7929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7929");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean6 = properties3.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        long long12 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.maxTimeout = (-1);
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long17 = atomikosProperties16.defaultJtaTimeout;
        boolean boolean18 = atomikosProperties16.enableLogging;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        boolean boolean33 = properties29.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties37 = atomikosProperties36.asProperties();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties37.keys();
        java.lang.Object obj42 = properties37.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection43 = properties37.values();
        boolean boolean44 = properties29.containsKey((java.lang.Object) properties37);
        java.util.Properties properties45 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long47 = atomikosProperties46.defaultJtaTimeout;
        boolean boolean48 = atomikosProperties46.enableLogging;
        atomikosProperties46.setSerialJtaTransactions(true);
        java.util.Properties properties51 = atomikosProperties46.asProperties();
        java.util.Properties properties52 = atomikosProperties46.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean54 = atomikosProperties53.forceShutdownOnVmExit;
        atomikosProperties53.setSerialJtaTransactions(true);
        java.lang.String str57 = atomikosProperties53.logBaseName;
        boolean boolean58 = atomikosProperties53.forceShutdownOnVmExit;
        int int59 = atomikosProperties53.maxActives;
        java.lang.String str60 = atomikosProperties53.logBaseName;
        atomikosProperties53.setForceShutdownOnVmExit(true);
        java.util.Properties properties63 = atomikosProperties53.asProperties();
        boolean boolean64 = atomikosProperties53.isForceShutdownOnVmExit();
        java.util.Properties properties65 = atomikosProperties53.asProperties();
        java.lang.Object obj66 = properties29.replace((java.lang.Object) atomikosProperties46, (java.lang.Object) atomikosProperties53);
        java.lang.String str67 = atomikosProperties53.getLogBaseDir();
        atomikosProperties53.logBaseName = "{}";
        java.util.Properties properties70 = atomikosProperties53.asProperties();
        atomikosProperties53.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj73 = properties21.put((java.lang.Object) properties25, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Set<java.lang.String> strSet78 = properties77.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setService("");
        boolean boolean82 = atomikosProperties79.isEnableLogging();
        java.lang.Object obj83 = properties21.replace((java.lang.Object) properties77, (java.lang.Object) atomikosProperties79);
        boolean boolean84 = properties3.equals((java.lang.Object) atomikosProperties79);
        java.lang.String str85 = atomikosProperties79.transactionManagerUniqueName;
        atomikosProperties79.maxTimeout = 300000L;
        java.lang.String str88 = atomikosProperties79.getLogBaseDir();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test7930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7930");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str17 = atomikosProperties10.logBaseName;
        java.lang.Object obj18 = properties3.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties10);
        atomikosProperties5.maxActives = (-1);
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setSerialJtaTransactions(true);
        atomikosProperties5.forceShutdownOnVmExit = false;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test7931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7931");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.transactionManagerUniqueName = "hi!";
        boolean boolean10 = atomikosProperties0.serialJtaTransactions;
        long long11 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test7932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7932");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.logBaseName = "";
        int int9 = atomikosProperties0.getMaxActives();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str13 = atomikosProperties0.transactionManagerUniqueName;
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!}");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test7933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7933");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        boolean boolean15 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties9.entrySet();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties22 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        java.util.Set<java.lang.String> strSet25 = properties24.stringPropertyNames();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        int int27 = properties22.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties31 = atomikosProperties28.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean33 = atomikosProperties32.forceShutdownOnVmExit;
        atomikosProperties32.setSerialJtaTransactions(true);
        java.lang.String str36 = atomikosProperties32.logBaseName;
        atomikosProperties32.service = "tmlog";
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean41 = atomikosProperties40.forceShutdownOnVmExit;
        java.lang.String str42 = atomikosProperties40.getLogBaseDir();
        java.lang.Object obj43 = properties31.getOrDefault((java.lang.Object) atomikosProperties32, (java.lang.Object) str42);
        long long44 = atomikosProperties32.getDefaultJtaTimeout();
        atomikosProperties32.setLogBaseName("{}");
        int int47 = atomikosProperties32.maxActives;
        java.lang.Object obj48 = properties9.replace((java.lang.Object) properties22, (java.lang.Object) int47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setService("");
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        long long54 = atomikosProperties49.getCheckpointInterval();
        java.util.Properties properties55 = atomikosProperties49.asProperties();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties59 = atomikosProperties58.asProperties();
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties59.keys();
        boolean boolean63 = properties59.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties67 = atomikosProperties66.asProperties();
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties67.keys();
        java.lang.Object obj72 = properties67.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection73 = properties67.values();
        boolean boolean74 = properties59.containsKey((java.lang.Object) properties67);
        java.util.Properties properties75 = new java.util.Properties(properties59);
        java.util.Set<java.lang.Object> objSet76 = properties59.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties59.keys();
        java.lang.Object obj78 = properties9.getOrDefault((java.lang.Object) properties55, (java.lang.Object) properties59);
        java.util.Collection<java.lang.Object> objCollection79 = properties9.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties81 = atomikosProperties80.asProperties();
        atomikosProperties80.checkpointInterval = 1L;
        java.lang.String str84 = atomikosProperties80.getService();
        boolean boolean85 = atomikosProperties80.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties89 = atomikosProperties86.asProperties();
        atomikosProperties86.setSerialJtaTransactions(true);
        java.util.Properties properties92 = atomikosProperties86.asProperties();
        java.lang.Object obj93 = properties9.put((java.lang.Object) atomikosProperties80, (java.lang.Object) properties92);
        java.lang.String str94 = atomikosProperties80.service;
        atomikosProperties80.checkpointInterval = 11;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 9 + "'", int27 == 9);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 50 + "'", int47 == 50);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 500L + "'", long54 == 500L);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(obj78);
// flaky:         org.junit.Assert.assertEquals(obj78.toString(), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertNotNull(objCollection79);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(properties89);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test7934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7934");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        java.util.Enumeration<?> wildcardEnumeration7 = properties3.propertyNames();
        properties3.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean10 = atomikosProperties9.forceShutdownOnVmExit;
        atomikosProperties9.setSerialJtaTransactions(true);
        java.lang.String str13 = atomikosProperties9.logBaseName;
        boolean boolean14 = atomikosProperties9.forceShutdownOnVmExit;
        java.lang.String str15 = atomikosProperties9.getLogBaseName();
        long long16 = atomikosProperties9.defaultJtaTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean18 = atomikosProperties17.forceShutdownOnVmExit;
        atomikosProperties17.setSerialJtaTransactions(true);
        java.lang.String str21 = atomikosProperties17.logBaseName;
        boolean boolean22 = atomikosProperties17.forceShutdownOnVmExit;
        int int23 = atomikosProperties17.maxActives;
        java.lang.String str24 = atomikosProperties17.logBaseName;
        atomikosProperties17.setForceShutdownOnVmExit(true);
        java.util.Properties properties27 = atomikosProperties17.asProperties();
        boolean boolean28 = atomikosProperties17.isForceShutdownOnVmExit();
        long long29 = atomikosProperties17.getDefaultJtaTimeout();
        java.util.Properties properties30 = atomikosProperties17.asProperties();
        java.util.Properties properties31 = atomikosProperties17.asProperties();
        java.lang.Object obj32 = properties3.put((java.lang.Object) atomikosProperties9, (java.lang.Object) properties31);
        java.io.InputStream inputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(inputStream33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test7935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7935");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.service;
        int int6 = atomikosProperties0.getMaxActives();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test7936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7936");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.service;
        atomikosProperties0.setDefaultJtaTimeout(12L);
        long long5 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 12L + "'", long5 == 12L);
    }

    @Test
    public void test7937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7937");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str7 = atomikosProperties0.logBaseName;
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "";
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long15 = atomikosProperties0.maxTimeout;
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test7938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7938");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean4 = atomikosProperties3.enableLogging;
        atomikosProperties3.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        long long12 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.maxTimeout = (-1);
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long17 = atomikosProperties16.defaultJtaTimeout;
        boolean boolean18 = atomikosProperties16.enableLogging;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.lang.String str28 = atomikosProperties24.logBaseName;
        boolean boolean29 = atomikosProperties24.forceShutdownOnVmExit;
        int int30 = atomikosProperties24.maxActives;
        java.lang.String str31 = atomikosProperties24.logBaseName;
        atomikosProperties24.setForceShutdownOnVmExit(true);
        java.util.Properties properties34 = atomikosProperties24.asProperties();
        boolean boolean35 = atomikosProperties24.isForceShutdownOnVmExit();
        java.util.Properties properties36 = atomikosProperties24.asProperties();
        boolean boolean37 = properties1.replace((java.lang.Object) (byte) 1, (java.lang.Object) properties15, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties38 = new java.util.Properties(properties1);
        java.lang.Object obj39 = properties38.clone();
        java.lang.Object obj40 = properties38.clone();
        java.util.Properties properties41 = new java.util.Properties(properties38);
        int int42 = properties41.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean44 = atomikosProperties43.forceShutdownOnVmExit;
        atomikosProperties43.setSerialJtaTransactions(true);
        java.lang.String str47 = atomikosProperties43.logBaseName;
        boolean boolean48 = atomikosProperties43.forceShutdownOnVmExit;
        int int49 = atomikosProperties43.maxActives;
        atomikosProperties43.setService("hi!");
        boolean boolean52 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        boolean boolean55 = atomikosProperties43.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setService("");
        boolean boolean59 = atomikosProperties56.isEnableLogging();
        atomikosProperties56.maxActives = (short) 100;
        atomikosProperties56.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties56.checkpointInterval = 10L;
        java.lang.Object obj66 = properties41.putIfAbsent((java.lang.Object) boolean55, (java.lang.Object) atomikosProperties56);
        atomikosProperties56.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test7939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7939");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.maxTimeout = 10;
        java.lang.String str9 = atomikosProperties0.logBaseName;
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long12 = atomikosProperties11.defaultJtaTimeout;
        boolean boolean13 = atomikosProperties11.enableLogging;
        atomikosProperties11.setSerialJtaTransactions(true);
        java.util.Properties properties16 = atomikosProperties11.asProperties();
        java.util.Properties properties17 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        atomikosProperties19.checkpointInterval = 1L;
        boolean boolean23 = atomikosProperties19.forceShutdownOnVmExit;
        java.lang.Object obj24 = properties17.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties19);
        boolean boolean25 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.forceShutdownOnVmExit = false;
        java.util.Properties properties28 = atomikosProperties19.asProperties();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties32 = atomikosProperties31.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        boolean boolean38 = properties30.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        long long42 = atomikosProperties40.getDefaultJtaTimeout();
        long long43 = atomikosProperties40.getDefaultJtaTimeout();
        boolean boolean44 = atomikosProperties40.serialJtaTransactions;
        boolean boolean45 = atomikosProperties40.isForceShutdownOnVmExit();
        boolean boolean46 = atomikosProperties40.isSerialJtaTransactions();
        atomikosProperties40.defaultJtaTimeout = (-1L);
        boolean boolean49 = atomikosProperties40.isSerialJtaTransactions();
        java.lang.Object obj50 = properties36.putIfAbsent((java.lang.Object) 10.0f, (java.lang.Object) boolean49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setService("");
        atomikosProperties51.setSerialJtaTransactions(true);
        atomikosProperties51.setEnableLogging(false);
        atomikosProperties51.service = "tmlog";
        atomikosProperties51.threadedTwoPhaseCommit = true;
        atomikosProperties51.forceShutdownOnVmExit = false;
        java.util.Properties properties64 = atomikosProperties51.asProperties();
        boolean boolean65 = properties36.containsValue((java.lang.Object) atomikosProperties51);
        boolean boolean66 = properties28.containsKey((java.lang.Object) properties36);
        boolean boolean67 = properties10.containsValue((java.lang.Object) properties36);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test7940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7940");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.lang.Object obj23 = properties3.setProperty("tmlog", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        long long29 = atomikosProperties24.getCheckpointInterval();
        atomikosProperties24.setMaxTimeout(0L);
        atomikosProperties24.forceShutdownOnVmExit = false;
        java.lang.Object obj34 = properties3.get((java.lang.Object) atomikosProperties24);
        boolean boolean35 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test7941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7941");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        boolean boolean16 = properties8.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties14);
        java.util.Collection<java.lang.Object> objCollection17 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setService("");
        boolean boolean21 = atomikosProperties18.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties18.asProperties();
        properties22.clear();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.lang.Object obj31 = properties22.put((java.lang.Object) properties27, (java.lang.Object) (byte) 0);
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) objCollection17, obj31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        atomikosProperties33.service = "tmlog";
        atomikosProperties33.setSerialJtaTransactions(false);
        java.util.Properties properties42 = atomikosProperties33.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        atomikosProperties44.checkpointInterval = 1L;
        java.lang.String str48 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.transactionManagerUniqueName = "tmlog";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setService("");
        atomikosProperties51.setSerialJtaTransactions(true);
        atomikosProperties51.setEnableLogging(false);
        java.lang.String str58 = atomikosProperties51.logBaseName;
        int int59 = atomikosProperties51.maxActives;
        boolean boolean60 = atomikosProperties51.threadedTwoPhaseCommit;
        java.lang.Object obj61 = properties42.getOrDefault((java.lang.Object) atomikosProperties44, (java.lang.Object) atomikosProperties51);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties42.keys();
        java.util.Set<java.lang.String> strSet63 = properties42.stringPropertyNames();
        properties42.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setService("");
        boolean boolean68 = atomikosProperties65.isEnableLogging();
        java.util.Properties properties69 = atomikosProperties65.asProperties();
        atomikosProperties65.setSerialJtaTransactions(false);
        java.lang.String str72 = atomikosProperties65.getLogBaseName();
        atomikosProperties65.setTransactionManagerUniqueName("");
        atomikosProperties65.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties65.setService("");
        java.lang.Class<?> wildcardClass79 = atomikosProperties65.getClass();
        boolean boolean80 = properties42.contains((java.lang.Object) wildcardClass79);
        java.util.Properties properties81 = new java.util.Properties(properties42);
        java.io.OutputStream outputStream82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.storeToXML(outputStream82, "{com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test7942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7942");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.defaultJtaTimeout = 0L;
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        long long7 = atomikosProperties0.checkpointInterval;
        boolean boolean8 = atomikosProperties0.enableLogging;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test7943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7943");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "tmlog";
        long long7 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test7944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7944");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        boolean boolean17 = atomikosProperties9.forceShutdownOnVmExit;
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.checkpointInterval = 0L;
        atomikosProperties9.maxTimeout = (-1L);
        atomikosProperties9.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        atomikosProperties9.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean28 = atomikosProperties9.threadedTwoPhaseCommit;
        java.lang.String str29 = atomikosProperties9.service;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}" + "'", str29, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}");
    }

    @Test
    public void test7945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7945");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Properties properties6 = new java.util.Properties(properties4);
        java.util.Properties properties7 = new java.util.Properties(properties4);
        java.util.Properties properties8 = new java.util.Properties(properties4);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
    }

    @Test
    public void test7946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7946");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean6 = properties3.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties3.elements();
        java.util.Properties properties8 = new java.util.Properties(properties3);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
    }

    @Test
    public void test7947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7947");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.service;
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.checkpointInterval = '#';
        int int17 = atomikosProperties0.getMaxActives();
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.maxTimeout = (byte) -1;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test7948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7948");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        int int5 = atomikosProperties0.maxActives;
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        boolean boolean17 = properties9.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties15);
        java.util.Collection<java.lang.Object> objCollection18 = properties15.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        boolean boolean21 = atomikosProperties19.enableLogging;
        int int22 = atomikosProperties19.maxActives;
        java.lang.String str23 = atomikosProperties19.getService();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        boolean boolean31 = properties27.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long34 = atomikosProperties33.defaultJtaTimeout;
        boolean boolean35 = atomikosProperties33.enableLogging;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.Object obj38 = properties27.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties27.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setService("");
        atomikosProperties41.setSerialJtaTransactions(true);
        atomikosProperties41.setEnableLogging(false);
        atomikosProperties41.service = "tmlog";
        atomikosProperties19.set(properties27, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties41);
        atomikosProperties41.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties41.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.lang.String str55 = atomikosProperties41.getService();
        boolean boolean56 = properties15.containsValue((java.lang.Object) str55);
        java.util.Properties properties57 = new java.util.Properties(properties15);
        java.lang.Object obj58 = properties6.remove((java.lang.Object) properties15);
        java.lang.Object obj59 = properties15.clone();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 50 + "'", int5 == 50);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str55, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
    }

    @Test
    public void test7949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7949");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        int int6 = atomikosProperties0.maxActives;
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setService("{}");
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        long long16 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.serialJtaTransactions = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
    }

    @Test
    public void test7950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7950");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setEnableLogging(false);
        boolean boolean12 = atomikosProperties0.enableLogging;
        java.lang.String str13 = atomikosProperties0.logBaseName;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) ' ');
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test7951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7951");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean2 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean3 = atomikosProperties0.enableLogging;
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        java.lang.String str7 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test7952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7952");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean2 = atomikosProperties0.enableLogging;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        atomikosProperties8.checkpointInterval = 1L;
        boolean boolean12 = atomikosProperties8.forceShutdownOnVmExit;
        java.lang.Object obj13 = properties6.put((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties8);
        java.util.Properties properties14 = new java.util.Properties(properties6);
        java.util.Set<java.lang.String> strSet15 = properties6.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test7953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7953");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        boolean boolean17 = properties9.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        boolean boolean21 = atomikosProperties19.enableLogging;
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties24 = atomikosProperties19.asProperties();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties28 = atomikosProperties27.asProperties();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties28.keys();
        java.lang.Object obj33 = properties28.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection34 = properties28.values();
        java.util.Set<java.lang.String> strSet35 = properties28.stringPropertyNames();
        boolean boolean36 = properties24.contains((java.lang.Object) properties28);
        java.lang.Object obj37 = properties3.replace((java.lang.Object) properties9, (java.lang.Object) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setService("");
        boolean boolean41 = atomikosProperties38.isEnableLogging();
        java.util.Properties properties42 = atomikosProperties38.asProperties();
        properties42.clear();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties47 = atomikosProperties46.asProperties();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties47.keys();
        java.lang.Object obj51 = properties42.put((java.lang.Object) properties47, (java.lang.Object) (byte) 0);
        boolean boolean52 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean54 = atomikosProperties53.forceShutdownOnVmExit;
        atomikosProperties53.setSerialJtaTransactions(true);
        boolean boolean57 = properties47.containsKey((java.lang.Object) atomikosProperties53);
        atomikosProperties53.setTransactionManagerUniqueName("hi!");
        java.lang.String str60 = atomikosProperties53.getService();
        java.lang.String str61 = atomikosProperties53.getTransactionManagerUniqueName();
        boolean boolean62 = atomikosProperties53.enableLogging;
        boolean boolean63 = properties28.containsValue((java.lang.Object) atomikosProperties53);
        boolean boolean64 = atomikosProperties53.enableLogging;
        atomikosProperties53.forceShutdownOnVmExit = false;
        java.util.Properties properties67 = atomikosProperties53.asProperties();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(properties67);
    }

    @Test
    public void test7954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7954");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setMaxTimeout(100L);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        boolean boolean15 = properties11.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties19 = atomikosProperties18.asProperties();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties19.keys();
        java.lang.Object obj24 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection25 = properties19.values();
        boolean boolean26 = properties11.containsKey((java.lang.Object) properties19);
        java.util.Properties properties27 = new java.util.Properties(properties11);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties31 = atomikosProperties30.asProperties();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties31.keys();
        java.lang.Object obj36 = properties31.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection37 = properties31.values();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj41 = properties38.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties46 = atomikosProperties45.asProperties();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setService("");
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setService("");
        atomikosProperties53.setSerialJtaTransactions(true);
        atomikosProperties53.setEnableLogging(false);
        java.lang.String str60 = atomikosProperties53.logBaseName;
        java.lang.Object obj61 = properties46.replace((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties53);
        boolean boolean62 = properties31.contains((java.lang.Object) properties46);
        java.lang.String str63 = properties46.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setLogBaseDir("");
        atomikosProperties64.setMaxTimeout(100L);
        long long69 = atomikosProperties64.getDefaultJtaTimeout();
        java.lang.Object obj70 = properties11.putIfAbsent((java.lang.Object) properties46, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean73 = atomikosProperties72.forceShutdownOnVmExit;
        atomikosProperties72.setSerialJtaTransactions(true);
        java.lang.String str76 = atomikosProperties72.logBaseName;
        boolean boolean77 = atomikosProperties72.forceShutdownOnVmExit;
        int int78 = atomikosProperties72.maxActives;
        java.lang.String str79 = atomikosProperties72.logBaseName;
        atomikosProperties72.setForceShutdownOnVmExit(true);
        java.util.Properties properties82 = atomikosProperties72.asProperties();
        boolean boolean83 = atomikosProperties72.isForceShutdownOnVmExit();
        atomikosProperties0.set(properties46, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) atomikosProperties72);
        java.lang.String str85 = atomikosProperties72.getLogBaseDir();
        atomikosProperties72.maxActives = (short) -1;
        atomikosProperties72.defaultJtaTimeout = 100L;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertEquals("'" + obj41 + "' != '" + (-1.0d) + "'", obj41, (-1.0d));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str63, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10000L + "'", long69 == 10000L);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tmlog" + "'", str76, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test7955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7955");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.setCheckpointInterval((long) 100);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties13.keys();
        boolean boolean17 = properties13.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        boolean boolean21 = atomikosProperties19.enableLogging;
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.Object obj24 = properties13.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Properties properties25 = new java.util.Properties(properties13);
        properties13.clear();
        java.util.Properties properties27 = new java.util.Properties(properties13);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties32 = atomikosProperties31.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties32.keys();
        boolean boolean35 = properties32.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties32.elements();
        atomikosProperties0.set(properties13, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties32);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}");
        java.lang.String str40 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}" + "'", str40, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, tmlog=tmlog}");
    }

    @Test
    public void test7956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7956");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.enableLogging = false;
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream14, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tmlog={}, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test7957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7957");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.maxActives = (byte) 0;
        atomikosProperties0.setService("");
        atomikosProperties0.setTransactionManagerUniqueName("{{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}=hi!}");
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test7958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7958");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties7.keys();
        boolean boolean11 = properties7.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        boolean boolean22 = properties7.containsKey((java.lang.Object) properties15);
        java.util.Properties properties23 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        java.lang.String str28 = atomikosProperties24.logBaseName;
        boolean boolean29 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.logBaseName = "tmlog";
        atomikosProperties24.enableLogging = true;
        long long34 = atomikosProperties24.getDefaultJtaTimeout();
        boolean boolean35 = atomikosProperties24.isForceShutdownOnVmExit();
        boolean boolean36 = properties2.remove((java.lang.Object) properties7, (java.lang.Object) boolean35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties40 = atomikosProperties39.asProperties();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties40.keys();
        java.lang.Object obj45 = properties40.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection46 = properties40.values();
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj50 = properties47.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Properties properties52 = new java.util.Properties(properties40);
        java.lang.Object obj53 = properties52.clone();
        boolean boolean54 = properties52.isEmpty();
        boolean boolean55 = properties2.equals((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean57 = atomikosProperties56.forceShutdownOnVmExit;
        atomikosProperties56.setSerialJtaTransactions(true);
        java.lang.String str60 = atomikosProperties56.logBaseName;
        atomikosProperties56.service = "tmlog";
        atomikosProperties56.setSerialJtaTransactions(false);
        java.lang.String str65 = atomikosProperties56.getLogBaseDir();
        atomikosProperties56.logBaseName = "{}";
        long long68 = atomikosProperties56.defaultJtaTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean70 = atomikosProperties69.forceShutdownOnVmExit;
        atomikosProperties69.setSerialJtaTransactions(true);
        java.lang.String str73 = atomikosProperties69.logBaseName;
        boolean boolean74 = atomikosProperties69.forceShutdownOnVmExit;
        atomikosProperties69.enableLogging = false;
        atomikosProperties69.setForceShutdownOnVmExit(false);
        atomikosProperties69.defaultJtaTimeout = (short) 0;
        long long81 = atomikosProperties69.maxTimeout;
        java.lang.Object obj82 = properties2.getOrDefault((java.lang.Object) long68, (java.lang.Object) atomikosProperties69);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1.0d) + "'", obj50, (-1.0d));
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10000L + "'", long68 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 300000L + "'", long81 == 300000L);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test7959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7959");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.keys();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection17 = properties11.values();
        boolean boolean18 = properties3.containsKey((java.lang.Object) properties11);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        boolean boolean22 = atomikosProperties20.enableLogging;
        atomikosProperties20.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties20.asProperties();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean28 = atomikosProperties27.forceShutdownOnVmExit;
        atomikosProperties27.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties27.logBaseName;
        boolean boolean32 = atomikosProperties27.forceShutdownOnVmExit;
        int int33 = atomikosProperties27.maxActives;
        java.lang.String str34 = atomikosProperties27.logBaseName;
        atomikosProperties27.setForceShutdownOnVmExit(true);
        java.util.Properties properties37 = atomikosProperties27.asProperties();
        boolean boolean38 = atomikosProperties27.isForceShutdownOnVmExit();
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties3.replace((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        long long41 = atomikosProperties27.getDefaultJtaTimeout();
        java.lang.String str42 = atomikosProperties27.logBaseName;
        atomikosProperties27.defaultJtaTimeout = 100;
        java.util.Properties properties45 = atomikosProperties27.asProperties();
        java.io.Reader reader46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.load(reader46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(properties45);
    }

    @Test
    public void test7960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7960");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test7961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7961");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.setProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.keys();
        boolean boolean14 = properties10.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection24 = properties18.values();
        boolean boolean25 = properties10.containsKey((java.lang.Object) properties18);
        java.util.Properties properties26 = new java.util.Properties(properties10);
        java.util.Properties properties27 = new java.util.Properties(properties10);
        java.lang.String str28 = properties27.toString();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setService("");
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setMaxTimeout(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean41 = atomikosProperties40.forceShutdownOnVmExit;
        atomikosProperties40.setSerialJtaTransactions(true);
        java.lang.String str44 = atomikosProperties40.logBaseName;
        boolean boolean45 = atomikosProperties40.forceShutdownOnVmExit;
        int int46 = atomikosProperties40.maxActives;
        java.lang.String str47 = atomikosProperties40.logBaseName;
        atomikosProperties40.setForceShutdownOnVmExit(true);
        java.util.Properties properties50 = atomikosProperties40.asProperties();
        boolean boolean51 = atomikosProperties40.isForceShutdownOnVmExit();
        java.util.Properties properties52 = atomikosProperties40.asProperties();
        atomikosProperties40.setSerialJtaTransactions(false);
        java.lang.String str55 = atomikosProperties40.logBaseName;
        boolean boolean56 = properties27.replace((java.lang.Object) properties31, (java.lang.Object) 1L, (java.lang.Object) atomikosProperties40);
        int int57 = atomikosProperties40.maxActives;
        atomikosProperties40.setForceShutdownOnVmExit(false);
        boolean boolean60 = atomikosProperties40.isForceShutdownOnVmExit();
        java.lang.Object obj61 = properties3.remove((java.lang.Object) boolean60);
        java.util.Properties properties62 = new java.util.Properties(properties3);
        java.lang.Object obj63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj64 = properties3.remove(obj63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 50 + "'", int57 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test7962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7962");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties12 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties16 = atomikosProperties13.asProperties();
        boolean boolean17 = properties10.contains((java.lang.Object) properties16);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties21 = atomikosProperties20.asProperties();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties21.keys();
        boolean boolean25 = properties21.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties29 = atomikosProperties28.asProperties();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties29.keys();
        java.lang.Object obj34 = properties29.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection35 = properties29.values();
        boolean boolean36 = properties21.containsKey((java.lang.Object) properties29);
        java.util.Properties properties37 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long39 = atomikosProperties38.defaultJtaTimeout;
        boolean boolean40 = atomikosProperties38.enableLogging;
        atomikosProperties38.setSerialJtaTransactions(true);
        java.util.Properties properties43 = atomikosProperties38.asProperties();
        java.util.Properties properties44 = atomikosProperties38.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean46 = atomikosProperties45.forceShutdownOnVmExit;
        atomikosProperties45.setSerialJtaTransactions(true);
        java.lang.String str49 = atomikosProperties45.logBaseName;
        boolean boolean50 = atomikosProperties45.forceShutdownOnVmExit;
        int int51 = atomikosProperties45.maxActives;
        java.lang.String str52 = atomikosProperties45.logBaseName;
        atomikosProperties45.setForceShutdownOnVmExit(true);
        java.util.Properties properties55 = atomikosProperties45.asProperties();
        boolean boolean56 = atomikosProperties45.isForceShutdownOnVmExit();
        java.util.Properties properties57 = atomikosProperties45.asProperties();
        java.lang.Object obj58 = properties21.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        java.lang.Object obj59 = properties3.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) atomikosProperties45);
        atomikosProperties45.setDefaultJtaTimeout(10000L);
        boolean boolean62 = atomikosProperties45.serialJtaTransactions;
        java.lang.String str63 = atomikosProperties45.transactionManagerUniqueName;
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test7963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7963");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj3 = properties0.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        java.util.Properties properties4 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        atomikosProperties5.checkpointInterval = 1L;
        boolean boolean9 = atomikosProperties5.forceShutdownOnVmExit;
        long long10 = atomikosProperties5.defaultJtaTimeout;
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        atomikosProperties5.maxTimeout = '4';
        atomikosProperties5.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties5.maxActives = 100;
        boolean boolean18 = properties4.containsValue((java.lang.Object) atomikosProperties5);
        long long19 = atomikosProperties5.checkpointInterval;
        atomikosProperties5.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
    }

    @Test
    public void test7964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7964");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.enableLogging = true;
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.serialJtaTransactions;
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        java.lang.Object obj20 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection21 = properties15.values();
        java.util.Set<java.lang.String> strSet22 = properties15.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setService("");
        atomikosProperties23.setSerialJtaTransactions(true);
        java.util.Properties properties28 = atomikosProperties23.asProperties();
        properties28.clear();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties34 = atomikosProperties33.asProperties();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties34.keys();
        boolean boolean38 = properties34.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long41 = atomikosProperties40.defaultJtaTimeout;
        boolean boolean42 = atomikosProperties40.enableLogging;
        atomikosProperties40.setSerialJtaTransactions(true);
        java.lang.Object obj45 = properties34.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        boolean boolean46 = properties28.remove((java.lang.Object) 1.0f, (java.lang.Object) 100L);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties50 = atomikosProperties49.asProperties();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties50.keys();
        java.lang.Object obj55 = properties50.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Properties properties56 = new java.util.Properties(properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setService("");
        atomikosProperties58.setSerialJtaTransactions(true);
        java.util.Properties properties63 = atomikosProperties58.asProperties();
        properties63.clear();
        boolean boolean65 = properties28.replace((java.lang.Object) properties50, (java.lang.Object) 0.0d, (java.lang.Object) properties63);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties69 = atomikosProperties68.asProperties();
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        java.util.Collection<java.lang.Object> objCollection71 = properties67.values();
        java.lang.Object obj72 = properties15.replace((java.lang.Object) 0.0d, (java.lang.Object) properties67);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties77 = atomikosProperties76.asProperties();
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties77.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setService("");
        atomikosProperties80.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean86 = atomikosProperties85.forceShutdownOnVmExit;
        atomikosProperties85.setSerialJtaTransactions(true);
        boolean boolean89 = properties77.remove((java.lang.Object) atomikosProperties80, (java.lang.Object) true);
        atomikosProperties80.setService("");
        atomikosProperties0.set(properties67, "", (java.lang.Object) atomikosProperties80);
        boolean boolean93 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(objCollection71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test7965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7965");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setLogBaseName("hi!");
        atomikosProperties15.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        boolean boolean24 = atomikosProperties15.isEnableLogging();
        boolean boolean25 = atomikosProperties15.enableLogging;
        java.lang.String str26 = atomikosProperties15.logBaseDir;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test7966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7966");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean11 = atomikosProperties10.forceShutdownOnVmExit;
        atomikosProperties10.setSerialJtaTransactions(true);
        java.lang.String str14 = atomikosProperties10.logBaseName;
        atomikosProperties10.service = "tmlog";
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        int int18 = atomikosProperties10.maxActives;
        long long19 = atomikosProperties10.getCheckpointInterval();
        long long20 = atomikosProperties10.checkpointInterval;
        atomikosProperties10.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.util.Properties properties23 = atomikosProperties10.asProperties();
        java.lang.String str24 = atomikosProperties10.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean26 = atomikosProperties25.forceShutdownOnVmExit;
        atomikosProperties25.setSerialJtaTransactions(true);
        java.lang.String str29 = atomikosProperties25.logBaseName;
        boolean boolean30 = atomikosProperties25.forceShutdownOnVmExit;
        int int31 = atomikosProperties25.maxActives;
        java.lang.String str32 = atomikosProperties25.logBaseName;
        atomikosProperties25.setForceShutdownOnVmExit(true);
        atomikosProperties25.maxActives = '4';
        atomikosProperties25.service = "{}";
        atomikosProperties25.setEnableLogging(false);
        atomikosProperties25.setCheckpointInterval(500L);
        boolean boolean43 = properties8.remove((java.lang.Object) atomikosProperties10, (java.lang.Object) atomikosProperties25);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 500L + "'", long19 == 500L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 500L + "'", long20 == 500L);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str24, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test7967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7967");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setTransactionManagerUniqueName("hi!");
        java.lang.String str22 = atomikosProperties15.logBaseDir;
        atomikosProperties15.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties15.setCheckpointInterval((long) (short) -1);
        boolean boolean27 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setMaxActives((int) (short) 100);
        atomikosProperties15.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=9, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=-1, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties15.setCheckpointInterval(97L);
        java.lang.String str34 = atomikosProperties15.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test7968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7968");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.service;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval(1L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test7969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7969");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        boolean boolean7 = properties3.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long10 = atomikosProperties9.defaultJtaTimeout;
        boolean boolean11 = atomikosProperties9.enableLogging;
        atomikosProperties9.setSerialJtaTransactions(true);
        java.lang.Object obj14 = properties3.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Properties properties15 = new java.util.Properties(properties3);
        java.util.Set<java.lang.String> strSet16 = properties3.stringPropertyNames();
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.store(outputStream17, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog, []=1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test7970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7970");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection6 = properties3.values();
        java.util.Properties properties7 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        boolean boolean12 = atomikosProperties9.isEnableLogging();
        java.util.Properties properties13 = atomikosProperties9.asProperties();
        properties13.clear();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties18 = atomikosProperties17.asProperties();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties18.keys();
        java.lang.Object obj22 = properties13.put((java.lang.Object) properties18, (java.lang.Object) (byte) 0);
        boolean boolean23 = properties18.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean25 = atomikosProperties24.forceShutdownOnVmExit;
        atomikosProperties24.setSerialJtaTransactions(true);
        boolean boolean28 = properties18.containsKey((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setLogBaseName("hi!");
        int int31 = atomikosProperties24.getMaxActives();
        boolean boolean32 = properties3.equals((java.lang.Object) int31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.defaultJtaTimeout = (byte) -1;
        atomikosProperties33.setSerialJtaTransactions(false);
        java.lang.Object obj38 = properties3.get((java.lang.Object) atomikosProperties33);
        long long39 = atomikosProperties33.maxTimeout;
        boolean boolean40 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setMaxTimeout((long) 'a');
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test7971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7971");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties4.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.keys();
        java.lang.Object obj15 = properties10.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection16 = properties10.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj20 = properties17.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties22 = new java.util.Properties(properties10);
        java.lang.String str23 = properties10.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setService("");
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        long long29 = atomikosProperties24.getCheckpointInterval();
        atomikosProperties24.maxTimeout = (-1);
        java.util.Properties properties32 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long34 = atomikosProperties33.defaultJtaTimeout;
        boolean boolean35 = atomikosProperties33.enableLogging;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.util.Properties properties38 = atomikosProperties33.asProperties();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties32.elements();
        java.util.Properties properties41 = new java.util.Properties(properties32);
        java.lang.Object obj42 = properties10.get((java.lang.Object) properties32);
        java.util.Set<java.lang.String> strSet43 = properties10.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean45 = atomikosProperties44.forceShutdownOnVmExit;
        atomikosProperties44.setSerialJtaTransactions(true);
        java.lang.String str48 = atomikosProperties44.logBaseName;
        boolean boolean49 = atomikosProperties44.forceShutdownOnVmExit;
        int int50 = atomikosProperties44.maxActives;
        java.lang.String str51 = atomikosProperties44.logBaseName;
        atomikosProperties44.serialJtaTransactions = true;
        boolean boolean55 = properties4.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties44, (java.lang.Object) (byte) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setService("");
        atomikosProperties56.setSerialJtaTransactions(true);
        atomikosProperties56.setEnableLogging(false);
        atomikosProperties56.logBaseName = "tmlog";
        atomikosProperties56.maxActives = 1;
        boolean boolean67 = atomikosProperties56.isForceShutdownOnVmExit();
        atomikosProperties56.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        int int70 = atomikosProperties56.getMaxActives();
        atomikosProperties56.setForceShutdownOnVmExit(false);
        java.lang.Object obj73 = properties4.get((java.lang.Object) atomikosProperties56);
        long long74 = atomikosProperties56.checkpointInterval;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + (-1.0d) + "'", obj20, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str23, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 500L + "'", long74 == 500L);
    }

    @Test
    public void test7972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7972");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setMaxTimeout((long) (byte) 10);
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setCheckpointInterval(500L);
        boolean boolean11 = atomikosProperties0.serialJtaTransactions;
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.keys();
        boolean boolean19 = properties15.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties20 = new java.util.Properties(properties15);
        java.util.Properties properties21 = new java.util.Properties(properties15);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties26 = atomikosProperties25.asProperties();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        properties24.clear();
        java.lang.Object obj29 = null;
        boolean boolean30 = properties24.equals(obj29);
        atomikosProperties0.set(properties21, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.log_base_dir={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.tm_unique_name=tmlog, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", obj29);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test7973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7973");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        java.lang.Object obj15 = properties1.putIfAbsent((java.lang.Object) objSet13, (java.lang.Object) 1.0f);
        java.util.Properties properties16 = new java.util.Properties(properties1);
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.lang.String str19 = properties17.getProperty("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=300000, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setService("");
        atomikosProperties20.setSerialJtaTransactions(true);
        atomikosProperties20.setEnableLogging(false);
        atomikosProperties20.logBaseName = "tmlog";
        atomikosProperties20.maxActives = 1;
        atomikosProperties20.setEnableLogging(true);
        boolean boolean33 = atomikosProperties20.enableLogging;
        java.util.Properties properties34 = atomikosProperties20.asProperties();
        int int35 = properties34.size();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setService("");
        atomikosProperties37.setSerialJtaTransactions(true);
        java.util.Properties properties42 = atomikosProperties37.asProperties();
        properties42.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean45 = atomikosProperties44.forceShutdownOnVmExit;
        atomikosProperties44.setSerialJtaTransactions(true);
        java.lang.String str48 = atomikosProperties44.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties50 = atomikosProperties49.asProperties();
        java.util.Properties properties51 = atomikosProperties49.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setService("");
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        long long58 = atomikosProperties53.getCheckpointInterval();
        boolean boolean59 = atomikosProperties53.threadedTwoPhaseCommit;
        atomikosProperties44.set(properties51, "tmlog", (java.lang.Object) atomikosProperties53);
        boolean boolean61 = properties42.containsValue((java.lang.Object) atomikosProperties53);
        java.util.Properties properties62 = atomikosProperties53.asProperties();
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Properties properties64 = new java.util.Properties(properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setService("");
        atomikosProperties65.setThreadedTwoPhaseCommit(true);
        atomikosProperties65.setMaxTimeout(1L);
        java.util.Properties properties72 = atomikosProperties65.asProperties();
        long long73 = atomikosProperties65.checkpointInterval;
        java.lang.String str74 = atomikosProperties65.transactionManagerUniqueName;
        atomikosProperties65.maxTimeout = 100L;
        java.lang.Object obj77 = properties64.remove((java.lang.Object) 100L);
        java.util.Properties properties78 = new java.util.Properties(properties64);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 500L + "'", long58 == 500L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 500L + "'", long73 == 500L);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test7974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7974");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection10 = properties7.values();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj24 = properties21.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties26 = new java.util.Properties(properties14);
        java.lang.String str27 = properties14.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setService("");
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        long long33 = atomikosProperties28.getCheckpointInterval();
        atomikosProperties28.maxTimeout = (-1);
        java.util.Properties properties36 = atomikosProperties28.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long38 = atomikosProperties37.defaultJtaTimeout;
        boolean boolean39 = atomikosProperties37.enableLogging;
        atomikosProperties37.setSerialJtaTransactions(true);
        java.util.Properties properties42 = atomikosProperties37.asProperties();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties36.elements();
        java.util.Properties properties45 = new java.util.Properties(properties36);
        java.lang.Object obj46 = properties14.get((java.lang.Object) properties36);
        java.util.Set<java.lang.String> strSet47 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean49 = atomikosProperties48.forceShutdownOnVmExit;
        atomikosProperties48.setSerialJtaTransactions(true);
        java.lang.String str52 = atomikosProperties48.logBaseName;
        boolean boolean53 = atomikosProperties48.forceShutdownOnVmExit;
        int int54 = atomikosProperties48.maxActives;
        atomikosProperties48.setService("hi!");
        boolean boolean57 = atomikosProperties48.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setService("");
        atomikosProperties58.logBaseDir = "hi!";
        atomikosProperties58.setMaxTimeout(500L);
        atomikosProperties58.maxTimeout = (-1L);
        java.lang.Object obj67 = properties14.getOrDefault((java.lang.Object) boolean57, (java.lang.Object) atomikosProperties58);
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.io.InputStream inputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.loadFromXML(inputStream69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertEquals("'" + obj24 + "' != '" + (-1.0d) + "'", obj24, (-1.0d));
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str27, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(obj67);
    }

    @Test
    public void test7975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7975");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.enableLogging = false;
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        boolean boolean10 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test7976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7976");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj3 = properties0.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        java.util.Properties properties4 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        long long10 = atomikosProperties5.getCheckpointInterval();
        atomikosProperties5.forceShutdownOnVmExit = true;
        boolean boolean13 = atomikosProperties5.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties15 = atomikosProperties14.asProperties();
        java.util.Properties properties16 = atomikosProperties14.asProperties();
        boolean boolean17 = atomikosProperties14.threadedTwoPhaseCommit;
        atomikosProperties14.setCheckpointInterval(0L);
        boolean boolean20 = atomikosProperties14.enableLogging;
        atomikosProperties14.serialJtaTransactions = false;
        atomikosProperties14.setMaxActives((int) (short) 1);
        boolean boolean25 = atomikosProperties14.isForceShutdownOnVmExit();
        java.lang.Object obj26 = properties0.putIfAbsent((java.lang.Object) boolean13, (java.lang.Object) atomikosProperties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setService("");
        atomikosProperties27.logBaseDir = "hi!";
        atomikosProperties27.setMaxTimeout(500L);
        atomikosProperties27.maxTimeout = (-1L);
        atomikosProperties27.serialJtaTransactions = true;
        boolean boolean38 = atomikosProperties27.serialJtaTransactions;
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.util.Enumeration<?> wildcardEnumeration40 = properties39.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties39.entrySet();
        boolean boolean42 = properties0.containsKey((java.lang.Object) properties39);
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test7977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7977");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties8 = atomikosProperties7.asProperties();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.keys();
        java.lang.Object obj13 = properties8.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection14 = properties8.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj18 = properties15.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties20 = new java.util.Properties(properties8);
        java.lang.Object obj21 = properties3.get((java.lang.Object) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean23 = atomikosProperties22.forceShutdownOnVmExit;
        atomikosProperties22.setSerialJtaTransactions(true);
        java.lang.String str26 = atomikosProperties22.logBaseName;
        boolean boolean27 = atomikosProperties22.forceShutdownOnVmExit;
        atomikosProperties22.enableLogging = false;
        int int30 = atomikosProperties22.getMaxActives();
        java.lang.Object obj31 = properties3.remove((java.lang.Object) atomikosProperties22);
        atomikosProperties22.checkpointInterval = (byte) 10;
        atomikosProperties22.service = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        long long36 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties37 = atomikosProperties22.asProperties();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + (-1.0d) + "'", obj18, (-1.0d));
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(properties37);
    }

    @Test
    public void test7978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7978");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.maxActives = 1;
        atomikosProperties0.setEnableLogging(true);
        long long13 = atomikosProperties0.getMaxTimeout();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxTimeout((long) 12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test7979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7979");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties6.keys();
        boolean boolean10 = properties6.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties14 = atomikosProperties13.asProperties();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties14.keys();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection20 = properties14.values();
        boolean boolean21 = properties6.containsKey((java.lang.Object) properties14);
        java.lang.Object obj22 = properties1.get((java.lang.Object) properties6);
        java.util.Set<java.lang.String> strSet23 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        java.util.Properties properties26 = atomikosProperties24.asProperties();
        java.lang.Object obj27 = properties1.remove((java.lang.Object) properties26);
        int int28 = properties26.size();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties33 = atomikosProperties32.asProperties();
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties33.keys();
        boolean boolean37 = properties33.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.lang.Object obj46 = properties41.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection47 = properties41.values();
        boolean boolean48 = properties33.containsKey((java.lang.Object) properties41);
        java.util.Properties properties49 = new java.util.Properties(properties33);
        java.util.Properties properties50 = new java.util.Properties(properties33);
        java.lang.String str51 = properties50.toString();
        java.lang.Object obj54 = properties50.setProperty("tmlog", "");
        java.util.Properties properties55 = new java.util.Properties(properties50);
        java.util.Properties properties56 = new java.util.Properties(properties50);
        java.lang.Object obj57 = properties29.remove((java.lang.Object) properties56);
        java.lang.String str58 = properties29.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties29.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setService("");
        atomikosProperties60.setSerialJtaTransactions(true);
        atomikosProperties60.setEnableLogging(false);
        atomikosProperties60.service = "tmlog";
        atomikosProperties60.threadedTwoPhaseCommit = true;
        boolean boolean71 = atomikosProperties60.isForceShutdownOnVmExit();
        java.util.Properties properties72 = atomikosProperties60.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties74 = atomikosProperties73.asProperties();
        long long75 = atomikosProperties73.getDefaultJtaTimeout();
        long long76 = atomikosProperties73.getDefaultJtaTimeout();
        atomikosProperties73.setForceShutdownOnVmExit(false);
        java.lang.Object obj79 = properties29.getOrDefault((java.lang.Object) atomikosProperties60, (java.lang.Object) atomikosProperties73);
        java.lang.Object obj82 = properties29.setProperty("{}", "hi!");
        int int83 = properties29.size();
        boolean boolean84 = properties26.equals((java.lang.Object) properties29);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 9 + "'", int28 == 9);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test7980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7980");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties4 = atomikosProperties3.asProperties();
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties4.keys();
        boolean boolean8 = properties4.containsValue((java.lang.Object) 0.0f);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties12 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties12.keys();
        java.lang.Object obj17 = properties12.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection18 = properties12.values();
        boolean boolean19 = properties4.containsKey((java.lang.Object) properties12);
        java.util.Properties properties20 = new java.util.Properties(properties4);
        java.util.Properties properties21 = new java.util.Properties(properties4);
        java.lang.String str22 = properties21.toString();
        java.lang.Object obj25 = properties21.setProperty("tmlog", "");
        java.util.Properties properties26 = new java.util.Properties(properties21);
        java.util.Properties properties27 = new java.util.Properties(properties21);
        java.lang.Object obj28 = properties0.remove((java.lang.Object) properties27);
        java.lang.String str29 = properties0.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setService("");
        atomikosProperties31.setSerialJtaTransactions(true);
        atomikosProperties31.setEnableLogging(false);
        atomikosProperties31.service = "tmlog";
        atomikosProperties31.threadedTwoPhaseCommit = true;
        boolean boolean42 = atomikosProperties31.isForceShutdownOnVmExit();
        java.util.Properties properties43 = atomikosProperties31.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        long long46 = atomikosProperties44.getDefaultJtaTimeout();
        long long47 = atomikosProperties44.getDefaultJtaTimeout();
        atomikosProperties44.setForceShutdownOnVmExit(false);
        java.lang.Object obj50 = properties0.getOrDefault((java.lang.Object) atomikosProperties31, (java.lang.Object) atomikosProperties44);
        java.util.Properties properties51 = atomikosProperties31.asProperties();
        boolean boolean52 = atomikosProperties31.serialJtaTransactions;
        java.lang.String str53 = atomikosProperties31.service;
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
    }

    @Test
    public void test7981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7981");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        long long2 = atomikosProperties0.getDefaultJtaTimeout();
        long long3 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.defaultJtaTimeout = (short) 0;
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        atomikosProperties0.enableLogging = false;
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test7982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7982");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str4 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        java.util.Properties properties7 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setService("");
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        long long14 = atomikosProperties9.getCheckpointInterval();
        boolean boolean15 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties0.set(properties7, "tmlog", (java.lang.Object) atomikosProperties9);
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, 100=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        long long24 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}");
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
    }

    @Test
    public void test7983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7983");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        java.lang.Object obj15 = properties1.putIfAbsent((java.lang.Object) objSet13, (java.lang.Object) 1.0f);
        properties1.clear();
        properties1.clear();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream18, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}", "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test7984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7984");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        atomikosProperties0.maxActives = 1;
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.maxTimeout = (-1);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test7985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7985");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties11 = atomikosProperties10.asProperties();
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Collection<java.lang.Object> objCollection14 = properties11.values();
        java.util.Properties properties15 = new java.util.Properties(properties11);
        properties11.clear();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties20 = atomikosProperties19.asProperties();
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.keys();
        java.lang.Object obj25 = properties20.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection26 = properties20.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj30 = properties27.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Properties properties32 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean34 = atomikosProperties33.forceShutdownOnVmExit;
        atomikosProperties33.setSerialJtaTransactions(true);
        java.lang.String str37 = atomikosProperties33.logBaseName;
        atomikosProperties33.service = "tmlog";
        boolean boolean40 = properties32.containsValue((java.lang.Object) "tmlog");
        java.util.Properties properties41 = new java.util.Properties(properties32);
        boolean boolean42 = properties11.contains((java.lang.Object) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setService("");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        long long49 = atomikosProperties44.getCheckpointInterval();
        atomikosProperties44.setMaxTimeout(0L);
        atomikosProperties44.forceShutdownOnVmExit = false;
        atomikosProperties44.setEnableLogging(false);
        atomikosProperties44.setEnableLogging(false);
        java.util.Properties properties58 = atomikosProperties44.asProperties();
        int int59 = properties58.size();
        atomikosProperties0.set(properties32, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) properties58);
        java.io.PrintWriter printWriter61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties58.list(printWriter61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + (-1.0d) + "'", obj30, (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 500L + "'", long49 == 500L);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
    }

    @Test
    public void test7986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7986");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.maxTimeout = (-1);
        atomikosProperties0.setCheckpointInterval((long) 9);
        atomikosProperties0.maxActives = 'a';
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test7987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7987");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj3 = properties0.getOrDefault((java.lang.Object) (short) 1, (java.lang.Object) (-1.0d));
        java.util.Properties properties4 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties6 = atomikosProperties5.asProperties();
        atomikosProperties5.checkpointInterval = 1L;
        boolean boolean9 = atomikosProperties5.forceShutdownOnVmExit;
        long long10 = atomikosProperties5.defaultJtaTimeout;
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        atomikosProperties5.maxTimeout = '4';
        atomikosProperties5.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties5.maxActives = 100;
        boolean boolean18 = properties4.containsValue((java.lang.Object) atomikosProperties5);
        java.util.Properties properties19 = atomikosProperties5.asProperties();
        properties19.clear();
        java.util.Set<java.lang.Object> objSet21 = properties19.keySet();
        org.junit.Assert.assertEquals("'" + obj3 + "' != '" + (-1.0d) + "'", obj3, (-1.0d));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objSet21);
    }

    @Test
    public void test7988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7988");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet8 = properties7.keySet();
        boolean boolean9 = properties1.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties7);
        java.util.Collection<java.lang.Object> objCollection10 = properties7.values();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties7.elements();
        java.util.Set<java.lang.String> strSet12 = properties7.stringPropertyNames();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(objSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test7989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7989");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties1 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 1L;
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties10 = atomikosProperties9.asProperties();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        boolean boolean16 = properties8.replace((java.lang.Object) true, (java.lang.Object) "", (java.lang.Object) properties14);
        java.util.Collection<java.lang.Object> objCollection17 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setService("");
        boolean boolean21 = atomikosProperties18.isEnableLogging();
        java.util.Properties properties22 = atomikosProperties18.asProperties();
        properties22.clear();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties27 = atomikosProperties26.asProperties();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties27.keys();
        java.lang.Object obj31 = properties22.put((java.lang.Object) properties27, (java.lang.Object) (byte) 0);
        java.lang.Object obj32 = properties6.getOrDefault((java.lang.Object) objCollection17, obj31);
        java.util.Properties properties33 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties35 = atomikosProperties34.asProperties();
        java.util.Set<java.lang.String> strSet36 = properties35.stringPropertyNames();
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        java.util.Set<java.lang.String> strSet39 = properties37.stringPropertyNames();
        java.util.Properties properties40 = new java.util.Properties(properties37);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.junit.Assert.assertNotNull(properties1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test7990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7990");
        java.util.Properties properties0 = new java.util.Properties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties1 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties2 = atomikosProperties1.asProperties();
        atomikosProperties1.setLogBaseName("hi!");
        atomikosProperties1.setCheckpointInterval((long) ' ');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        long long12 = atomikosProperties7.getCheckpointInterval();
        atomikosProperties7.maxTimeout = (-1);
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long17 = atomikosProperties16.defaultJtaTimeout;
        boolean boolean18 = atomikosProperties16.enableLogging;
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties21 = atomikosProperties16.asProperties();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties15.elements();
        java.lang.Object obj24 = properties0.putIfAbsent((java.lang.Object) ' ', (java.lang.Object) properties15);
        java.util.Properties properties25 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet26 = properties25.stringPropertyNames();
        org.junit.Assert.assertNotNull(properties2);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test7991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7991");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setService("");
        atomikosProperties7.setSerialJtaTransactions(true);
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.logBaseName = "tmlog";
        int int16 = atomikosProperties7.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setService("");
        atomikosProperties17.setSerialJtaTransactions(true);
        atomikosProperties17.setEnableLogging(false);
        atomikosProperties17.logBaseName = "tmlog";
        atomikosProperties17.maxActives = 1;
        atomikosProperties17.setEnableLogging(true);
        java.lang.String str30 = atomikosProperties17.service;
        atomikosProperties17.setCheckpointInterval((long) (byte) 0);
        long long33 = atomikosProperties17.getDefaultJtaTimeout();
        boolean boolean34 = properties6.remove((java.lang.Object) atomikosProperties7, (java.lang.Object) long33);
        java.lang.String str35 = atomikosProperties7.getLogBaseName();
        java.lang.String str36 = atomikosProperties7.service;
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.transactionManagerUniqueName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=1, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=32, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.lang.String str41 = atomikosProperties7.getService();
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test7992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7992");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(0L);
        long long8 = atomikosProperties0.defaultJtaTimeout;
        long long9 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean10 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        long long13 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.enableLogging = false;
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test7993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7993");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setService("");
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setService("");
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str17 = atomikosProperties10.logBaseName;
        java.lang.Object obj18 = properties3.replace((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties10);
        atomikosProperties5.setService("tmlog");
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties24 = atomikosProperties23.asProperties();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties26 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties30 = atomikosProperties27.asProperties();
        boolean boolean31 = properties24.contains((java.lang.Object) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long33 = atomikosProperties32.defaultJtaTimeout;
        boolean boolean34 = atomikosProperties32.enableLogging;
        atomikosProperties32.setSerialJtaTransactions(true);
        java.util.Properties properties37 = atomikosProperties32.asProperties();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties41 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties41.keys();
        java.lang.Object obj46 = properties41.replace((java.lang.Object) 100.0f, (java.lang.Object) 0.0d);
        java.util.Collection<java.lang.Object> objCollection47 = properties41.values();
        java.util.Set<java.lang.String> strSet48 = properties41.stringPropertyNames();
        boolean boolean49 = properties37.contains((java.lang.Object) properties41);
        boolean boolean50 = properties24.contains((java.lang.Object) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean52 = atomikosProperties51.forceShutdownOnVmExit;
        atomikosProperties51.setSerialJtaTransactions(true);
        java.lang.String str55 = atomikosProperties51.logBaseName;
        atomikosProperties51.service = "tmlog";
        java.util.Properties properties58 = atomikosProperties51.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean60 = atomikosProperties59.forceShutdownOnVmExit;
        atomikosProperties59.setSerialJtaTransactions(true);
        java.lang.String str63 = atomikosProperties59.logBaseName;
        java.lang.Object obj64 = properties24.putIfAbsent((java.lang.Object) properties58, (java.lang.Object) str63);
        java.util.Properties properties65 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.defaultJtaTimeout = (byte) -1;
        int int70 = atomikosProperties67.maxActives;
        boolean boolean71 = atomikosProperties67.isForceShutdownOnVmExit();
        java.util.Properties properties72 = atomikosProperties67.asProperties();
        long long73 = atomikosProperties67.checkpointInterval;
        atomikosProperties67.setTransactionManagerUniqueName("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties5.set(properties24, "", (java.lang.Object) "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, true=true, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties78 = atomikosProperties77.asProperties();
        long long79 = atomikosProperties77.getDefaultJtaTimeout();
        long long80 = atomikosProperties77.getDefaultJtaTimeout();
        boolean boolean81 = atomikosProperties77.serialJtaTransactions;
        java.lang.String str82 = atomikosProperties77.transactionManagerUniqueName;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = properties24.containsValue((java.lang.Object) str82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 500L + "'", long73 == 500L);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 10000L + "'", long79 == 10000L);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 10000L + "'", long80 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test7994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7994");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        int int3 = atomikosProperties0.maxActives;
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        boolean boolean13 = properties9.containsValue((java.lang.Object) 0.0f);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long16 = atomikosProperties15.defaultJtaTimeout;
        boolean boolean17 = atomikosProperties15.enableLogging;
        atomikosProperties15.setSerialJtaTransactions(true);
        java.lang.Object obj20 = properties9.putIfAbsent((java.lang.Object) 100L, (java.lang.Object) true);
        java.util.Properties properties21 = new java.util.Properties(properties9);
        properties9.clear();
        java.util.Set<java.lang.String> strSet23 = properties9.stringPropertyNames();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties25.entrySet();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties32 = atomikosProperties31.asProperties();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.util.Collection<java.lang.Object> objCollection35 = properties32.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setService("");
        boolean boolean39 = atomikosProperties36.isEnableLogging();
        java.util.Properties properties40 = atomikosProperties36.asProperties();
        properties40.clear();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties45 = atomikosProperties44.asProperties();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.keys();
        java.lang.Object obj49 = properties40.put((java.lang.Object) properties45, (java.lang.Object) (byte) 0);
        boolean boolean50 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean52 = atomikosProperties51.forceShutdownOnVmExit;
        atomikosProperties51.setSerialJtaTransactions(true);
        boolean boolean55 = properties45.containsKey((java.lang.Object) atomikosProperties51);
        atomikosProperties51.setTransactionManagerUniqueName("hi!");
        java.lang.String str58 = atomikosProperties51.getService();
        java.lang.String str59 = atomikosProperties51.getTransactionManagerUniqueName();
        boolean boolean60 = properties9.replace((java.lang.Object) properties25, (java.lang.Object) objCollection35, (java.lang.Object) atomikosProperties51);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties65 = atomikosProperties64.asProperties();
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.util.Properties properties67 = new java.util.Properties(properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties69 = atomikosProperties68.asProperties();
        java.util.Set<java.lang.String> strSet70 = properties69.stringPropertyNames();
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        properties69.clear();
        java.util.Set<java.lang.Object> objSet73 = properties69.keySet();
        atomikosProperties0.set(properties25, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}", (java.lang.Object) objSet73);
        atomikosProperties0.maxTimeout = (-1);
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name={com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}}";
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.setService("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.service=, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=1, com.atomikos.icatch.log_base_name=tmlog}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(objSet73);
    }

    @Test
    public void test7995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7995");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties3 = atomikosProperties2.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties5 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties7 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.defaultJtaTimeout = (byte) -1;
        java.util.Properties properties13 = atomikosProperties10.asProperties();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setService("");
        java.lang.String str18 = atomikosProperties15.getService();
        atomikosProperties15.maxTimeout = 1L;
        java.lang.Object obj21 = properties7.put((java.lang.Object) atomikosProperties10, (java.lang.Object) 1L);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties25 = atomikosProperties24.asProperties();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setService("");
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setService("");
        atomikosProperties32.setSerialJtaTransactions(true);
        atomikosProperties32.setEnableLogging(false);
        java.lang.String str39 = atomikosProperties32.logBaseName;
        java.lang.Object obj40 = properties25.replace((java.lang.Object) atomikosProperties27, (java.lang.Object) atomikosProperties32);
        atomikosProperties27.maxActives = (-1);
        atomikosProperties27.setForceShutdownOnVmExit(false);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        boolean boolean47 = properties7.containsValue((java.lang.Object) true);
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test7996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7996");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        properties5.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean8 = atomikosProperties7.forceShutdownOnVmExit;
        atomikosProperties7.setSerialJtaTransactions(true);
        java.lang.String str11 = atomikosProperties7.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties13 = atomikosProperties12.asProperties();
        java.util.Properties properties14 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setService("");
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        long long21 = atomikosProperties16.getCheckpointInterval();
        boolean boolean22 = atomikosProperties16.threadedTwoPhaseCommit;
        atomikosProperties7.set(properties14, "tmlog", (java.lang.Object) atomikosProperties16);
        boolean boolean24 = properties5.containsValue((java.lang.Object) atomikosProperties16);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean27 = atomikosProperties26.forceShutdownOnVmExit;
        atomikosProperties26.setSerialJtaTransactions(true);
        java.lang.String str30 = atomikosProperties26.logBaseName;
        boolean boolean31 = atomikosProperties26.forceShutdownOnVmExit;
        int int32 = atomikosProperties26.maxActives;
        java.lang.String str33 = atomikosProperties26.logBaseName;
        atomikosProperties26.setForceShutdownOnVmExit(true);
        java.util.Properties properties36 = atomikosProperties26.asProperties();
        boolean boolean37 = atomikosProperties26.isForceShutdownOnVmExit();
        java.util.Properties properties38 = atomikosProperties26.asProperties();
        atomikosProperties26.setSerialJtaTransactions(false);
        atomikosProperties26.setCheckpointInterval((long) 'a');
        atomikosProperties26.transactionManagerUniqueName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setService("");
        atomikosProperties45.setSerialJtaTransactions(true);
        atomikosProperties45.setEnableLogging(false);
        atomikosProperties45.logBaseName = "tmlog";
        atomikosProperties45.maxActives = 1;
        atomikosProperties45.setEnableLogging(true);
        long long58 = atomikosProperties45.getMaxTimeout();
        java.lang.String str59 = atomikosProperties45.getTransactionManagerUniqueName();
        atomikosProperties45.setService("hi!");
        java.lang.String str62 = atomikosProperties45.logBaseName;
        java.lang.Object obj63 = properties25.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) str62);
        boolean boolean64 = properties25.isEmpty();
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertEquals("'" + obj63 + "' != '" + "tmlog" + "'", obj63, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test7997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7997");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.forceShutdownOnVmExit = true;
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        int int9 = atomikosProperties0.maxActives;
        atomikosProperties0.maxTimeout = 32L;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test7998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7998");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean10 = atomikosProperties0.enableLogging;
        atomikosProperties0.defaultJtaTimeout = 1;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}";
        java.lang.String str20 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}" + "'", str20, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
    }

    @Test
    public void test7999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test7999");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.enableLogging;
        atomikosProperties0.setMaxActives((int) (byte) 1);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives(0);
        atomikosProperties0.setMaxTimeout((long) 0);
        atomikosProperties0.logBaseName = "{{}=1}";
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test8000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test8000");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("");
        boolean boolean3 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        properties4.clear();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.util.Properties properties9 = atomikosProperties8.asProperties();
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.keys();
        java.lang.Object obj13 = properties4.put((java.lang.Object) properties9, (java.lang.Object) (byte) 0);
        boolean boolean14 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean16 = atomikosProperties15.forceShutdownOnVmExit;
        atomikosProperties15.setSerialJtaTransactions(true);
        boolean boolean19 = properties9.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setLogBaseName("hi!");
        int int22 = atomikosProperties15.getMaxActives();
        atomikosProperties15.setCheckpointInterval((long) (short) -1);
        atomikosProperties15.setLogBaseDir("{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.log_base_name=tmlog}");
        atomikosProperties15.serialJtaTransactions = false;
        long long29 = atomikosProperties15.defaultJtaTimeout;
        atomikosProperties15.logBaseName = "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}";
        java.lang.String str32 = atomikosProperties15.getLogBaseName();
        boolean boolean33 = atomikosProperties15.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}" + "'", str32, "{com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.default_jta_timeout=10000, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.tm_unique_name=hi!, com.atomikos.icatch.max_actives=10, com.atomikos.icatch.log_base_name=tmlog, []=-1.0}");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }
}
